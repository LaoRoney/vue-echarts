{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/coord/geo/geoJSONLoader.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/graphHelper.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/coord/geo/geoSourceManager.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoomInside.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipRichContent.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/theme/dark.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/map/js/world.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/coord/geo/geoSVGLoader.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/chart/helper/focusNodeAdjacencyAction.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/component/dataZoomSlider.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/geo/mapDataStorage.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["_util","__webpack_require__","each","createHashMap","SeriesModel","createListFromArray","_default","extend","type","dependencies","visualColorAccessPath","getInitialData","option","ecModel","source","this","getSource","seriesModel","encodeDefine","parallelModel","getComponent","get","dimensions","axisDim","dataDimIndex","replace","set","setEncodeAndDimensions","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","data","getData","indices","eachActiveState","theActiveState","dataIndex","push","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","show","inactiveOpacity","activeOpacity","lineStyle","width","opacity","emphasis","progressive","smooth","animationEasing","module","exports","zrUtil","VisualMapView","graphic","createSymbol","layout","helper","doRender","thisGroup","group","removeAll","visualMapModel","textGap","textStyleModel","textFont","getFont","textFill","getTextColor","itemAlign","_getItemAlign","itemSize","viewData","_getViewData","endsText","showLabel","retrieve","_renderEndsText","viewPieceList","item","piece","itemGroup","Group","onclick","bind","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","getValueState","add","Text","style","x","y","text","textVerticalAlign","textAlign","box","renderBackground","positionGroup","pieceIndex","onHoverLink","method","hoverLink","api","dispatchAction","batch","makeHighDownBatch","findTargetDataIndices","on","modelOption","orient","getItemAlign","align","map","getPieceList","index","inverse","reverse","slice","shapeParam","getControllerVisual","selected","clone","newKey","getSelectedMapKey","selectedMode","o","key","from","uid","visualMapId","id","echarts","registerAction","event","update","createListSimply","defaultEmphasis","FunnelSeries","extendSeriesModel","init","superApply","arguments","legendDataProvider","getRawData","_defaultLabelLine","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","getDataParams","params","superCall","valueDim","mapDimension","sum","getSum","percent","toFixed","$vars","legendHoverLink","left","top","right","bottom","minSize","maxSize","sort","gap","funnelAlign","position","length","itemStyle","borderColor","borderWidth","dataToCoordSize","dataSize","dataItem","dimIdx","val","halfSize","p1","p2","Math","abs","dataToPoint","rect","getBoundingRect","height","zoom","getZoom","coord","size","BoundingRect","View","geoSourceManager","Geo","name","nameMap","invertLongitute","call","load","_nameCoordMap","nameCoordMap","_regionsMap","regionsMap","_invertLongitute","regions","_rect","boundingRect","doConvert","methodName","finder","value","geoModel","getReferringComponents","prototype","constructor","containCoord","i","contain","transformTo","rawTransformable","_rawTransformable","transform","calculateTransform","decomposeTransform","scale","updateTransform","_updateTransform","getRegion","getRegionByCoord","addGeoCoord","geoCoord","getGeoCoord","noRoam","out","convertToPixel","curry","convertFromPixel","mixin","gridModel","axisModel","opt","grid","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","axisPosition","dim","getRect","rectBound","idx","onZero","axisOffset","posBound","onZeroCoord","toGlobalCoord","dataToCoord","max","min","rotation","PI","labelDirection","tickDirection","nameDirection","labelOffset","labelInside","labelRotate","z2","extendComponentView","render","Rect","shape","defaults","fill","getItemStyle","silent","registerPreprocessor","xAxis","yAxis","updateViewOnPan","controllerHost","dx","dy","target","pos","dirty","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","newZoom","zoomMin","zoomMax","Infinity","zoomScale","ComponentModel","ComponentView","detectSourceFormat","SERIES_LAYOUT_BY_COLUMN","seriesLayoutBy","sourceHeader","optionUpdated","Model","linkList","List","createDimensions","TreeNode","hostTree","depth","parentNode","children","viewChildren","Tree","hostModel","levelOptions","leavesOption","root","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","options","cb","context","isString","order","suppressVisitSub","attr","updateDepthAndHeight","child","getNodeById","getId","len","res","contains","node","getAncestors","includeSelf","ancestors","getValue","dimension","getDimension","setLayout","merge","setItemLayout","getLayout","getItemLayout","getModel","path","itemModel","getItemModel","levelModel","getLevelModel","isExpand","getLeavesModel","setVisual","setItemVisual","getVisual","ignoreParent","getItemVisual","isAncestorOf","parent","isDescendantOf","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","tree","levels","leaves","listData","dimMax","buildHierarchy","dataNode","isArray","addChild","dimensionsInfo","coordDimensions","dimensionsCount","list","initData","mainData","struct","structAttr","__DEV__","VisualMapModel","VisualMapping","visualDefault","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemWidth","itemHeight","itemSymbol","pieceList","categories","splitNumber","itemGap","newOption","isInit","_pieceList","resetExtent","mode","_mode","_determineMode","resetMethods","_resetSelected","resetVisual","mappingOption","state","mappingMethod","dataExtent","getExtent","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","has","obj","visualType","isObject","hasOwnProperty","pieces","v","exists","stateList","apply","thisOption","hasSel","setSelected","findPieceIndex","result","eachTargetSeries","dataIndices","getDataDimension","seriesId","pieceInterval","interval","getVisualMeta","getColorVisual","stops","outerColors","edge","unshift","curr","setStop","valueState","color","precision","parseInt","splitStep","close","formatValueText","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","names","retrieveVisuals","edgeSymbols","zrColor","eventUtil","env","formatUtil","toCamelCase","vendors","assembleCssText","tooltipModel","duration","transitionText","cssText","transitionDuration","backgroundColor","padding","vendorPrefix","join","canvasSupported","toHex","borderName","camelCase","fontSize","round","assembleFont","normalizeCssArray","TooltipContent","container","wxa","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","self","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","e","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","pointerEvents","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","time","setTimeout","isShow","getOuterSize","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","parallelVisual","registerVisual","preprocessor","candlestickVisual","candlestickLayout","registerLayout","Axis","TimelineAxis","coordExtent","axisType","model","getLabelModel","isHorizontal","inherits","subPixelOptimize","createRenderPlanner","parsePercent","retrieve2","LargeArr","Float32Array","Array","seriesType","plan","reset","candleWidth","extent","baseAxis","getBaseAxis","bandWidth","getBandWidth","barMaxWidth","barMinWidth","barWidth","calculateCandleWidth","cDimIdx","vDimIdx","coordDims","cDim","vDims","openDim","closeDim","lowestDim","highestDim","isSimpleBox","progress","pipelineContext","large","point","points","offset","tmpIn","tmpOut","next","axisDimVal","openVal","closeVal","lowestVal","highestVal","isNaN","NaN","getSign","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","ends","addBodyEnd","subPixelOptimizePoint","sign","initBaseline","brushRect","makeBrushRect","p","start","point1","point2","pmin","pmax","RoamController","roamHelper","onIrrelevantElement","getUID","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","regionsGroup","eachChild","otherRegionEl","__regions","region","trigger","isSelected","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","_mapName","_initialized","_regionsGroup","_backgroundGroup","draw","fromView","payload","isGeo","mainType","eachComponent","subType","mapSeries","getHostGeoModel","geo","_updateBackground","childAt","updateProps","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","segmentIgnoreThreshold","paths","dataIdx","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","hoverItemStyle","labelModel","hoverLabelModel","indexOfName","visualColor","geometries","geometry","Polygon","exterior","interiors","setStyle","strokeNoScale","culling","hoverShowLabel","isDataNaN","itemLayout","labelFetcher","query","textEl","center","setLabelStyle","hoverStyle","labelDataIndex","defaultText","useInsideStyle","setItemGraphicEl","eventData","componentType","componentIndex","geoIndex","highDownSilentOnTouch","setHoverStyle","_updateController","mapDraw","off","action","updateMapSelectHandler","remove","dispose","removeGraphic","mapName","makeGraphic","controller","enable","makeActionBase","originX","originY","traverse","setPointerChecker","getViewRectAfterRoam","eachSeriesByType","getGraph","minValue","maxValue","nodeValue","mapValueToColor","mapValueToVisual","customColor","layoutUtil","LegendView","WH","XY","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","removeClipPath","__rectSize","renderInner","legendModel","me","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","icon","createIcon","getOrient","_pageGo","font","layoutInner","isFirstRender","contentGroup","containerGroup","orientIdx","wh","hw","yx","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","mainRect","clipShape","setClipPath","invisible","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","scrollDataIndex","legendId","canJump","childOfName","cursor","pageText","pageFormatter","current","total","pageCount","containerRectSize","xy","targetItemIndex","_findTargetItemIndex","targetItem","itemCount","pCount","pagePrevDataIndex","pageNextDataIndex","targetItemInfo","getItemInfo","s","winStartItemInfo","winEndItemInfo","currItemInfo","intersect","itemRect","__legendDataIndex","itemInfo","winStart","targetDataIndex","defaultIndex","legendDataIdx","ParallelAxis","axisIndex","_model","makeInner","getDataItemValue","getCoordSysDefineBySeries","isTypedArray","isArrayLike","Source","assert","_sourceType","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","inner","normalizeDimensionsDefine","dimensionsDefine","displayName","exist","arrayRowsTravelFirst","maxLoop","value0","doGuessOrdinal","sourceFormat","startIndex","dimIndex","dimName","sample","detectValue","row","isFinite","datasetModel","Error","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","datasetIndex","getDatasetModel","datasetOption","completeResult","dimensionsDetectCount","findPotentialName","potentialNameDimIndex","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","encode","coordSysDefine","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","nameDimIndex","itemName","seriesName","makeDefaultEncode","guessOrdinal","Line","vec2","curveUtil","EffectLine","lineData","seriesScope","createLine","_updateEffectSymbol","effectLineProto","effectModel","symbolType","symbol","_symbolType","setColor","_updateEffectAnimation","period","loop","constantSpeed","delayExpr","isDelayFunc","ignore","updateAnimationPoints","getLineLength","_period","_loop","stopAnimation","delay","__t","animator","animate","when","during","updateSymbolPosition","done","dist","__p1","__cp1","__p2","updateData","cp1","t","quadraticAt","quadraticDerivativeAt","tx","ty","atan2","updateLayout","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","doDispatch","brushSelected","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","area","brushType","selectors","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","isFunction","bSelector","sel","brushModel","setBrushOption","brushOption","brushTargetManager","setInputRanges","areas","throttleType","throttleDelay","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","visualMappings","createVisualMappings","linkOthers","seriesIndex","brushed","eachSeries","hasAxisBrushed","stepAParallel","seriesIndices","indexOf","brushModelNotControll","controlSeries","stepAOthers","seriesBrushSelected","applyVisual","createOrUpdate","fn","lineX","noop","lineY","getBoundingRectFromMinMax","range","polygon","minMax","rg","visualSymbol","layoutPoints","modelUtil","getSeriesByIndex","queryDataIndex","getItemGraphicEl","getTooltipPosition","getValues","applyTransform","getDefaultLabel","SymbolClz","symbolProto","getSymbolSize","symbolSize","getScale","driftSymbol","drift","_createSymbol","keepAspect","symbolPath","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","draggable","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","highDownOnUpdate","fromState","toState","incremental","useHoverLayer","__symbolOriginalScale","ratio","emphasisOpt","animateTo","useStyle","symbolRotate","symbolOffset","hoverAnimation","cursorStyle","hasItemOption","getShallow","elStyle","symbolInnerColor","liftZ","z2Origin","__z2Origin","useNameLabel","getName","isRectText","autoColor","isAnimationEnabled","fadeOut","keepLabel","symbolUtil","extendChartView","polar","oldData","_data","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","pt","cx","cy","diff","polyline","Polyline","newIdx","oldIdx","execute","eachItemGraphicEl","getLineStyle","stroke","areaStyleModel","hoverAreaStyleModel","polygonIgnore","isEmpty","parentModel","hoverPolygonIgnore","getAreaStyle","itemHoverStyle","labelHoverModel","labelDimIndex","AxisBuilder","AxisView","axisBuilderAttrs","selfBuilderAttrs","axisPointerClass","radiusAxisModel","radiusAxis","angleAxis","getAngleAxis","ticksCoords","getTicksCoords","axisAngle","radiusExtent","layoutAxis","axisBuilder","getGroup","isBlank","_splitLine","lineStyleModel","lineColors","lineCount","splitLines","colorIndex","Circle","r","mergePath","_splitArea","areaColors","splitAreas","prevRadius","Sector","r0","startAngle","endAngle","axisHelper","axisModelCommonMixin","_layout","getLayoutRect","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","_symbol","dataStack","createList","createScale","isInstance","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","axisDefault","valueAxisDefault","valueAxis","defaultsShow","extendComponentModel","boundaryGap","axisLine","axisTick","axisLabel","nameTextStyle","showName","nameFormatter","nameGap","triggerEvent","indicatorModels","indicatorOpt","iNameTextStyle","nameLocation","indName","getIndicatorModels","radius","splitLine","splitArea","indicator","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","mapType","coordFix","cp","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","onLeave","record","doEnter","currTrigger","register","records","useHandler","eventType","dis","pendings","showTip","hideTip","pendingList","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","Scale","OrdinalMeta","scaleProto","OrdinalScale","ordinalMeta","_ordinalMeta","_extent","parse","getOrdinal","rank","normalize","getTicks","ticks","getLabel","n","unionExtentFromData","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","niceExtent","create","tooltip","ChartView","Path","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","SKIP_PROPS","CandlestickView","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","hasValue","createNormalBox","setBoxCommon","createLarge","NormalBoxPath","buildPath","ctx","__simpleBox","lineTo","closePath","transInit","normalItemStyleModel","LargeBoxPath","__sign","largePoints","elP","elN","setLargeStyle","suffix","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","midAngle","cos","sin","PiePiece","sector","piePieceProto","firstCreate","labelText","sectorShape","setShape","lineJoin","_updateLabel","hoverIgnore","normalIgnore","labelLayout","linePoints","origin","labelLineModel","labelLineHoverModel","inside","verticalAlign","sectorGroup","_sectorGroup","animationType","onSectorClick","piePiece","_createClipPath","clockwise","clipPath","containPoint","sqrt","simpleLayoutEdge","graph","eachEdge","curveness","node1","node2","simpleLayout","Polar","_axisHelper","CoordinateSystem","updatePolarScale","getRadiusAxis","onBand","setAxis","polarCreator","polarList","polarModel","findAxisModel","angleAxisModel","resizePolar","queryComponents","getSeriesStackId","getAxisKey","lastStackCoords","barWidthAndOffset","barSeries","columnsMap","axisKey","axisExtent","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","maxWidth","barGap","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","stack","lastColumn","widthSum","calRadialBar","filter","getSeriesByType","isSeriesFiltered","columnLayoutInfo","columnOffset","columnWidth","getOtherAxis","barMinHeight","barMinAngle","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","dataToRadius","angle","dataToAngle","angleSpan","mathCos","mathSin","selectableMixin","geoCreator","GeoModel","layoutMode","getFilledRegions","_optionModelMap","reduce","optionModelMap","regionOpt","updateSelectedMap","aspectScale","boundingCoords","scaleLimit","getFormattedLabel","status","formatter","setZoom","setCenter","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","concat","getCoordinateSystems","coordinateSystemCreator","features","ctor","encodeHTML","layoutInfo","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","getRawDataItem","collapsed","formatTooltip","realRoot","roam","nodeScaleRatio","animationDuration","animationDurationUpdate","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","ceil","mathFloor","floor","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","ONE_HOUR","d","getFullYear","getMonth","getDate","minInterval","maxInterval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","a","lo","hi","mid","bisect","level","yearSpan","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","clipOverflow","step","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","Component","parallelAxisIndex","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","mergeOption","_initDimensions","setAxisExpand","axisModels","dependentModels","parallelAxis","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","ancestor","moveSubtree","wl","wr","shift","change","modifier","prelim","defaultSeparation","defaultAncestor","pop","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","getViewRect","getBoxLayoutParams","pathTool","colorTool","matrix","vector","Transformable","ZImage","Image","Ring","BezierCurve","Arc","LinearGradient","RadialGradient","IncrementalDisplayable","subPixelOptimizeUtil","mathMax","mathMin","EMPTY_OBJ","Z2_EMPHASIS_LIFT","EMPHASIS","NORMAL","_highlightNextDigit","_highlightKeyMap","makePath","pathData","opts","createFromString","centerGraphic","resizePath","aspect","m","hasFillOrStroke","fillOrStroke","liftedColorMap","liftedColorCount","singleEnterEmphasis","hoverStl","__hoverStl","__highlighted","__zr","isGroup","elTarget","targetStyle","addHover","rollbackDefaultTextStyle","__hoverStlDirty","normalStyle","__cachedNormalStl","__cachedNormalZ2","cacheElementStl","extendFrom","setDefaultHoverFillStroke","applyDefaultTextStyle","prop","liftedColor","lift","liftColor","singleEnterNormal","highlighted","removeHover","normalStl","normalZ2","traverseUpdate","updater","commonParam","__highDownOnUpdate","setElementHoverStyle","onElementMouseOver","shouldSilent","__highByOuter","onElementMouseOut","onElementEmphasisEvent","highlightDigit","onElementNormalEvent","__highDownSilentOnTouch","zrByTouch","setAsHighDownDispatcher","asDispatcher","disable","__highDownDispatcher","setTextStyle","textStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","insideRollbackOpt","fontStyle","fontWeight","fontFamily","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","insideRollback","useInsideStyleCache","useAutoColorCache","animateOrSetProps","isUpdate","props","animatableModel","postfix","animationDelay","getAnimationDelayParams","invert","getLocalTransform","lineLineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","mx","my","nx","ny","nmCrossProduct","crossProduct2d","b1a1x","b1a1y","q","x1","y1","x2","y2","CACHED_LABEL_STYLE_PROPERTIES","extendShape","extendPath","extendFromString","makeImage","imageUrl","image","onload","img","subPixelOptimizeLine","param","subPixelOptimizeRect","isHighDownDispatcher","getHighlightDigit","highlightKey","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","showNormal","showEmphasis","normalStyleText","emphasisStyleText","modifyLabelStyle","normalStyleProps","emphasisStyleProps","setText","defaultColor","gTextStyleModel","trim","getTransform","mat","identity","mul","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap","elMap1","anid","oldEl","newProp","getAnimatableProps","clipPointsByRect","clipRectByRect","targetRect","iconStr","rectHover","linePolygonIntersect","eventTool","throttle","DataZoomView","sliderMove","linearMap","asc","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","dataZoomModel","_buildView","_updateView","clear","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","layoutParams","getLayoutParams","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","series","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","eachTargetAxis","dimNames","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","stop","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","lineWidth","handleIndex","bRect","handleColor","getPercentRange","viewExtent","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","lastRange","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","barTransform","textPoint","labelFormatter","labelPrecision","getPixelPrecision","valueStr","showOrHide","changed","realtime","_dispatchZoomAction","localPoint","transformCoordToLocal","offsetX","offsetY","dataZoomId","getTargetCoordInfo","coordInfoList","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","link","addEdge","nodeData","coordSysCtor","dimensionNames","edgeData","datas","datasAttr","IndicatorAxis","getScaleExtent","Radar","radarModel","_indicatorAxes","indicatorModel","indicatorAxis","resize","getIndicatorAxes","indicatorIndex","coordToPoint","pointToData","closestAxis","radian","minRadianDiff","closestAxisIdx","coodToData","viewWidth","viewHeight","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","pow","log","LN10","f","rawExtent","fixedMin","fixedMax","getInterval","setInterval","halfSplitNumber","radarList","radar","categoryFilter","categoryVisual","edgeVisual","circularLayout","forceLayout","createView","registerProcessor","POST_CHART_LAYOUT","registerCoordinateSystem","dataFormatMixin","addCommas","fillLabel","MarkerModel","extraOpt","mergeDefaultAndTheme","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","getRawValue","formattedValue","html","setData","_number","viewRect","valueArr","mapArray","isAscending","b","getSortedIndices","sizeExtent","getLinePoints","offY","x0","nextIdx","textX","textY","labelPosition","isLabelInside","labelLineLen","DataDiffer","_layers","layerSeries","getLayerSeries","keyGetter","dataDiffer","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","points1","j","y0","textLayout","margin","layerGroup","stackedOnPoints","stackedOnSmooth","smoothConstraint","rectEl","createGridClipShape","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","removeEC3NormalStatus","compatTextStyle","propName","labelOptSingle","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","toArr","toObj","isTheme","seriesOpt","markPoint","markLine","markArea","links","mpData","mlData","breadcrumb","processSeries","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","calendar","calendarOpt","radarOpt","geoOpt","regionObj","timeline","timelineOpt","toolbox","toolboxOpt","feature","featureOpt","properties","excludes","includes","PI2","RADIAN","minAngle","validDataCount","unitRadian","roseType","stillShowZeroSum","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","paletteScope","categoriesData","getCategoriesData","categoryNameIdxMap","getColorFromPalette","itemStyleList","category","brush","title","keep","dataView","lang","dataZoom","back","magicType","line","bar","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","treemap","boxplot","candlestick","k","heatmap","lines","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","isDataItemOption","DefaultDataProvider","dimSize","seriesDataToSource","_source","_offset","_dimSize","methods","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","dims","newData","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","dimInfo","dimType","parseAndCollect","retrieveRawValue","getProvider","getDimensionInfo","retrieveRawAttr","hasKeys","supplementVisualOption","Creater","mappings","__hidden","visualData","isValidType","__alphaForOpacity","replaceVisualOption","keys","scope","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","prepareVisualTypes","incrementalApplyVisual","getTargetSeries","seriesModelMap","modifyOutputEnd","overallReset","filterData","percentRange","getDataPercentWindow","valueRange","setRawRange","startValue","endValue","OTHER_DIMENSIONS","getOrCreateEncodeArr","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","userOutput","dimItem","coordDimIndex","isExtraCoord","defaultTooltip","encodeArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","getDimensionTypeByAxis","barPolar","borderColorQuery","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","getMarkerPosition","clampData","progressiveChunkMode","DEFAULT_BAR_BOUND","ContinuousModel","calculable","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","resetItemSize","auto","getSelected","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","getAxis","markerHelper","LineDraw","MarkerView","markLineTransform","mlModel","mlType","axisInfo","getAxisInfo","valueDataDim","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","dataTransform","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","containData","markLineFilter","dataFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","markLineModel","fromData","__from","toData","__to","markerGroupMap","renderSeries","seriesData","lineDrawMap","lineDraw","coordDimsInfos","optData","dimValueGetter","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","sankeyLayout","sankeyVisual","_echarts","_export","DATAS","MAIN_DATA","transferInjection","dataType","linkAll","linkSingle","changeInjection","cloneShallowInjection","cloneShallow","getLinkedData","main","TRANSFERABLE_METHODS","wrapMethod","CHANGABLE_METHODS","Region","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","coordModel","getRange","eventName","roamHandlers","coordId","containsPoint","directionInfo","getDirectionInfo","percentPoint","signal","pixelStart","pixelLength","pixel","pan","makeMover","oldX","oldY","newX","newY","scrollMove","scrollDelta","getPercentDelta","percentDelta","oldPoint","newPoint","ret","angleExtent","pointToCoord","singleAxis","coordSysDimDefs","registeredCoordSys","axisMap","getDimensionsInfo","hasNameEncode","dimInfoList","generateCoord","categoryAxisModel","stackCalculationInfo","setCalculationInfo","sampleItem","firstDataNotNull","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","isNumeric","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolMeta","symbolRepeatDirection","animationModel","output","boundingLength","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","getLineScale","prepareLineWidth","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","updateCommon","barRectHoverStyle","barPositionOutside","times","roundedTimes","cartesian","coordSysRect","newIndex","oldIndex","pictorialShapeStr","updateBar","SunburstPiece","that","virtualRoot","newRoot","getViewRoot","renderLabelForZeroData","newChildren","oldChildren","_oldChildren","getKey","processNode","newId","oldId","newNode","oldNode","removeNode","doRenderNode","dualTravel","viewRoot","virtualPiece","_onclickEvent","_rootToNode","renderRollUp","highlightPolicy","onEmphasis","unhighlight","onNormal","_initEvents","targetFound","nodeClick","linkTarget","open","targetNode","TimelineView","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","horizontal","vertical","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","labelRotation","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","translate","rotate","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","fromPos","boundIdx","newGroup","_renderAxisLine","lineCap","_renderAxisTick","tickCoord","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","labels","getViewLabels","labelItem","tickValue","normalLabelModel","formattedLabel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","callback","onCreate","pointer","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","_findNearestTick","trans","axisCoord","nextIndex","noAnimation","dragging","dataBackground","areaStyle","fillerColor","handleIcon","handleSize","handleStyle","showDetail","zoomLock","RADIAN_EPSILON","TIME_REG","quantityExponent","domain","clamp","subDomain","subRange","all","str","match","parseFloat","returnStr","arr","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","pi2","isRadianAroundZero","exec","hour","toUpperCase","UTC","quantity","exponent","quantile","ascArr","H","h","littleThan","currClose","splice","_format","getTooltipMarker","formatTpl","getTooltipRenderMode","DIMENSION_LABEL_REG","rawValue","rawDataIndex","renderModeOption","renderMode","isSeries","componentSubType","marker","labelProp","dimensionIndex","charAt","makeStyleMapper","lineDash","getLineDash","lineType","dotSize","dashSize","setCurrentIndex","isIndexMax","setPlayState","resetOption","preventIncremental","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","hostedBy","getRangePropMode","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","shapes","useHandle","_createBarGroup","outOfRange","createPolygon","inRange","_dragHandle","textRect","getTextRect","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","isEnd","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","colorStops","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","textValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","isTargetSeries","element","global","zrender","timsort","Eventful","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","mapDataStorage","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PROCESSOR","FILTER","STATISTIC","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","COMPONENT","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","toLowerCase","MessageCenter","ECharts","dom","theme","themeStorage","_dom","renderer","devicePixelRatio","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","_api","getComponentByElement","modelInfo","__ecComponentInfo","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_ecEventProcessor","EventProcessor","_messageCenter","_pendingActions","_onframe","ecIns","isFinished","unfinished","bindRenderedEvent","setAsPrimitive","one","echartsProto","doConvertPixel","coordSysList","parseFinder","_disposed","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","error","getOption","getDevicePixelRatio","dpr","getRenderedCanvas","pixelRatio","getSvgDataUrl","svgSupported","storage","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","component","view","__viewId","url","getType","toDataURL","getConnectedDataURL","groupId","connectedGroups","canvasList","instances","chart","canvas","getBoundingClientRect","targetCanvas","createCanvas","connectedBackgroundColor","refreshImmediately","containPixel","models","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","clearColorPalette","setBackgroundColor","colorArr","stringify","performPostUpdateFuncs","componentDirtyList","componentView","__alive","seriesDirtyMap","chartView","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","restorePipelines","prepareStageTasks","prepareView","updateDirectly","condition","excludeSeriesId","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","payloads","batched","eventObj","eventObjBatch","isHighDown","batchItem","sub","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","renderTask","dirtyList","updateZ","renderComponents","updatePayload","perform","getPerformArgs","blendMode","blend","eachPendingDisplayable","displayable","updateBlend","elCount","preventUsingHoverLayer","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","browser","weChat","MOUSE_EVENT_NAMES","eventInfo","eveName","targetEl","packedEvent","zrEventfulCallAtLast","actionType","setAttribute","DOM_ATTRIBUTE_KEY","normalizeQuery","cptQuery","dataQuery","otherQuery","condCptType","suffixes","dataKeys","reserved","propSuffix","suffixPos","args","check","filterForExposedEvent","host","propOnHost","afterTrigger","idBase","groupIdBase","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","preprocessorFunc","priority","processor","normalizeRegister","test","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","getCoordinateSystemDimensions","layoutTask","setCanvasCreator","creator","$override","registerMap","geoJson","specialAreas","getMap","retrieveMap","geoJSON","dataTool","___ec_export","TooltipRichContent","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_renderMode","_newLine","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","triggerOn","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","newLine","markers","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","getAxisRawValue","axisValueLabel","seriesTooltip","newMarkers","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","undefined","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","cbTicket","contentSize","vAlign","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","parsePath","thisParentModel","Ctor","setReadOnly","customizeGetParent","Single","singles","actionTypes","targetInfo","retrieveTargetInfo","originViewRoot","aboveViewRoot","resetViewRoot","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","_createPolyline","polylineProto","_updateCommonStl","hoverLineStyle","legendSelectActionHandler","selectedMap","isToggleSelect","legendData","isItemSelected","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","SymbolDraw","EffectSymbol","pointsLayout","_symbolDraw","effectSymbolDraw","_updateGroupTransform","getRoamTransform","HeatmapLayer","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","coordSysType","dataDims","dataToRect","contentShape","inRangeVisuals","targetVisuals","outOfRangeVisuals","hmLayer","_hmLayer","roamTransform","lng","lat","isInRange","dataSpan","getIsInContinuousRange","lastIndex","getIsInPiecewiseRange","getNormalizer","getColorMapper","curveTool","v1","v2","v3","v2DistSquare","distSquare","mathAbs","intersectCurveCircle","curvePoints","p0","radiusSquare","_t","nextDiff","tmp0","quadraticSubdivide","pts","pts2","__original","originalPoints","copy","scaleAndAdd","snap","triggerTooltip","shadowStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","axisModelCreator","AxisModel","gridIndex","gridId","getAxisType","extraOption","updateCenterAndZoom","seriesGroup","interactionMutex","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","controlType","zoomOnMouseWheel","moveOnMouseMove","moveOnMouseWheel","preventDefaultMouseMove","isDragging","isPinching","_pinching","isMiddleOrRightButtonOnMouseUpDown","isAvailableBehavior","gestureEvent","isTaken","shouldZoom","shouldMove","wheelDelta","absWheelDeltaDelta","factor","checkPointerAndTrigger","absDelta","pinchScale","pinchX","pinchY","behaviorToCheck","contollerEvent","settings","setting","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","makeLineShape","getAxisDimIndex","shadow","makeRectShape","registerAxisPointerClass","SingleAxis","_init","axisPointerEnabled","_adjustAxis","_updateAxisTransform","coordBase","extentSum","toLocalCoord","getAxes","getTooltipAxes","baseAxes","coordToData","parseGeoJson","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","mapRecord","parsed","message","regionName","specialArea","regionRect","union","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","performRawSeries","isLargeRender","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","FunnelPiece","funnelPieceProto","opacityAccessPath","funnelPiece","dataOpt","distance","offsetCenter","detail","dev","dataSelectableMixin","MapSeries","needsDrawMap","dataNameMap","selectTargetList","toAppendNames","geoSource","getMapType","appendValues","seriesNames","otherIndex","originalData","showLegendSymbol","dataRangeHoverLink","NodeHighlightPolicy","NONE","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","visualMetaList","getRootId","getNodeColor","fillDefaultColor","stateStyle","activeNode","policy","onHighlight","onDownplay","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","featureManager","saveAsImageLang","SaveAsImage","unusable","MouseEvent","ie","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","write","$a","download","href","evt","bubbles","cancelable","dispatchEvent","colorPaletteMixin","mergeLayoutParam","createTask","_sourceHelper","dataTask","dataTaskCount","dataTaskReset","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","newSeriesOption","task","getCurrentTask","setOutputEnd","outputData","multipleSeries","isRichText","markerId","formatSingleValue","tooltipDims","tooltipDimLen","isValueArr","vertially","setEachItem","markName","dimHead","dimHeadStr","valStr","formatArrayValue","colorEl","isNameSpecified","colorStr","animationEnabled","requestColorNum","coordDimToDataDim","getAxisTooltipData","pipeTask","nameArr","getSeriesAutoName","dataTaskProgress","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","themeRiverLayout","baseY0","timeDim","layerPoints","singleLayer","base","layerNum","pointNum","sums","temp","l","computeBaseline","baseLine","ky","layerIndex","getNodeGlobalScale","groupScale","groupZoom","colorList","getBorderLineDash","ATTR","giveStore","cleanStore","store","dataZoomInfo","theDataZoomId","theCoordId","dataZoomInfos","newRecord","createController","typePriority","controllerParams","type_true","type_move","type_false","type_undefined","oneType","getPathToRoot","validPayloadTypes","targetNodeId","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","rep","w","fixed","getEdgeByIndex","n1","n2","forceInstance","gravity","oldStep","getNodeByIndex","stopped","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","onZeroRecords","otherAxes","onZeroAxisIndex","canOnZeroToAxis","getOnZeroRecordKey","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","axisExtentSum","updateAxisTransform","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","xAxisModel","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","addAxis","isCartesian2D","axesModels","findAxesModels","otherAxis","axesTypes","grids","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","fadeInItem","SankeyShape","cpx1","cpy1","cpx2","cpy2","bezierCurveTo","_focusAdjacencyDisabled","sankeyView","curve","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","sy","dragX","dragY","localX","localY","edgeDataIndex","focusNodeAdjacency","focusNodeAdj","outEdges","inEdges","unfocusNodeAdjacency","geoJSONLoader","geoSVGLoader","loaders","svg","mapRecords","singleSource","makeInvoker","hostKey","results","makeBackground","_contentGroup","_backgroundEl","_isFirstRender","viewportSize","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","newline","inactiveColor","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","hitRect","formatterParams","legendIndex","dataName","CATEGORY_DEFAULT_VISUAL_INDEX","_normalizeData","normalizers","visualHandler","visualHandlers","_doMap","normalizeVisualRange","hasSpecialVisual","originIndex","preprocessForPiecewise","categoryMap","visualArr","setVisualToOption","preprocessForSpecifiedCategory","normalized","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","fastLerp","parsedVisual","linear","piecewise","getSpecifiedVisual","doMapFixed","colorHue","makePartialColorVisualHandler","modifyHSL","colorSaturation","colorLightness","colorAlpha","modifyAlpha","makeDoMap","getter","setter","symbolCfg","doMapToArray","applyValue","sourceExtent","addVisualHandler","eachVisual","mapVisual","isPrimary","newVisual","newVal","hasVisual","types","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","makeSeriesScope","updateElCommon","_dataGroup","newDataIndex","oldDataIndex","taskParams","active","inactive","_dataProvider","INDEX_NOT_FOUND","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorInt32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareChunks","chunkSize","chunkCount","DataCtor","lastChunkIndex","resizeChunkArray","newStore","prepareInvertedIndex","invertedIndices","getRawValueFromStore","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","originalChunk","newDimStore","getDimensionsOnCoord","dimensionsSummary","nameList","_nameRepeatCount","_dimValueGetter","_dimValueGetterArrayRows","_initDataFromProvider","rawData","values","dimLen","originalChunkCount","emptyDataItem","sourceIdx","dimRawExtent","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","_nameDimIdx","itemId","dimStorage","nameDim","nameDimChunk","getIndices","thisCount","buffer","getByRawIndex","rawIdx","dimStore","_getFast","dimData","initialExtent","dimExtent","currEnd","setApproximateExtent","getCalculationInfo","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","otherList","thisList","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","dimensionInfoList","injectFunction","originalMethod","TYPE_DELIMITER","IS_CONTAINER","classBase","superClass","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","Clz","classAttr","enableClassManagement","entity","registerClass","Clazz","checkClassType","makeContainer","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","hasSubTypes","registerWhenExtend","originalExtend","ignoreSize","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","hasParallelSeries","createParallelIfNeeded","axisOption","parallelOption","mergeAxisOptionFromParallel","isPolyline","isLarge","lineCoords","segCount","totalCoordsCount","getLineCoordsCount","getLineCoords","axisPointerModelHelper","_axisPointer","fixValue","updateAxisPointer","force","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","ec2Types","controlStyle","compatibleEC2","legendModels","findComponents","categoryNames","mapSymbolLayout","mapDataStatistic","createDataSelectAction","effectType","showEffectOn","rippleEffect","barItemStyle","_eventPos","coordinateSystemType","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","cartesian2d","animateProperty","animateTarget","isRadial","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","labelPositionOutside","LargePath","startPoint","__startPoint","baseDimIdx","__baseDimIdx","__largeDataIndices","__barWidth","largePathUpdateDataIndex","largePath","valueDimIdx","largeDataIndices","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","ii","barBaseVal","barValueVal","largePathFindDataIndex","registerSubTypeDefaulter","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","axisDataLen","scaleType","originalExtent","getCategories","setBlank","isBaseAxisAndHasBarSeries","barSeriesModels","adjustedScale","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","makeLabelFormatter","tpl","categoryTickStart","tick","getOptionCategoryInterval","realNumberScaleTicks","tickCount","categoryScaleExtent","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","axisLabelModel","unrotatedSingleRect","singleRect","plain","shouldShowAllLabels","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","taskRecord","_pipelineMap","pCtx","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","modDataCount","modBy","dataLen","threshold","pipelineMap","head","tail","pipe","stageTaskMap","createOnAllSeries","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","removeKey","createSeriesStageTask","overallTaskReset","overallProgress","createStub","getSeries","stubReset","onDirty","stubOnDirty","agent","__block","createOverallStageTask","getUpstream","upstreamContext","stubProgress","getDownstream","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","dataEach","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","lastFrame","frame","lerp","PolarAxisPointer","animationThreshold","coordValue","labelPos","innerTextLayout","getLabelPosition","buildLabelElOption","makeSectorShape","geoCoordMap","Russia","United States","United States of America","_buildAxes","_buildSplitLineAndArea","axisBuilders","splitLineModel","splitAreaModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","themeRiverVisual","componentUtil","boxLayoutMixin","themeModel","newCptOption","fields","optList","Class","enableSubTypeDefaulter","enableTopologicalTravel","deps","v2ApplyTransform","TransformDummy","_roamTransformable","_center","_zoom","setBoundingRect","setViewRect","rawTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","rawTransformMatrix","defaultCenter","roamTransformable","_rawTransform","invTransform","bbox","_oldTree","_updateViewCoordSys","symbolNeedsDraw","updateNode","symbolEl","_nodeScaleRatio","_updateNodeAndLinkScale","fromPoints","viewCoordSys","_viewCoordSys","nodeScale","_getNodeGlobalScale","invScale","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","rad","isLeft","rootLayout","textOrigin","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","eachAfter","eachBefore","newSnapshot","snapshot","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","nameRotate","nameTruncate","ellipsis","placeholder","showMinLabel","showMaxLabel","categoryAxis","deduplication","alignWithLabel","timeAxis","logAxis","logBase","idxMap","concatArray","mergeAll","Uint32Arr","Float64Arr","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","effect","trailLength","autoPositionValues","targetValue","visualCluster","visualObj","controllerVisuals","visualMapping","positionElement","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","LineGroup","_ctor","lineDrawProto","isPointNaN","lineNeedsDraw","isPersistent","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","updateIncrementalAndHover","_clearIncremental","_incremental","clearDisplaybles","_mapDraw","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","assembleOtherSeries","vals","argLen","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","headers","header","items","parseTSVContents","blockMeta","hasName","parseListContents","DataView","tryMergeDataOption","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","removeChild","viewMain","textarea","tables","seriesGroupByCategoryAxis","otherSeries","meta","other","groupSeries","valueAxisDim","columns","getContentFromModel","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","addEventListener","newSeriesOptList","actionInfos","polarOptArr","polarNotRadar","polarOpt","polarIndex","radarIndex","foundAxisModel","layoutBox","boxLayoutParams","positions","bbWidth","bbHeight","BrushController","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","mount","_isZoomActive","featureModel","zoomActive","dataZoomSelectActive","setIconStatus","retrieveAxisSetting","include","setPanels","makePanelOpts","xAxisDeclared","yAxisDeclared","enableBrush","brushStyle","updateZoomBtnStatus","updateBackBtnStatus","handlers","unmount","nextActive","updateCovers","matchOutputRanges","coordRange","setBatch","found","dzModel","findDataZoom","dataZoomOpts","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","coordSysLists","coordIndex","save","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","targetShape","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","__dirty","pointAt","toPos","tangent","tangentAt","__position","halfPercent","__verticalAlign","__textAlign","lineLabelOriginalOpacity","visualOpacity","retrieve3","defaultLabelColor","rawVal","normalText","emphasisText","labelStyle","linePath","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","topologicalTravel","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","existComponent","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","indexAttr","idAttr","nameAttr","queryCond","components","queryResult","oneSeries","getSeriesCount","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","graphicUtil","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","newList","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","copyLayoutParams","mergeNewElOptionToExist","existItem","hv","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","elOptionStyle","textBaseline","elOptionCleaned","LOCATION_PARAMS","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","setEventData","elOptions","parentEl","containerInfo","boundingMode","bounding","straightLineProto","bezierCurveProto","isLine","_buildPathLine","_buildPathCurve","_pointAtLine","_pointAtCurve","_tangentAtCurve","defaultSymbolType","hasSymbolTypeCallback","hasSymbolSizeCallback","hasCallback","seriesSymbol","seriesSymbolSize","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","existence","_add","_update","_remove","newDataIndexMap","oldDataKeyArr","newDataKeyArr","groupData","isNodeDepth","resolveCollisions","nodesByBreadth","nodeGap","keyAttr","nodeDyAttr","relaxRightToLeft","alpha","weightedTarget","getEdgeValue","nodeY","weightedSource","array","relaxLeftToRight","nodeWidth","value1","value2","computeNodeValues","iterations","nodeAlign","remainEdges","indegreeArr","zeroIndegrees","nextTargetNode","maxNodeDepth","isItemDepth","edgeIdx","indexEdge","nodeIndex","maxDepth","nextSourceNode","remainNodes","nodeHeight","skNodeHeight","moveSinksRight","adjustNodeWithNodeAlign","kx","nodeDepth","scaleNodeBreadths","computeNodeBreadths","groupResult","buckets","prepareNodesByBreadth","minKy","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","markerRich","startId","endId","substr","updateMarkerLayout","markPointModel","mpModel","symbolDrawMap","symbolDraw","isFnSymbol","isFnSymbolSize","sizeCalculable","CalendarModel","cellSize","dayLabel","firstDay","monthLabel","yearLabel","mergeAndNormalizeLayoutParams","raw","hvIdx","echartsAPIList","chartInstance","parallelAxisModel","setActiveIntervals","intervals","Parallel","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","fixExtentWithBands","nTick","tickModel","getTickModel","tickCategoryInterval","ticksLen","last","ticksItem","fixOnBandTicksCoords","getRotate","LegendModel","_updateData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","genName","fromZero","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","extra","isValidPoint","getValueMissingPoint","firstPoint","find","createGraphFromNodeEdge","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","getEdgeData","sourceName","targetName","circular","rotateLabel","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","stackResultDim","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","debounceDelay","fnAttr","originFn","lastThrottleType","markerModelKey","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","targetNameList","fullNameList","noEntryList","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationEasingUpdate","roundNumber","_intervalPrecision","thisExtent","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fetchers","fetch","roundingErrorFix","mathPow","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","originalVal","dataColor","radarLayout","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","ToolboxModel","featureName","Feature","showTitle","iconStyle","containLabel","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeModel","nodeLayout","isInView","nodeItemStyleModel","levelItemStyle","visuals","visualName","buildVisuals","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","mapping","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","mapIdToIndex","getValueVisualDefine","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","markerTypeCalculator","average","dataDimToCoordDim","baseDataDim","hasXAndY","hasXOrY","RadiusAxis","radiusToData","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","emptyItemWidth","upperLabel","gapWidth","visualDimension","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","setLayoutInfo","idIndexMap","_idIndexMap","_idIndexMapCount","mapLocation","largeLayout","_graphHelper","_symbolRadiansHalf","_layoutNodesBasedOn","unitAngle","radianHalf","sumRadian","symbolRadianHalf","asin","halfRemainRadian","basedOn","x12","y12","adjustEdge","FOCUS_ADJACENCY","opct","_lineDraw","_firstRender","groupNewProp","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","circularRotateLabel","adjacentEdge","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","maskColor","mask","arc","animateShape","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","containerWidth","containerHeight","rootRect","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","upperHeight","getUpperLabelHeight","estimateRootSize","viewRootLayout","squarify","hideChildren","thisLayout","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","isLeafRoot","initChildren","rowFixedLength","best","score","worst","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","isAboveViewRoot","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","STACK_PREFIX","isOnCartesian","isInLargeMode","seriesInfoList","doCalBarWidthAndOffset","seriesInfo","valueAxisHorizontal","valuePair","pointsOffset","idxOffset","getValueAxisStart","valueStart","getLayoutOnAxis","widthAndOffsets","lastStackCoordsOrigin","isValueAxisH","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","linkedNodesFinder","effectedModels","prepareDataCoordInfo","valueOrigin","getValueStart","baseAxisDim","baseDataOffset","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","RadarSeries","calculateTextPosition","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","disabled","lineContain","quadraticContain","LargeLineShape","segs","quadraticCurveTo","findDataIndex","containStroke","LargeLineDraw","largeLineProto","lineEl","_setCommon","addDisplayable","__startIndex","isIncremental","funnelLayout","getStore","take","resourceKey","userKey","release","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","msg","colorPalette","crossStyle","legend","color0","borderColor0","HIGH_DOWN_PROP","RECORD_VERSION_PROP","mapModel","_renderSymbols","originalDataIndex","fullData","mainSeries","fullIndex","highDownRecord","recordVersion","onRegionHighDown","enterRegionHighDown","toHighOrDown","__mapOriginalZ2","PointerPath","formatLabel","posInfo","parsePosition","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","showAxis","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","tickLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","detailModel","linesLayout","linesVisual","polygonContain","getLineSelectors","xyIndex","inLineRange","layoutRange","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","extraCssText","textContain","AngleAxis","angleToData","ordinalScale","ordinalExtent","unitSpan","unitH","dh","cache","lastAutoInterval","lastTickCount","percentPrecision","borderType","VISUAL_PRIORITY","resultVisual","visualMeta","concreteDim","opacityMap","itemOpacity","LargeSymbolDraw","_updateSymbolDraw","_finished","ThemeRiverSeries","fixData","rawDataLength","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","_updateLineDraw","isSvg","getLayer","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","_clearLayer","hasEffect","_hasEffet","_isPolyline","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","brushHelper","elementList","fromAxisAreaSelect","oldAxisGroup","_axisGroup","coordSysModel","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","_refreshBrushController","extentLen","enableGlobalPan","panelId","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","removeOnClick","activeIntervals","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","clazzUtil","componentProto","splitList","Breadcrumb","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","nodeGroup","background","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","renderNode","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","easing","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_onPan","_onZoom","_clearController","mouseX","mouseY","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","contentWidth","contentHeight","renderContent","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","truncate","outerWidth","outerHeight","minChar","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","zInLevel","zb","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","rawCategoryData","commonLabelModel","labelTextAlign","labelTextVerticalAlign","isLabelSilent","makeAxisEventDataBase","targetType","rawLabel","prevAngle","r1","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","ecUtil","util","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","userConfig","setAreas","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","length2","len2","deltaX","lastY","upList","downList","isPositionCenter","labelLayoutList","hasLabelRotate","minShowLabelRadian","labelLineLen2","x3","leftList","rightList","avoidOverlap","singleAxisHelper","SingleAxisView","selfBuilderAttr","seriesModelMixin","CandlestickSeries","defaultValueDimensions","animationUpdate","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","includeMainTypes","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","findTargetInfo","coordSyses","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getDefaultBrushType","getPanelRect","defaultBrushType","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","coordinates","c","c2","decode","featureObj","setNodePosition","pieLayout","updateController","modelId","$from","IRRELEVANT_EXCLUDES","targetCoordSysModel","topTarget","colorAll","crs","childNum","labelDims","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","_parseSVG","parseSVG","makeViewBoxTransform","originRoot","buildGraphic","field","rootMap","originRootHostKey","svgXML","ignoreViewBox","ignoreRootClip","svgWidth","svgHeight","viewBoxRect","viewBoxTransform","elRoot","LargeSymbolPath","symbolProxy","symbolProxyShape","getContext","afterBrush","setTransform","fillRect","restoreTransform","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_traversalHelper","_layoutHelper","sep","coorX","coorY","finalCoor","commonLayout","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","compare","oldOption","oldOptionBackup","newParsedOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","indices1","indices2","rootDepth","isAsc","sortOrder","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","axisTrigger","collect","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","Cartesian","getAxesByScale","axisX","axisY","xScale","yScale","xAxisExtent","yAxisExtent","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","hasPropModeValue","boundPercent","boundValue","spans","restrictSet","fromWindow","toWindow","fromExtent","toExtent","toValue","seriesExtent","isCategoryAxis","fixExtentByAxis","calculateDataExtent","percentSpan","valueSpan","setMinMaxSpan","dataWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","originalLarge","originalProgressive","checkPropInLink","linkPropValue","axisPropValue","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","axesInfoInCoordSys","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","tooltipAxisPointerModel","volatileOption","labelOption","tooltipAxisPointerLabelShow","makeAxisPointerModel","involveSeries","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","collectSeriesInfo","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","gradient","putImageData","brushCanvas","_brushCanvas","clearRect","beginPath","gradientPixels","pixelsSingleState","Uint8ClampedArray","processedMapType","mapSymbolOffsets","subMapSeries","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","SankeySeries","localPosition","rawDataOpt","layoutIterations","makeAction","Calendar","calendarModel","_rangeInfo","_sw","_sh","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","stackResultDimension","targetData","isStackedByIndex","v0","byValue","stackedDataRawIndex","stackedDimension","stackedByDimension","stackedOver","stackInfo","stackInfoMap","legendFilter","_simpleLayoutHelper","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","radioTypes","radio","newSeriesOpt","currentType","AxisPointerView","fixClipWithShadow","vec2Min","vec2Max","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","prevP","ctrlLen","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","PictorialBarSeries","sunburstLayout","previousZoom","fixX","fixY","_axesLayout","restrict","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWindow","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","nameTruncateMaxWidth","axisNameAvailableWidth","axisLabelShow","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","lenj","getActiveState","getSlidedAxisExpandWindow","behavior","pointCoord","triggerArea","useJump","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","treemapVisual","treemapLayout","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","makeFont","needPutOnTop","topOffset","oldName","isUserFeatureName","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconName","createIconPaths","iconStatus","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","_onHandleDragEnd","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xDimIndex","BoxplotView","constDim","updateNormalBoxData","BoxPath","TimelineModel","SliderTimelineModel","checkpointStyle","playIcon","stopIcon","nextIcon","prevIcon","colorQuery","opacityQuery","restoreLang","Restore","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","updateCache","applyExtraBefore","applyExtraAfter","styleEmphasis","barLayout","currentSeriesIndices","userParams","dataInsideLength","wrapEncodeDef","currDirty","doCreateOrUpdate","isRoot","simplyRemove","elOptionType","elOptionShape","__customGraphicType","getPathData","__customPathData","hasOwn","__customImagePath","__customText","pathRect","transitionProps","targetOpacity","disableStyleEmphasis","__cusHasEmphStl","updateEl","newLen","mergeChildren","$mergeChildren","byName","diffChildrenByName","processAddUpdate","processRemove","childOption","dummyModel","stylePropName","useTransform","setIncrementalAndHoverLayer","elementName","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","autoInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","labelCategoryInterval","categoryInterval","onlyTick","startTick","showAllLabel","includeMinLabel","includeMaxLabel","addItem","tVal","makeCategoryLabels","makeRealNumberLabels","ticksCache","optionTickInterval","labelsResult","makeCategoryTicks","axisRotate","fetchAutoCategoryIntervalCalculationParams","unitW","maxW","maxH","dw","DUMMY_COMPONENT_NAME_PREFIX","cptOption","innerUniqueIndex","subOpts","subOptName","newCptOptions","idMap","existCpt","idNum","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","otherDataIndices","isData","hostObj","parsedKey","queryType","queryParam","domSupported","_setting","_isBlank","_baseAxisDim","addOrdinal","xAxisType","yAxisType","baseAxisDimIndex","baseAxisType","otherAxisType","newOptionData","newItem","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colors","paletteNum","getNearestColorPalette","doneCallback","elExistsMap","fixPosition","renderPlanner","Chart","renderTaskPlan","renderTaskReset","toggleHighlight","chartProto","elSetState","childCount","progressMethodMap","forceFirstProgress","seriesItem","replacableOptionKeys","dataBound","contentColor","getTargetSeriesIndices","optionSeriesIndex","isMinMax","optDim","listDimensions","isCalculationCoord","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","modelHelper","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","setScrollDataIndex","parseXML","rawGeoJson","rawSpecialAreas","parsers","JSON","Function","axisList","groupSeriesByAxis","groupItem","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","boxWidth","calculateBase","halfWidth","median","end1","end2","end4","end5","layEndLine","endCenter","layoutSingleSeries","replaceReg","replaceMap","&","<",">","\"","'","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","truncateText","upperCaseFirst","group1","paramsList","seriesLen","alias","formatTplSimple","isUTC","utc","M","S","getTextBoundingRect","autoPlay","rewind","playInterval","_names","_initData","dataArr","idxArr","positionMap","stackedDim","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","targetDim","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sw","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","resizeGeo","leftTop","rightBottom","boxLayoutOption","useCenterAndSize","setGeoCoords","geoList","mapModelGroupBySeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","pp","friction","v12","nLen","repFact","getSpanSign","extentSpan","handleSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","dataSample","treeLayout","_helper","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","cmd","idx1","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","SingleAxisPointer","getPointDimIndex","ScrollableLegendModel","pageButtonItemGap","pageButtonPosition","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","lineAnimationDiff","_poly","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","forSymbol","createPolarClipShape","xExtent","yExtent","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","getIsIgnoreFunc","isAuto","availSize","canShowAllSymbolForCategory","categoryDataDim","labelMap","lineGroup","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","getStackedOnPoints","isIgnoreFunc","__temp","_step","_newPolygon","isIgnore","_stackedOnPoints","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","getVisualGradient","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","animators","CartesianAxisView","_splitAreaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","prev","MAX_NUMBER","loopGeo","newRegion","parallelPreprocessor","_handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushMode","transformable","inBrush","outOfBrush","Task","define","_reset","_plan","_onDirty","_dirty","taskProto","planResult","upTask","_upstream","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","doProgress","outputDueEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","_callingProgress","downTask","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","localCursorPoint","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","getAvailableSize","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","symbolCtor","_symbolCtor","symbolDrawProto","normalizeUpdateOpt","SymbolCtor","enableAnimation","PieSeries","_createSelectableList","minShowLabelAngle","hoverOffset","avoidLabelOverlap","HV_NAMES","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","vbox","hbox","containerRect","verticalMargin","horizontalMargin","needLocalTransform","elPos","targetOption","hResult","vResult","newParams","newValueCount","merged","mergedValueCount","hasProp","boxplotVisual","boxplotLayout","matrixUtil","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","tickEl","buildAxisTick","labelEls","itemLabelModel","buildAxisLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","truncatedText","__fullText","__truncatedText","axisRotation","firstRect","nextRect","mRotationBack","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","overwrite","dataRange","componentName","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","nw","se","DEFAULT_BRUSH_OPT","baseUID","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","mouseHandlers","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","getPanelByPoint","panel","panels","pn","getPanelByCover","clearCovers","covers","originalLength","getTrackEnds","track","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","localD","localZero","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","doEnableBrush","panelOpts","eachCover","brushOptionList","tmpIdPrefix","oldCovers","newCovers","addOrUpdate","newBrushOption","handleDragEnd","currPanel","setCursorStyle","resetCursor","getLineRenderer","localTrack","_radiusAxis","_angleAxis","maxAngle","Gradient","colorAccessPath","samplers","nearest","indexSampler","sampler","PATH_COLOR","BoxplotSeries","brushLang","Brush","_brushMode","isBrushed","command","paddings","confineInContainer","bgColor","axisDimension","styleModel"],"mappings":"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","file":"js/echarts.3ecc03a5.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.makeHighDownBatch(visualMapModel.findTargetDataIndices(pieceIndex), visualMapModel)\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      zoom: coordSys.getZoom()\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar View = require(\"../View\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.regionsMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n\n  /**\n   * @override\n   */\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndex: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout; // FIXME\n  // Is it needed to trigger zr event manually if\n  // the browser do not support `pointer-events: none`.\n\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // `pointer-events: none` is set to tooltip content div\n      // if `enterable` is set as `false`, and `el.onmousemove`\n      // can not be triggered. But in browser that do not\n      // support `pointer-events`, we need to do this:\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // Because of the reason described in:\n    // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    // we should set initial value to `left` and `top`.\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none'; // If mouse occsionally move over the tooltip, a mouseout event will be\n    // triggered by canvas, and cuase some unexpectable result like dragging\n    // stop, \"unfocusAdjacency\". Here `pointer-events: none` is used to solve\n    // it. Although it is not suppored by IE8~IE10, fortunately it is a rare\n    // scenario.\n\n    el.style.pointerEvents = this._enterable ? 'auto' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  },\n  getOuterSize: function () {\n    var width = this.el.clientWidth;\n    var height = this.el.clientHeight; // Consider browser compatibility.\n    // IE8 does not support getComputedStyle.\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      var stl = document.defaultView.getComputedStyle(this.el);\n\n      if (stl) {\n        width += parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n        height += parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n      }\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoomSlider\");\n\nrequire(\"./dataZoomInside\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _component = require(\"../../util/component\");\n\nvar getUID = _component.getUID;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, regionsGroup, api, fromView) {\n  regionsGroup.off('click');\n  regionsGroup.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    regionsGroup.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    regionsGroup.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, regionsGroup);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, regionsGroup) {\n  // FIXME\n  regionsGroup.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {string}\n   * @private\n   */\n\n  this.uid = getUID('ec_map_draw');\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n  /**\n   * @type {string}\n   */\n\n  this._mapName;\n  /**\n   * @type {boolean}\n   */\n\n  this._initialized;\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._regionsGroup = new graphic.Group());\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._backgroundGroup = new graphic.Group());\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n\n    this._updateBackground(geo);\n\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var scale = geo.scale;\n    var transform = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!regionsGroup.childAt(0) || payload) {\n      group.attr(transform);\n    } else {\n      graphic.updateProps(group, transform, mapOrGeoModel);\n    }\n\n    regionsGroup.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        segmentIgnoreThreshold: 1,\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          segmentIgnoreThreshold: 1,\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            segmentIgnoreThreshold: 1,\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          // FIXME\n          // label rotation is not support yet in geo or regions of series-map\n          // that has no data. The rotation will be effected by this `scale`.\n          // So needed to change to RectText?\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      regionGroup.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n      graphic.setHoverStyle(regionGroup, hoverItemStyle);\n      regionsGroup.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, regionsGroup, api, fromView);\n    updateMapSelected(mapOrGeoModel, regionsGroup);\n  },\n  remove: function () {\n    this._regionsGroup.removeAll();\n\n    this._backgroundGroup.removeAll();\n\n    this._controller.dispose();\n\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = {};\n  },\n  _updateBackground: function (geo) {\n    var mapName = geo.map;\n\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n\n    this._mapName = mapName;\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n\n      if (this._updateGroup) {\n        var scale = this.group.scale;\n\n        this._regionsGroup.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        var customColor = node.getModel().get('itemStyle.color');\n        customColor != null ? node.setVisual('color', customColor) : node.setVisual('color', mapValueToColor);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\n    // e.g., '3/12345' should not overlap with the control arrow button.\n\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize, isFirstRender) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n    // If first rendering, `contentGroup.position` is [0, 0], which\n    // does not make sense and may cause unexepcted animation if adopted.\n\n    if (!isFirstRender) {\n      contentPos[orientIdx] = contentGroup.position[orientIdx];\n    } // Layout container group based on 0.\n\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\n\n    var children = contentGroup.children();\n    var targetItem = children[targetItemIndex];\n    var itemCount = children.length;\n    var pCount = !itemCount ? 0 : 1;\n    var result = {\n      contentPosition: contentGroup.position.slice(),\n      pageCount: pCount,\n      pageIndex: pCount - 1,\n      pagePrevDataIndex: null,\n      pageNextDataIndex: null\n    };\n\n    if (!targetItem) {\n      return result;\n    }\n\n    var targetItemInfo = getItemInfo(targetItem);\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\n    // (1) Always align based on the left/top most item.\n    // (2) It is user-friendly that the last item shown in the\n    // current window is shown at the begining of next window.\n    // Otherwise if half of the last item is cut by the window,\n    // it will have no chance to display entirely.\n    // (3) Consider that item size probably be different, we\n    // have calculate pageIndex by size rather than item index,\n    // and we can not get page index directly by division.\n    // (4) The window is to narrow to contain more than\n    // one item, we should make sure that the page can be fliped.\n\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // Half of the last item is out of the window.\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\n      // can be started at the current item or the last item.\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\n        if (winEndItemInfo.i > winStartItemInfo.i) {\n          winStartItemInfo = winEndItemInfo;\n        } else {\n          // e.g., when page size is smaller than item size.\n          winStartItemInfo = currItemInfo;\n        }\n\n        if (winStartItemInfo) {\n          if (result.pageNextDataIndex == null) {\n            result.pageNextDataIndex = winStartItemInfo.i;\n          }\n\n          ++result.pageCount;\n        }\n      }\n\n      winEndItemInfo = currItemInfo;\n    }\n\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // If the the end item does not intersect with the window started\n      // from the current item, a page can be settled.\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\n      winStartItemInfo.i < winEndItemInfo.i) {\n        winEndItemInfo = winStartItemInfo;\n\n        if (result.pagePrevDataIndex == null) {\n          result.pagePrevDataIndex = winStartItemInfo.i;\n        }\n\n        ++result.pageCount;\n        ++result.pageIndex;\n      }\n\n      winStartItemInfo = currItemInfo;\n    }\n\n    return result;\n\n    function getItemInfo(el) {\n      if (el) {\n        var itemRect = el.getBoundingRect();\n        var start = itemRect[xy] + el.position[orientIdx];\n        return {\n          s: start,\n          e: start + itemRect[wh],\n          i: el.__legendDataIndex\n        };\n      }\n    }\n\n    function intersect(itemInfo, winStart) {\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\n    }\n  },\n  _findTargetItemIndex: function (targetDataIndex) {\n    var index;\n    var contentGroup = this.getContentGroup();\n    var defaultIndex;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child, idx) {\n        var legendDataIdx = child.__legendDataIndex; // FIXME\n        // If the given targetDataIndex (from model) is illegal,\n        // we use defualtIndex. But the index on the legend model and\n        // action payload is still illegal. That case will not be\n        // changed until some scenario requires.\n\n        if (defaultIndex == null && legendDataIdx != null) {\n          defaultIndex = idx;\n        }\n\n        if (legendDataIdx === targetDataIndex) {\n          index = idx;\n        }\n      });\n    }\n\n    return index != null ? index : defaultIndex;\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : symbolPath.cursor;\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.__symbolOriginalScale = getScale(symbolSize);\n  symbolPath.hoverStyle = hoverItemStyle;\n  symbolPath.highDownOnUpdate = hoverAnimation && seriesModel.isAnimationEnabled() ? highDownOnUpdate : null;\n  graphic.setHoverStyle(symbolPath);\n};\n\nfunction highDownOnUpdate(fromState, toState) {\n  // Do not support this hover animation util some scenario required.\n  // Animation can only be supported in hover layer when using `el.incremetal`.\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  if (toState === 'emphasis') {\n    var scale = this.__symbolOriginalScale;\n    var ratio = scale[1] / scale[0];\n    var emphasisOpt = {\n      scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n    }; // FIXME\n    // modify it after support stop specified animation.\n    // toState === fromState\n    //     ? (this.stopAnimation(), this.attr(emphasisOpt))\n\n    this.animateTo(emphasisOpt, 400, 'elasticOut');\n  } else if (toState === 'normal') {\n    this.animateTo({\n      scale: this.__symbolOriginalScale\n    }, 400, 'elasticOut');\n  }\n}\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: defaultText,\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      itemGroup.highDownOnUpdate = function (fromState, toState) {\n        polygon.attr('ignore', toState === 'emphasis' ? hoverPolygonIgnore : polygonIgnore);\n      };\n\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'china') {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  this._updateLabel(data, idx);\n\n  this.highDownOnUpdate = itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled() ? function (fromState, toState) {\n    if (toState === 'emphasis') {\n      labelLine.ignore = labelLine.hoverIgnore;\n      labelText.ignore = labelText.hoverIgnore; // Sector may has animation of updating data. Force to move to the last frame\n      // Or it may stopped on the wrong shape\n\n      sector.stopAnimation(true);\n      sector.animateTo({\n        shape: {\n          r: layout.r + seriesModel.get('hoverOffset')\n        }\n      }, 300, 'elasticOut');\n    } else {\n      labelLine.ignore = labelLine.normalIgnore;\n      labelText.ignore = labelText.normalIgnore;\n      sector.stopAnimation(true);\n      sector.animateTo({\n        shape: {\n          r: layout.r\n        }\n      }, 300, 'elasticOut');\n    }\n  } : null;\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n\n  if (!labelLayout || isNaN(labelLayout.x) || isNaN(labelLayout.y)) {\n    labelText.ignore = labelText.normalIgnore = labelText.hoverIgnore = labelLine.ignore = labelLine.normalIgnore = labelLine.hoverIgnore = true;\n    return;\n  }\n\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(polar, axis) {\n  return axis.dim + polar.model.componentIndex;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisKey = getAxisKey(polar, baseAxis);\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[axisKey][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var cx = seriesModel.coordinateSystem.cx;\n    var cy = seriesModel.coordinateSystem.cy;\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisKey = getAxisKey(polar, baseAxis);\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    // If svg used, aspectScale is 1 by default.\n    // aspectScale: 0.75,\n    aspectScale: null,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as axisHelper from './axisHelper';\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    roam: false,\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.4,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The \"scaleLevels\" was originally copied from \"d3.js\" with some\n* modifications made for this project.\n* (See more details in the comment on the definition of \"scaleLevels\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n});\n/**\n * This implementation was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/time/scale.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 70], // 10w\n['quarter', ONE_DAY * 95], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The tree layoutHelper implementation was originally copied from\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\n* some modifications made for this project.\n* (see more details in the comment of the specific method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n */\n\n/**\n * Initialize all computational message for following algorithm.\n *\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree.\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes all real x-coordinates by summing up the modifiers recursively.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate.\n *\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view.\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n *\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n *\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n *\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Shifts the current subtree rooted at wr.\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\n *\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\nvar subPixelOptimizeUtil = require(\"zrender/lib/graphic/helper/subPixelOptimize\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\nvar Z2_EMPHASIS_LIFT = 1; // key: label model property nane, value: style property name.\n\nvar CACHED_LABEL_STYLE_PROPERTIES = {\n  color: 'textFill',\n  textBorderColor: 'textStroke',\n  textBorderWidth: 'textStrokeWidth'\n};\nvar EMPHASIS = 'emphasis';\nvar NORMAL = 'normal'; // Reserve 0 as default.\n\nvar _highlightNextDigit = 1;\nvar _highlightKeyMap = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  subPixelOptimizeUtil.subPixelOptimizeLine(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nvar subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke !== 'none';\n} // Most lifted color are duplicated.\n\n\nvar liftedColorMap = zrUtil.createHashMap();\nvar liftedColorCount = 0;\n\nfunction liftColor(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  var liftedColor = liftedColorMap.get(color);\n\n  if (!liftedColor) {\n    liftedColor = colorTool.lift(color, -0.1);\n\n    if (liftedColorCount < 10000) {\n      liftedColorMap.set(color, liftedColor);\n      liftedColorCount++;\n    }\n  }\n\n  return liftedColor;\n}\n\nfunction cacheElementStl(el) {\n  if (!el.__hoverStlDirty) {\n    return;\n  }\n\n  el.__hoverStlDirty = false;\n  var hoverStyle = el.__hoverStl;\n\n  if (!hoverStyle) {\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\n    return;\n  }\n\n  var normalStyle = el.__cachedNormalStl = {};\n  el.__cachedNormalZ2 = el.z2;\n  var elStyle = el.style;\n\n  for (var name in hoverStyle) {\n    // See comment in `singleEnterEmphasis`.\n    if (hoverStyle[name] != null) {\n      normalStyle[name] = elStyle[name];\n    }\n  } // Always cache fill and stroke to normalStyle for lifting color.\n\n\n  normalStyle.fill = elStyle.fill;\n  normalStyle.stroke = elStyle.stroke;\n}\n\nfunction singleEnterEmphasis(el) {\n  var hoverStl = el.__hoverStl;\n\n  if (!hoverStl || el.__highlighted) {\n    return;\n  }\n\n  var useHoverLayer = el.useHoverLayer;\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\n  var zr = el.__zr;\n\n  if (el.isGroup || !zr && useHoverLayer) {\n    return;\n  }\n\n  var elTarget = el;\n  var targetStyle = el.style;\n\n  if (useHoverLayer) {\n    elTarget = zr.addHover(el);\n    targetStyle = elTarget.style;\n  }\n\n  rollbackDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    cacheElementStl(elTarget);\n  } // styles can be:\n  // {\n  //    label: {\n  //        show: false,\n  //        position: 'outside',\n  //        fontSize: 18\n  //    },\n  //    emphasis: {\n  //        label: {\n  //            show: true\n  //        }\n  //    }\n  // },\n  // where properties of `emphasis` may not appear in `normal`. We previously use\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n  // But consider rich text and setOption in merge mode, it is impossible to cover\n  // all properties in merge. So we use merge mode when setting style here.\n  // But we choose the merge strategy that only properties that is not `null/undefined`.\n  // Because when making a textStyle (espacially rich text), it is not easy to distinguish\n  // `hasOwnProperty` and `null/undefined` in code, so we trade them as the same for simplicity.\n  // But this strategy brings a trouble that `null/undefined` can not be used to remove\n  // style any more in `emphasis`. Users can both set properties directly on normal and\n  // emphasis to avoid this issue, or we might support `'none'` for this case if required.\n\n\n  targetStyle.extendFrom(hoverStl);\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\n  applyDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    el.dirty(false);\n    el.z2 += Z2_EMPHASIS_LIFT;\n  }\n}\n\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\n    targetStyle[prop] = liftColor(targetStyle[prop]);\n  }\n}\n\nfunction singleEnterNormal(el) {\n  var highlighted = el.__highlighted;\n\n  if (!highlighted) {\n    return;\n  }\n\n  el.__highlighted = false;\n\n  if (el.isGroup) {\n    return;\n  }\n\n  if (highlighted === 'layer') {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    var style = el.style;\n    var normalStl = el.__cachedNormalStl;\n\n    if (normalStl) {\n      rollbackDefaultTextStyle(style);\n      el.setStyle(normalStl);\n      applyDefaultTextStyle(style);\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\n    // when `el` is on emphasis state. So here by comparing with 1, we try\n    // hard to make the bug case rare.\n\n\n    var normalZ2 = el.__cachedNormalZ2;\n\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\n      el.z2 = normalZ2;\n    }\n  }\n}\n\nfunction traverseUpdate(el, updater, commonParam) {\n  // If root is group, also enter updater for `highDownOnUpdate`.\n  var fromState = NORMAL;\n  var toState = NORMAL;\n  var trigger; // See the rule of `highDownOnUpdate` on `graphic.setAsHighDownDispatcher`.\n\n  el.__highlighted && (fromState = EMPHASIS, trigger = true);\n  updater(el, commonParam);\n  el.__highlighted && (toState = EMPHASIS, trigger = true);\n  el.isGroup && el.traverse(function (child) {\n    !child.isGroup && updater(child, commonParam);\n  });\n  trigger && el.__highDownOnUpdate && el.__highDownOnUpdate(fromState, toState);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element, based on the current\n * style of the given `el`.\n * This method should be called after all of the normal styles have been adopted\n * to the `el`. See the reason on `setHoverStyle`.\n *\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\n * @param {Object} [el.hoverStyle] Can be set on el or its descendants,\n *        e.g., `el.hoverStyle = ...; graphic.setHoverStyle(el); `.\n *        Often used when item group has a label element and it's hoverStyle is different.\n * @param {Object|boolean} [hoverStl] The specified hover style.\n *        If set as `false`, disable the hover style.\n *        Similarly, The `el.hoverStyle` can alse be set\n *        as `false` to disable the hover style.\n *        Otherwise, use the default hover style if not provided.\n */\n\n\nfunction setElementHoverStyle(el, hoverStl) {\n  // For performance consideration, it might be better to make the \"hover style\" only the\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\n  hoverStl = el.__hoverStl = hoverStl !== false && (el.hoverStyle || hoverStl || {});\n  el.__hoverStlDirty = true; // FIXME\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\n  // It probably should be saved on `data` of series. Consider the cases:\n  // (1) A highlighted elements are moved out of the view port and re-enter\n  // again by dataZoom.\n  // (2) call `setOption` and replace elements totally when they are highlighted.\n\n  if (el.__highlighted) {\n    // Consider the case:\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\n    // been set outside and the cached \"normal style\" is out of date.\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\n    // of this method. In most cases, `z2` is not set and hover style should be able\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\n    // `doSingleLeaveHover` for details.\n\n    singleEnterNormal(el);\n    singleEnterEmphasis(el);\n  }\n}\n\nfunction onElementMouseOver(e) {\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\n  && !this.__highByOuter && traverseUpdate(this, singleEnterEmphasis);\n}\n\nfunction onElementMouseOut(e) {\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\n  && !this.__highByOuter && traverseUpdate(this, singleEnterNormal);\n}\n\nfunction onElementEmphasisEvent(highlightDigit) {\n  this.__highByOuter |= 1 << (highlightDigit || 0);\n  traverseUpdate(this, singleEnterEmphasis);\n}\n\nfunction onElementNormalEvent(highlightDigit) {\n  !(this.__highByOuter &= ~(1 << (highlightDigit || 0))) && traverseUpdate(this, singleEnterNormal);\n}\n\nfunction shouldSilent(el, e) {\n  return el.__highDownSilentOnTouch && e.zrByTouch;\n}\n/**\n * Set hover style (namely \"emphasis style\") of element,\n * based on the current style of the given `el`.\n *\n * (1)\n * **CONSTRAINTS** for this method:\n * <A> This method MUST be called after all of the normal styles having been adopted\n * to the `el`.\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\n * \"normal style\" having been set to the el.\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\n * a default hover style).\n *\n * The reason: this method treat the current style of the `el` as the \"normal style\"\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\n * logic, where the el should shift from the original emphasis style to the new\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\n *\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\n * not found a better solution yet to fit the backward compatibility, performance and\n * the current programming style.\n *\n * (2)\n * Call the method for a \"root\" element once. Do not call it for each descendants.\n * If the descendants elemenets of a group has itself hover style different from the\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\n * not call this method for them.\n *\n * (3) These input parameters can be set directly on `el`:\n *\n * @param {module:zrender/Element} el\n * @param {Object} [el.hoverStyle] See `graphic.setElementHoverStyle`.\n * @param {boolean} [el.highDownSilentOnTouch=false] See `graphic.setAsHighDownDispatcher`.\n * @param {Function} [el.highDownOnUpdate] See `graphic.setAsHighDownDispatcher`.\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\n */\n\n\nfunction setHoverStyle(el, hoverStyle) {\n  setAsHighDownDispatcher(el, true);\n  traverseUpdate(el, setElementHoverStyle, hoverStyle);\n}\n/**\n * @param {module:zrender/Element} el\n * @param {Function} [el.highDownOnUpdate] Called when state updated.\n *        Since `setHoverStyle` has the constraint that it must be called after\n *        all of the normal style updated, `highDownOnUpdate` is not needed to\n *        trigger if both `fromState` and `toState` is 'normal', and needed to\n *        trigger if both `fromState` and `toState` is 'emphasis', which enables\n *        to sync outside style settings to \"emphasis\" state.\n *        @this {string} This dispatcher `el`.\n *        @param {string} fromState Can be \"normal\" or \"emphasis\".\n *               `fromState` might equal to `toState`,\n *               for example, when this method is called when `el` is\n *               on \"emphasis\" state.\n *        @param {string} toState Can be \"normal\" or \"emphasis\".\n *\n *        FIXME\n *        CAUTION: Do not expose `highDownOnUpdate` outside echarts.\n *        Because it is not a complete solution. The update\n *        listener should not have been mount in element,\n *        and the normal/emphasis state should not have\n *        mantained on elements.\n *\n * @param {boolean} [el.highDownSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conveniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, `highDownSilentOnTouch` should be used to disable\n *        hover-highlight on touch device.\n * @param {boolean} [asDispatcher=true] If `false`, do not set as \"highDownDispatcher\".\n */\n\n\nfunction setAsHighDownDispatcher(el, asDispatcher) {\n  var disable = asDispatcher === false; // Make `highDownSilentOnTouch` and `highDownOnUpdate` only work after\n  // `setAsHighDownDispatcher` called. Avoid it is modified by user unexpectedly.\n\n  el.__highDownSilentOnTouch = el.highDownSilentOnTouch;\n  el.__highDownOnUpdate = el.highDownOnUpdate; // Simple optimize, since this method might be\n  // called for each elements of a group in some cases.\n\n  if (!disable || el.__highDownDispatcher) {\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\n\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually by API or other components like hover link.\n\n    el[method]('emphasis', onElementEmphasisEvent)[method]('normal', onElementNormalEvent); // Also keep previous record.\n\n    el.__highByOuter = el.__highByOuter || 0;\n    el.__highDownDispatcher = !disable;\n  }\n}\n/**\n * @param {module:zrender/src/Element} el\n * @return {boolean}\n */\n\n\nfunction isHighDownDispatcher(el) {\n  return !!(el && el.__highDownDispatcher);\n}\n/**\n * Support hightlight/downplay record on each elements.\n * For the case: hover highlight/downplay (legend, visualMap, ...) and\n * user triggerred hightlight/downplay should not conflict.\n * Only all of the highlightDigit cleared, return to normal.\n * @param {string} highlightKey\n * @return {number} highlightDigit\n */\n\n\nfunction getHighlightDigit(highlightKey) {\n  var highlightDigit = _highlightKeyMap[highlightKey];\n\n  if (highlightDigit == null && _highlightNextDigit <= 32) {\n    highlightDigit = _highlightKeyMap[highlightKey] = _highlightNextDigit++;\n  }\n\n  return highlightDigit;\n}\n/**\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Modify label style manually.\n * Only works after `setLabelStyle` and `setElementHoverStyle` called.\n *\n * @param {module:zrender/src/Element} el\n * @param {Object} [normalStyleProps] optional\n * @param {Object} [emphasisStyleProps] optional\n */\n\n\nfunction modifyLabelStyle(el, normalStyleProps, emphasisStyleProps) {\n  var elStyle = el.style;\n\n  if (normalStyleProps) {\n    rollbackDefaultTextStyle(elStyle);\n    el.setStyle(normalStyleProps);\n    applyDefaultTextStyle(elStyle);\n  }\n\n  elStyle = el.__hoverStl;\n\n  if (emphasisStyleProps && elStyle) {\n    rollbackDefaultTextStyle(elStyle);\n    zrUtil.extend(elStyle, emphasisStyleProps);\n    applyDefaultTextStyle(elStyle);\n  }\n}\n/**\n * Set basic textStyle properties.\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * See more info in `setTextStyleCommon`.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * The uniform entry of set text style, that is, retrieve style definitions\n * from `model` and set to `textStyle` object.\n *\n * Never in merge mode, but in overwrite mode, that is, all of the text style\n * properties will be set. (Consider the states of normal and emphasis and\n * default value can be adopted, merge would make the logic too complicated\n * to manage.)\n *\n * The `textStyle` object can either be a plain object or an instance of\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\n * After this mothod called, the `textStyle` object can then be used in\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\n *\n * Default value will be adopted and `insideRollbackOpt` will be created.\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\n *\n * opt: {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n        // FIXME: consider `label: {formatter: '{a|xx}', color: 'blue', rich: {a: {}}}`,\n        // the default color `'blue'` will not be adopted if no color declared in `rich`.\n        // That might confuses users. So probably we should put `textStyleModel` as the\n        // root ancestor of the `richTextStyle`. But that would be a break change.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      textStyle.insideRollbackOpt = opt;\n      applyDefaultTextStyle(textStyle);\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n/**\n * Give some default value to the input `textStyle` object, based on the current settings\n * in this `textStyle` object.\n *\n * The Scenario:\n * when text position is `inside` and `textFill` is not specified, we show\n * text border by default for better view. But it should be considered that text position\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\n * restore the style.\n *\n * Usage (& NOTICE):\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\n * does, `rollbackDefaultTextStyle` is not needed to be called).\n */\n\n\nfunction applyDefaultTextStyle(textStyle) {\n  var textPosition = textStyle.textPosition;\n  var opt = textStyle.insideRollbackOpt;\n  var insideRollback;\n\n  if (opt && textStyle.textFill == null) {\n    var autoColor = opt.autoColor;\n    var isRectText = opt.isRectText;\n    var useInsideStyle = opt.useInsideStyle;\n    var useInsideStyleCache = useInsideStyle !== false && (useInsideStyle === true || isRectText && textPosition // textPosition can be [10, 30]\n    && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0);\n    var useAutoColorCache = !useInsideStyleCache && autoColor != null; // All of the props declared in `CACHED_LABEL_STYLE_PROPERTIES` are to be cached.\n\n    if (useInsideStyleCache || useAutoColorCache) {\n      insideRollback = {\n        textFill: textStyle.textFill,\n        textStroke: textStyle.textStroke,\n        textStrokeWidth: textStyle.textStrokeWidth\n      };\n    }\n\n    if (useInsideStyleCache) {\n      textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n      if (textStyle.textStroke == null) {\n        textStyle.textStroke = autoColor;\n        textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n      }\n    }\n\n    if (useAutoColorCache) {\n      textStyle.textFill = autoColor;\n    }\n  } // Always set `insideRollback`, so that the previous one can be cleared.\n\n\n  textStyle.insideRollback = insideRollback;\n}\n/**\n * Consider the case: in a scatter,\n * label: {\n *     normal: {position: 'inside'},\n *     emphasis: {position: 'top'}\n * }\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\n * should be retured to 'autoColor', but not keep '#fff'.\n */\n\n\nfunction rollbackDefaultTextStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    // Reset all of the props in `CACHED_LABEL_STYLE_PROPERTIES`.\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n    style.insideRollback = null;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n/**\n * Return `true` if the given line (line `a`) and the given polygon\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n *\n * @param {number} a1x\n * @param {number} a1y\n * @param {number} a2x\n * @param {number} a2y\n * @param {Array.<Array.<number>>} points Points of the polygon.\n * @return {boolean}\n */\n\n\nfunction linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n}\n/**\n * Return `true` if the given two lines (line `a` and line `b`)\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n *\n * @param {number} a1x\n * @param {number} a1y\n * @param {number} a2x\n * @param {number} a2y\n * @param {number} b1x\n * @param {number} b1y\n * @param {number} b2x\n * @param {number} b2y\n * @return {boolean}\n */\n\n\nfunction lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\n  var mx = a2x - a1x;\n  var my = a2y - a1y;\n  var nx = b2x - b1x;\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\n\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\n\n  if (nearZero(nmCrossProduct)) {\n    return false;\n  } // `vec_m` and `vec_n` are intersect iff\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\n\n\n  var b1a1x = a1x - b1x;\n  var b1a1y = a1y - b1y;\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\n\n  if (q < 0 || q > 1) {\n    return false;\n  }\n\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\n\n  if (p < 0 || p > 1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Cross product of 2-dimension vector.\n */\n\n\nfunction crossProduct2d(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\nexports.CACHED_LABEL_STYLE_PROPERTIES = CACHED_LABEL_STYLE_PROPERTIES;\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setElementHoverStyle = setElementHoverStyle;\nexports.setHoverStyle = setHoverStyle;\nexports.setAsHighDownDispatcher = setAsHighDownDispatcher;\nexports.isHighDownDispatcher = isHighDownDispatcher;\nexports.getHighlightDigit = getHighlightDigit;\nexports.setLabelStyle = setLabelStyle;\nexports.modifyLabelStyle = modifyLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\nexports.linePolygonIntersect = linePolygonIntersect;\nexports.lineLineIntersect = lineLineIntersect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect({\n      silent: true,\n      subPixelOptimize: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    }));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r0;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180; // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\n\n  var radius = radarModel.get('radius');\n\n  if (typeof radius === 'string' || typeof radius === 'number') {\n    radius = [0, radius];\n  }\n\n  this.r0 = numberUtil.parsePercent(radius[0], viewSize);\n  this.r = numberUtil.parsePercent(radius[1], viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(this.r0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(echarts.PRIORITY.VISUAL.POST_CHART_LAYOUT, circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center' || labelPosition === 'insideLeft' || labelPosition === 'insideRight';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      if (labelPosition === 'insideLeft') {\n        textX = (points[0][0] + points[3][0]) / 2 + 5;\n        textY = (points[0][1] + points[3][1]) / 2;\n        textAlign = 'left';\n      } else if (labelPosition === 'insideRight') {\n        textX = (points[1][0] + points[2][0]) / 2 - 5;\n        textY = (points[1][1] + points[2][1]) / 2;\n        textAlign = 'right';\n      } else {\n        textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n        textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n        textAlign = 'center';\n      }\n\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else if (labelPosition === 'right') {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      } else if (labelPosition === 'rightTop') {\n        // RightTop side\n        x1 = points[1][0];\n        y1 = points[1][1];\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'top';\n      } else if (labelPosition === 'rightBottom') {\n        // RightBottom side\n        x1 = points[2][0];\n        y1 = points[2][1];\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'bottom';\n      } else if (labelPosition === 'leftTop') {\n        // LeftTop side\n        x1 = points[0][0];\n        y1 = points[1][1];\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else if (labelPosition === 'leftBottom') {\n        // LeftBottom side\n        x1 = points[3][0];\n        y1 = points[2][1];\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n      var itemStyleList = ['opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n      for (var i = 0; i < itemStyleList.length; i++) {\n        var itemStyle = itemModel.getShallow(itemStyleList[i], true);\n\n        if (itemStyle != null) {\n          categoriesData.setItemVisual(idx, itemStyleList[i], itemStyle);\n        }\n      }\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          var itemStyleList = ['color', 'opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n          for (var i = 0; i < itemStyleList.length; i++) {\n            if (data.getItemVisual(idx, itemStyleList[i], true) == null) {\n              data.setItemVisual(idx, itemStyleList[i], categoriesData.getItemVisual(category, itemStyleList[i]));\n            }\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        continue;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\n\n  var userOutput = summary.userOutput = {\n    dimensionNames: data.dimensions.slice(),\n    encode: {}\n  };\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueAxis = axisInfo.valueAxis;\n      var valueDataDim = getStackedDimension(data, axisInfo.valueDataDim);\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/legend\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/dataZoomInside\");\n\nrequire(\"./lib/component/dataZoomSlider\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/visualMapContinuous\");\n\nrequire(\"./lib/component/visualMapPiecewise\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(mapType, regions) {\n  if (mapType === 'china') {\n    regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hence the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var getRange = {};\n        zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n          getRange[eventName] = bind(roamHandlers[eventName], this, coordInfo, coordSysName);\n        }, this);\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          dataZoomModel: dataZoomModel,\n          getRange: getRange\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  }\n});\nvar roamHandlers = {\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  zoom: function (coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [e.originX, e.originY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    var scale = Math.max(1 / e.scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  pan: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n  }),\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  scrollMove: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\n  })\n};\n\nfunction makeMover(getPercentDelta) {\n  return function (coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var percentDelta = getPercentDelta(range, axisModel, coordInfo, coordSysName, controller, e);\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  };\n}\n\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n\n    /* eslint-disable */\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n\n    /* eslint-enable */\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The method \"quantile\" was copied from \"d3.js\".\n* (See more details in the comment of the method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n/**\n * asc sort arr.\n * The input arr will be modified.\n *\n * @param {Array} arr\n * @return {Array} The input arr.\n */\n\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n/* eslint-disable */\n\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/* eslint-enable */\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * This code was copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/arrays/quantile.js>.\n * See the license statement at the head of this file.\n * @param {Array.<number>} ascArr\n */\n\n\nfunction quantile(ascArr, p) {\n  var H = (ascArr.length - 1) * p + 1;\n  var h = Math.floor(H);\n  var v = +ascArr[h - 1];\n  var e = H - h;\n  return e ? v + e * (ascArr[h] - v) : v;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.quantile = quantile;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    var tooltipModel = this.ecModel.getComponent('tooltip');\n    var renderModeOption = tooltipModel && tooltipModel.get('renderMode');\n    var renderMode = getTooltipRenderMode(renderModeOption);\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    var userOutput = data.userOutput;\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      dimensionNames: userOutput ? userOutput.dimensionNames : null,\n      encode: userOutput ? userOutput.encode : null,\n      marker: getTooltipMarker({\n        color: color,\n        renderMode: renderMode\n      }),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex] Only used in some chart that\n   *        use formatter in different dimensions, like radar.\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      params.dimensionIndex = dimIndex;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes); // Always set lineDash whether dashed, otherwise we can not \n    // erase the previous style when assigning to el.style.\n\n    style.lineDash = this.getLineDash(style.lineWidth);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? // Use `false` but not `null` for the solid line here, because `null` might be \n    // ignored when assigning to `el.style`. e.g., when setting `lineStyle.type` as \n    // `'dashed'` and `emphasis.lineStyle.type` as `'solid'` in graph series, the \n    // `lineDash` gotten form the latter one is not able to erase that from the former \n    // one if using `null` here according to the emhpsis strategy in `util/graphic.js`.\n    false : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(resultBatches[0], visualMapModel));\n\n    this._dispatchHighDown('highlight', helper.makeHighDownBatch(resultBatches[1], visualMapModel));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(indices, this.visualMapModel));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.3.0';\nvar dependencies = {\n  zrender: '4.1.0'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 3500;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 fps.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel();\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas); // Background between the charts\n\n    if (opts.connectedBackgroundColor) {\n      zr.add(new graphic.Rect({\n        shape: {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        },\n        style: {\n          fill: opts.connectedBackgroundColor\n        }\n      }));\n    }\n\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    var handler = function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params;\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n      if (isGlobalOut) {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        } // Contract: if params prepared in mouse event,\n      // these properties must be specified:\n      // {\n      //    componentType: string (component main type)\n      //    componentIndex: number\n      // }\n      // Otherwise event query can not work.\n\n\n      if (params) {\n        var componentType = params.componentType;\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n        // markLine/markPoint/markArea, the componentType is\n        // 'markLine'/'markPoint'/'markArea', but we should better\n        // enable them to be queried by seriesIndex, since their\n        // option is set in each series.\n\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n          componentType = 'series';\n          componentIndex = params.seriesIndex;\n        }\n\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n        params.event = e;\n        params.type = eveName;\n        this._ecEventProcessor.eventInfo = {\n          targetEl: el,\n          packedEvent: params,\n          model: model,\n          view: view\n        };\n        this.trigger(eveName, params);\n      }\n    }; // Consider that some component (like tooltip, brush, ...)\n    // register zr event handler, but user event handler might\n    // do anything, such as call `setOption` or `dispatchAction`,\n    // which probably update any of the content and probably\n    // cause problem if it is called previous other inner handlers.\n\n\n    handler.zrEventfulCallAtLast = true;\n\n    this._zr.on(eveName, handler, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(ecIns, ecModel) {\n  var zr = ecIns._zr;\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    elCount++;\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.preventUsingHoverLayer) {\n        return;\n      }\n\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.__alive) {\n        chartView.group.traverse(function (el) {\n          // Don't switch back.\n          el.useHoverLayer = true;\n        });\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @class\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\n\nfunction EventProcessor() {\n  // These info required: targetEl, packedEvent, model, view\n  this.eventInfo;\n}\n\nEventProcessor.prototype = {\n  constructor: EventProcessor,\n  normalizeQuery: function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n        // can not be used in `compomentModel.filterForExposedEvent`.\n        var suffixes = ['Index', 'Name', 'Id'];\n        var dataKeys = {\n          name: 1,\n          dataIndex: 1,\n          dataType: 1\n        };\n        zrUtil.each(query, function (val, key) {\n          var reserved = false;\n\n          for (var i = 0; i < suffixes.length; i++) {\n            var propSuffix = suffixes[i];\n            var suffixPos = key.lastIndexOf(propSuffix);\n\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n              if (mainType !== 'data') {\n                cptQuery.mainType = mainType;\n                cptQuery[propSuffix.toLowerCase()] = val;\n                reserved = true;\n              }\n            }\n          }\n\n          if (dataKeys.hasOwnProperty(key)) {\n            dataQuery[key] = val;\n            reserved = true;\n          }\n\n          if (!reserved) {\n            otherQuery[key] = val;\n          }\n        });\n      }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  },\n  filter: function (eventType, query, args) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  },\n  afterTrigger: function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  }\n};\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Can choose 'canvas' or 'svg' to render the chart.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Array.<Object>|Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example GeoJSON\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n *\n *     $.get('airport.svg', function (svg) {\n *         echarts.registerMap('airport', {\n *             svg: svg\n *         }\n *     });\n *\n *     echarts.registerMap('eu', [\n *         {svg: eu-topographic.svg},\n *         {geoJSON: eu.json}\n *     ])\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName);\n  return records && records[0] && {\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api);\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} [option]\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar _graphHelper = require(\"./graphHelper\");\n\nvar getSymbolSize = _graphHelper.getSymbolSize;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol !== 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol !== 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol !== 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol !== 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // 'line' 'shadow' 'cross' 'none'.\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n\n      /* eslint-disable */\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n\n      /* eslint-enable */\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseMove=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseWheel=false] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      // By default, wheel do not trigger move.\n      moveOnMouseWheel: false,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  trigger(this, 'pan', 'moveOnMouseMove', e, {\n    dx: dx,\n    dy: dy,\n    oldX: oldX,\n    oldY: oldY,\n    newX: x,\n    newY: y\n  });\n}\n\nfunction mouseup(e) {\n  if (!eventTool.isMiddleOrRightButtonOnMouseUpDown(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\n  var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\n  var wheelDelta = e.wheelDelta;\n  var absWheelDeltaDelta = Math.abs(wheelDelta);\n  var originX = e.offsetX;\n  var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\n\n  if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\n    return;\n  } // If both `shouldZoom` and `shouldMove` is true, trigger\n  // their event both, and the final behavior is determined\n  // by event listener themselves.\n\n\n  if (shouldZoom) {\n    // Convenience:\n    // Mac and VM Windows on Mac: scroll up: zoom out.\n    // Windows: scroll up: zoom in.\n    // FIXME: Should do more test in different environment.\n    // wheelDelta is too complicated in difference nvironment\n    // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\n    // although it has been normallized by zrender.\n    // wheelDelta of mouse wheel is bigger than touch pad.\n    var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\n    var scale = wheelDelta > 0 ? factor : 1 / factor;\n    checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\n      scale: scale,\n      originX: originX,\n      originY: originY\n    });\n  }\n\n  if (shouldMove) {\n    // FIXME: Should do more test in different environment.\n    var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\n\n    var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\n    checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\n      scrollDelta: scrollDelta,\n      originX: originX,\n      originY: originY\n    });\n  }\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  checkPointerAndTrigger(this, 'zoom', null, e, {\n    scale: scale,\n    originX: e.pinchX,\n    originY: e.pinchY\n  });\n}\n\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\n  }\n}\n\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  // Also provide behavior checker for event listener, for some case that\n  // multiple components share one listener.\n  contollerEvent.isAvailableBehavior = zrUtil.bind(isAvailableBehavior, null, behaviorToCheck, e);\n  controller.trigger(eventName, contollerEvent);\n} // settings: {\n//     zoomOnMouseWheel\n//     moveOnMouseMove\n//     moveOnMouseWheel\n// }\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n\n\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\n  var setting = settings[behaviorToCheck];\n  return !behaviorToCheck || setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Built-in GEO fixer.\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {regions, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var parsed = inner(mapRecord).parsed;\n\n    if (parsed) {\n      return parsed;\n    }\n\n    var specialAreas = mapRecord.specialAreas || {};\n    var geoJSON = mapRecord.geoJSON;\n    var regions; // https://jsperf.com/try-catch-performance-overhead\n\n    try {\n      regions = geoJSON ? parseGeoJson(geoJSON) : [];\n    } catch (e) {\n      throw new Error('Invalid geoJson format\\n' + e.message);\n    }\n\n    each(regions, function (region) {\n      var regionName = region.name;\n      fixTextCoord(mapName, region);\n      fixGeoCoord(mapName, region);\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    });\n    fixNanhai(mapName, regions);\n    return inner(mapRecord).parsed = {\n      regions: regions,\n      boundingRect: getBoundingRect(regions)\n    };\n  }\n};\n\nfunction getBoundingRect(regions) {\n  var rect;\n\n  for (var i = 0; i < regions.length; i++) {\n    var regionRect = regions[i].getBoundingRect();\n    rect = rect || regionRect.clone();\n    rect.union(regionRect);\n  }\n\n  return rect;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n\n  this.highDownOnUpdate = function (fromState, toState) {\n    if (toState === 'emphasis') {\n      labelLine.ignore = labelLine.hoverIgnore;\n      text.ignore = text.hoverIgnore;\n    } else {\n      labelLine.ignore = labelLine.normalIgnore;\n      text.ignore = text.normalIgnore;\n    }\n  };\n\n  this.updateData(data, idx, true);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  getInitialData: function (option) {\n    var data = createListSimply(this, ['value']);\n    var valueDim = data.mapDimension('value');\n    var dataNameMap = zrUtil.createHashMap();\n    var selectTargetList = [];\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name = data.getName(i);\n      dataNameMap.set(name, true);\n      selectTargetList.push({\n        name: name,\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        selectTargetList.push({\n          name: name\n        });\n        toAppendNames.push(name);\n      }\n    });\n    this.updateSelectedMap(selectTargetList); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  // _fillOption: function (option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout(); // if (!layout) {\n  //     console.log(node.getLayout());\n  // }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  fillDefaultColor(node, seriesModel, visualColor);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, state, null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n} // Fix tooltip callback function params.color incorrect when pick a default color\n\n\nfunction fillDefaultColor(node, seriesModel, color) {\n  var data = seriesModel.getData();\n  data.setItemVisual(node.dataIndex, 'color', color);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8Array */\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  connectedBackgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var type = model.get('type', true) || 'png';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    connectedBackgroundColor: model.get('connectedBackgroundColor'),\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  }); // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var $a = document.createElement('a');\n    $a.download = title + '.' + type;\n    $a.target = '_blank';\n    $a.href = url;\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @param {string} [renderMode='html'] valid values: 'html' and 'richText'.\n   *                                     'html' is used for rendering tooltip in extra DOM form, and the result\n   *                                     string is used as DOM HTML content.\n   *                                     'richText' is used for rendering tooltip in rich text form, for those where\n   *                                     DOM operation is not supported.\n   * @return {Object} formatted tooltip with `html` and `markers`\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\n    var series = this;\n    renderMode = renderMode || 'html';\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\n    var isRichText = renderMode === 'richText';\n    var markers = {};\n    var markerId = 0;\n\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var markName = 'sub' + series.seriesIndex + 'at' + markerId;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem',\n          renderMode: renderMode,\n          markerId: markName\n        });\n        var dimHeadStr = typeof dimHead === 'string' ? dimHead : dimHead.content;\n        var valStr = (vertially ? dimHeadStr + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n\n        if (isRichText) {\n          markers[markName] = color;\n          ++markerId;\n        }\n      }\n\n      var newLine = vertially ? isRichText ? '\\n' : '<br/>' : '';\n      var content = newLine + result.join(newLine || ', ');\n      return {\n        renderMode: renderMode,\n        content: content,\n        style: markers\n      };\n    }\n\n    function formatSingleValue(val) {\n      // return encodeHTML(addCommas(val));\n      return {\n        renderMode: renderMode,\n        content: encodeHTML(addCommas(val)),\n        style: markers\n      };\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var content = formattedValue.content;\n    var markName = series.seriesIndex + 'at' + markerId;\n    var colorEl = getTooltipMarker({\n      color: color,\n      type: 'item',\n      renderMode: renderMode,\n      markerId: markName\n    });\n    markers[markName] = color;\n    ++markerId;\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? newLine : ': ') : '';\n    var colorStr = typeof colorEl === 'string' ? colorEl : colorEl.content;\n    var html = !multipleSeries ? seriesName + colorStr + (name ? encodeHTML(name) + ': ' + content : content) : colorStr + seriesName + content;\n    return {\n      html: html,\n      markers: markers\n    };\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getNodeGlobalScale(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys.type !== 'view') {\n    return 1;\n  }\n\n  var nodeScaleRatio = seriesModel.option.nodeScaleRatio;\n  var groupScale = coordSys.scale;\n  var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n  var roamZoom = coordSys.getZoom();\n  var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n  return nodeScale / groupZoom;\n}\n\nfunction getSymbolSize(node) {\n  var symbolSize = node.getVisual('symbolSize');\n\n  if (symbolSize instanceof Array) {\n    symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n  }\n\n  return +symbolSize;\n}\n\nexports.getNodeGlobalScale = getNodeGlobalScale;\nexports.getSymbolSize = getSymbolSize;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {Object} dataZoomInfo.getRange\n * @param {Function} dataZoomInfo.getRange.pan\n * @param {Function} dataZoomInfo.getRange.zoom\n * @param {Function} dataZoomInfo.getRange.scrollMove\n * @param {boolean} dataZoomInfo.dataZoomModel\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.dataZoomModel.get('throttle', true), 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n    controller.on(eventName, function (event) {\n      var batch = [];\n      zrUtil.each(newRecord.dataZoomInfos, function (info) {\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\n        // moveOnMouseWheel, ...) enabled.\n        if (!event.isAvailableBehavior(info.dataZoomModel.option)) {\n          return;\n        }\n\n        var method = (info.getRange || {})[eventName];\n        var range = method && method(newRecord.controller, event);\n        !info.dataZoomModel.get('disabled', true) && range && batch.push({\n          dataZoomId: info.dataZoomId,\n          start: range[0],\n          end: range[1]\n        });\n      });\n      batch.length && newRecord.dispatchAction(batch);\n    });\n  });\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  var preventDefaultMouseMove = true;\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var dataZoomModel = dataZoomInfo.dataZoomModel;\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\n    // users may be confused why it does not work when multiple insideZooms exist.\n\n\n    preventDefaultMouseMove &= dataZoomModel.get('preventDefaultMouseMove', true);\n  });\n  return {\n    controlType: controlType,\n    opt: {\n      // RoamController will enable all of these functionalities,\n      // and the final behavior is determined by its event listener\n      // provided by each inside zoom.\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      moveOnMouseWheel: true,\n      preventDefaultMouseMove: !!preventDefaultMouseMove\n    }\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (typeof targetNode === 'string') {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries, 'value');\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0,\n    orient: ''\n  },\n  buildPath: function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _focusAdjacencyDisabled: false,\n  render: function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.off('mouseover').on('mouseover', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              dataIndex: el.dataIndex\n            });\n          }\n        });\n        el.off('mouseout').on('mouseout', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'unfocusNodeAdjacency',\n              seriesId: seriesModel.id\n            });\n          }\n        });\n      }\n    });\n    edgeData.eachItemGraphicEl(function (el, dataIndex) {\n      var edgeModel = edgeData.getItemModel(dataIndex);\n\n      if (edgeModel.get('focusNodeAdjacency')) {\n        el.off('mouseover').on('mouseover', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              edgeDataIndex: el.dataIndex\n            });\n          }\n        });\n        el.off('mouseout').on('mouseout', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'unfocusNodeAdjacency',\n              seriesId: seriesModel.id\n            });\n          }\n        });\n      }\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {},\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var itemModel = data.getItemModel(dataIndex);\n    var edgeDataIndex = payload.edgeDataIndex;\n\n    if (dataIndex == null && edgeDataIndex == null) {\n      return;\n    }\n\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      var focusNodeAdj = itemModel.get('focusNodeAdjacency');\n\n      if (focusNodeAdj === 'outEdges') {\n        zrUtil.each(node.outEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node2, nodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'inEdges') {\n        zrUtil.each(node.inEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node1, nodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'allEdges') {\n        zrUtil.each(node.edges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node1, nodeOpacityPath);\n          fadeInItem(edge.node2, nodeOpacityPath);\n        });\n      }\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getGraph();\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  }\n}); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\nvar geoJSONLoader = require(\"./geoJSONLoader\");\n\nvar geoSVGLoader = require(\"./geoSVGLoader\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar loaders = {\n  geoJSON: geoJSONLoader,\n  svg: geoSVGLoader\n};\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} nameMap\n   * @return {Object} source {regions, regionsMap, nameCoordMap, boundingRect}\n   */\n  load: function (mapName, nameMap) {\n    var regions = [];\n    var regionsMap = createHashMap();\n    var nameCoordMap = createHashMap();\n    var boundingRect;\n    var mapRecords = retrieveMap(mapName);\n    each(mapRecords, function (record) {\n      var singleSource = loaders[record.type].load(mapName, record);\n      each(singleSource.regions, function (region) {\n        var regionName = region.name; // Try use the alias in geoNameMap\n\n        if (nameMap && nameMap.hasOwnProperty(regionName)) {\n          region = region.cloneShallow(regionName = nameMap[regionName]);\n        }\n\n        regions.push(region);\n        regionsMap.set(regionName, region);\n        nameCoordMap.set(regionName, region.center);\n      });\n      var rect = singleSource.boundingRect;\n\n      if (rect) {\n        boundingRect ? boundingRect.union(rect) : boundingRect = rect.clone();\n      }\n    });\n    return {\n      regions: regions,\n      regionsMap: regionsMap,\n      nameCoordMap: nameCoordMap,\n      // FIXME Always return new ?\n      boundingRect: boundingRect || new BoundingRect(0, 0, 0, 0)\n    };\n  },\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   * @return {Array.<module:zrender/Element>} Roots.\n   */\n  makeGraphic: makeInvoker('makeGraphic'),\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   */\n  removeGraphic: makeInvoker('removeGraphic')\n};\n\nfunction makeInvoker(methodName) {\n  return function (mapName, hostKey) {\n    var mapRecords = retrieveMap(mapName);\n    var results = [];\n    each(mapRecords, function (record) {\n      var method = loaders[record.type][methodName];\n      method && results.push(method(mapName, record, hostKey));\n    });\n    return results;\n  };\n}\n\nfunction mapNotExistsError(mapName) {}\n\nfunction retrieveMap(mapName) {\n  var mapRecords = mapDataStorage.retrieveMap(mapName) || [];\n  return mapRecords;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n    /**\n     * If first rendering, `contentGroup.position` is [0, 0], which\n     * does not make sense and may cause unexepcted animation if adopted.\n     * @private\n     * @type {boolean}\n     */\n\n    this._isFirstRender = true;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  },\n\n  /**\n   * @protected\n   */\n  remove: function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float64Array, Int32Array, Uint32Array, Uint16Array */\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar INDEX_NOT_FOUND = -1; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorInt32Array = typeof Int32Array === UNDEFINED ? Array : Int32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n  /**\n   * User output info of this data.\n   * DO NOT use it in other places!\n   *\n   * When preparing user params for user callbacks, we have\n   * to clone these inner data structures to prevent users\n   * from modifying them to effect built-in logic. And for\n   * performance consideration we make this `userOutput` to\n   * avoid clone them too many times.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.userOutput = this._dimensionsSummary.userOutput;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * The meanings of the input parameter `dim`:\n *\n * + If dim is a number (e.g., `1`), it means the index of the dimension.\n *   For example, `getDimension(0)` will return 'x' or 'lng' or 'radius'.\n * + If dim is a number-like string (e.g., `\"1\"`):\n *     + If there is the same concrete dim name defined in `this.dimensions`, it means that concrete name.\n *     + If not, it will be converted to a number, which means the index of the dimension.\n *        (why? because of the backward compatbility. We have been tolerating number-like string in\n *        dimension setting, although now it seems that it is not a good idea.)\n *     For example, `visualMap[i].dimension: \"1\"` is the same meaning as `visualMap[i].dimension: 1`,\n *     if no dimension name is defined as `\"1\"`.\n * + If dim is a not-number-like string, it means the concrete dim name.\n *   For example, it can be be default name `\"x\"`, `\"y\"`, `\"z\"`, `\"lng\"`, `\"lat\"`, `\"angle\"`, `\"radius\"`,\n *   or customized in `dimensions` property of option like `\"age\"`.\n *\n * Get dimension name\n * @param {string|number} dim See above.\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (typeof dim === 'number' // If being a number-like string but not being defined a dimension name.\n  || !isNaN(dim) && !this._dimensionInfos.hasOwnProperty(dim)) {\n    dim = this.dimensions[dim];\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter;\n  this._dimValueGetterArrayRows = defaultDimValueGetters.arrayRows; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n */\n\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n * This method does not modify `rawData` (`dataProvider`), but only\n * add values to storage.\n *\n * The final count will be increased by `Math.max(values.length, names.length)`.\n *\n * @param {Array.<Array.<*>>} values That is the SourceType: 'arrayRows', like\n *        [\n *            [12, 33, 44],\n *            [NaN, 43, 1],\n *            ['-', 'asdf', 0]\n *        ]\n *        Each item is exaclty cooresponding to a dimension.\n * @param {Array.<string>} [names]\n */\n\n\nlistProto.appendValues = function (values, names) {\n  var chunkSize = this._chunkSize;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var rawExtent = this._rawExtent;\n  var start = this.count();\n  var end = start + Math.max(values.length, names ? names.length : 0);\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, this._dimensionInfos[dim], chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var emptyDataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    var sourceIdx = idx - start;\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n\n      var val = this._dimValueGetterArrayRows(values[sourceIdx] || emptyDataItem, dim, sourceIdx, k);\n\n      storage[dim][chunkIndex][chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    }\n\n    if (names) {\n      this._nameList[idx] = names[sourceIdx];\n    }\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, dimInfo, chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareChunks(storage, dimInfo, chunkSize, chunkCount, end) {\n  var DataCtor = dataCtors[dimInfo.type];\n  var lastChunkIndex = chunkCount - 1;\n  var dim = dimInfo.name;\n  var resizeChunkArray = storage[dim][lastChunkIndex];\n\n  if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n    var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n    // within the initial chunkSize.\n\n    for (var j = 0; j < resizeChunkArray.length; j++) {\n      newStore[j] = resizeChunkArray[j];\n    }\n\n    storage[dim][lastChunkIndex] = newStore;\n  } // Create new chunks.\n\n\n  for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n    storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n  }\n}\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorInt32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as INDEX_NOT_FOUND.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = INDEX_NOT_FOUND;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    // Ordinal type originally can be string or number.\n    // But when an ordinal type is used on coord, it can\n    // not be string but only number. So we can also use isNaN.\n    if (isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return INDEX_NOT_FOUND;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textVerticalAlign: null\n    // textBaseline: null // The same as textVerticalAlign.\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textVerticalAlign = zrUtil.retrieve2(titleModel.get('textBaseline'), titleModel.get('textVerticalAlign'));\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    var triggerEvent = titleModel.get('triggerEvent', true);\n    textEl.silent = !link && !triggerEvent;\n    subTextEl.silent = !sublink && !triggerEvent;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    textEl.eventData = subTextEl.eventData = triggerEvent ? {\n      componentType: 'title',\n      componentIndex: titleModel.componentIndex\n    } : null;\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textVerticalAlign) {\n      textVerticalAlign = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textVerticalAlign === 'center') {\n        textVerticalAlign = 'middle';\n      }\n\n      if (textVerticalAlign === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textVerticalAlign === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textVerticalAlign = textVerticalAlign || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      subPixelOptimize: true,\n      silent: true\n    });\n    group.add(rect);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: data.getLayout('largeDataIndices'),\n    __barWidth: data.getLayout('barWidth')\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        // For category axis, get raw value; for numeric axis,\n        // get foramtted label like '1,333,444'.\n        val = axis.scale.getLabel(val);\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n/**\n * @param {module:echarts/src/model/Model} model axisLabelModel or axisTickModel\n * @return {number|String} Can be null|'auto'|number|function\n */\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n/**\n * Set `categoryInterval` as 0 implicitly indicates that\n * show all labels reguardless of overlap.\n * @param {Object} axis axisModel.axis\n * @return {boolean}\n */\n\n\nfunction shouldShowAllLabels(axis) {\n  return axis.type === 'category' && getOptionCategoryInterval(axis.getLabelModel()) === 0;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;\nexports.getOptionCategoryInterval = getOptionCategoryInterval;\nexports.shouldShowAllLabels = shouldShowAllLabels;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  /* eslint-disable */\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n  /* eslint-enable */\n\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'world') {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      max[0] += 1;\n      min[0] -= 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      max[1] += 1;\n      min[1] -= 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0,\n          strokeNoScale: true\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint32Array, Float64Array, Float32Array */\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id == null ? '' + dataIndex : '' + id;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton);\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected,\n        seriesId: payload.seriesId\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices !== 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices !== 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line',\n    subPixelOptimize: true\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  targetShape.x1 = points[0][0];\n  targetShape.y1 = points[0][1];\n  targetShape.x2 = points[1][0];\n  targetShape.y2 = points[1][1];\n  targetShape.percent = 1;\n  var cp1 = points[2];\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label',\n    // FIXME\n    // Temporary solution for `focusNodeAdjacency`.\n    // line label do not use the opacity of lineStyle.\n    lineLabelOriginalOpacity: 1\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @param {string} subType.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // info: custom info. enables user to mount some info on elements and use them\n    //      in event handlers. Update them only when user specified, otherwise, remain.\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   */\n  _updateElements: function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elOptionStyle = elOption.style;\n\n      if (elOption.type === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = el.eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = el.info;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    this[isLine(shape) ? '_buildPathLine' : '_buildPathCurve'](ctx, shape);\n  },\n  _buildPathLine: straightLineProto.buildPath,\n  _buildPathCurve: bezierCurveProto.buildPath,\n  pointAt: function (t) {\n    return this[isLine(this.shape) ? '_pointAtLine' : '_pointAtCurve'](t);\n  },\n  _pointAtLine: straightLineProto.pointAt,\n  _pointAtCurve: bezierCurveProto.pointAt,\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : this._tangentAtCurve(t);\n    return vec2.normalize(p, p);\n  },\n  _tangentAtCurve: bezierCurveProto.tangentAt\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isFunction = _util.isFunction;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol');\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      var hasSymbolTypeCallback = isFunction(symbolType);\n      var hasSymbolSizeCallback = isFunction(symbolSize);\n      var hasCallback = hasSymbolTypeCallback || hasSymbolSizeCallback;\n      var seriesSymbol = !hasSymbolTypeCallback && symbolType ? symbolType : defaultSymbolType;\n      var seriesSymbolSize = !hasSymbolSizeCallback ? symbolSize : null;\n      data.setVisual({\n        legendSymbol: legendSymbol || seriesSymbol,\n        // If seting callback functions on `symbol` or `symbolSize`, for simplicity and avoiding\n        // to bring trouble, we do not pick a reuslt from one of its calling on data item here,\n        // but just use the default value. Callback on `symbol` or `symbolSize` is convenient in\n        // some cases but generally it is not recommanded.\n        symbol: seriesSymbol,\n        symbolSize: seriesSymbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      function dataEach(data, idx) {\n        if (hasCallback) {\n          var rawValue = seriesModel.getRawValue(idx);\n          var params = seriesModel.getDataParams(idx);\n          hasSymbolTypeCallback && data.setItemVisual(idx, 'symbol', symbolType(rawValue, params));\n          hasSymbolSizeCallback && data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    var orient = seriesModel.get('orient');\n    var nodeAlign = seriesModel.get('nodeAlign');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign);\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\n  computeEdgeDepths(nodes, orient);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n *\n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextTargetNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  var maxNodeDepth = -1; // Traversing nodes using topological sorting to calculate the\n  // horizontal(if orient === 'horizontal') or vertical(if orient === 'vertical')\n  // position of the nodes.\n\n  while (zeroIndegrees.length) {\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\n      var node = zeroIndegrees[idx];\n      var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n      var isItemDepth = item.depth != null && item.depth >= 0;\n\n      if (isItemDepth && item.depth > maxNodeDepth) {\n        maxNodeDepth = item.depth;\n      }\n\n      node.setLayout({\n        depth: isItemDepth ? item.depth : x\n      }, true);\n      orient === 'vertical' ? node.setLayout({\n        dy: nodeWidth\n      }, true) : node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var edgeIdx = 0; edgeIdx < node.outEdges.length; edgeIdx++) {\n        var edge = node.outEdges[edgeIdx];\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0 && nextTargetNode.indexOf(targetNode) < 0) {\n          nextTargetNode.push(targetNode);\n        }\n      }\n    }\n\n    ++x;\n    zeroIndegrees = nextTargetNode;\n    nextTargetNode = [];\n  }\n\n  for (i = 0; i < remainEdges.length; i++) {\n    if (remainEdges[i] === 1) {\n      throw new Error('Sankey is a DAG, the original data has cycle!');\n    }\n  }\n\n  var maxDepth = maxNodeDepth > x - 1 ? maxNodeDepth : x - 1;\n\n  if (nodeAlign && nodeAlign !== 'left') {\n    adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth);\n  }\n\n  var kx = orient === 'vertical' ? (height - nodeWidth) / maxDepth : (width - nodeWidth) / maxDepth;\n  scaleNodeBreadths(nodes, kx, orient);\n}\n\nfunction isNodeDepth(node) {\n  var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n  return item.depth != null && item.depth >= 0;\n}\n\nfunction adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth) {\n  if (nodeAlign === 'right') {\n    var nextSourceNode = [];\n    var remainNodes = nodes;\n    var nodeHeight = 0;\n\n    while (remainNodes.length) {\n      for (var i = 0; i < remainNodes.length; i++) {\n        var node = remainNodes[i];\n        node.setLayout({\n          skNodeHeight: nodeHeight\n        }, true);\n\n        for (var j = 0; j < node.inEdges.length; j++) {\n          var edge = node.inEdges[j];\n\n          if (nextSourceNode.indexOf(edge.node1) < 0) {\n            nextSourceNode.push(edge.node1);\n          }\n        }\n      }\n\n      remainNodes = nextSourceNode;\n      nextSourceNode = [];\n      ++nodeHeight;\n    }\n\n    zrUtil.each(nodes, function (node) {\n      if (!isNodeDepth(node)) {\n        node.setLayout({\n          depth: Math.max(0, maxDepth - node.getLayout().skNodeHeight)\n        }, true);\n      }\n    });\n  } else if (nodeAlign === 'justify') {\n    moveSinksRight(nodes, maxDepth);\n  }\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes.  node of sankey view.\n * @param {number} maxDepth.  use to assign to node without outEdges as x-position.\n */\n\n\nfunction moveSinksRight(nodes, maxDepth) {\n  zrUtil.each(nodes, function (node) {\n    if (!isNodeDepth(node) && !node.outEdges.length) {\n      node.setLayout({\n        depth: maxDepth\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx, orient) {\n  zrUtil.each(nodes, function (node) {\n    var nodeDepth = node.getLayout().depth * kx;\n    orient === 'vertical' ? node.setLayout({\n      y: nodeDepth\n    }, true) : node.setLayout({\n      x: nodeDepth\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\n  var nodesByBreadth = prepareNodesByBreadth(nodes, orient);\n  initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient);\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n  }\n}\n\nfunction prepareNodesByBreadth(nodes, orient) {\n  var nodesByBreadth = [];\n  var keyAttr = orient === 'vertical' ? 'y' : 'x';\n  var groupResult = groupData(nodes, function (node) {\n    return node.getLayout()[keyAttr];\n  });\n  groupResult.keys.sort(function (a, b) {\n    return a - b;\n  });\n  zrUtil.each(groupResult.keys, function (key) {\n    nodesByBreadth.push(groupResult.buckets.get(key));\n  });\n  return nodesByBreadth;\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient) {\n  var minKy = Infinity;\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = orient === 'vertical' ? (width - (n - 1) * nodeGap) / sum : (height - (n - 1) * nodeGap) / sum;\n\n    if (ky < minKy) {\n      minKy = ky;\n    }\n  });\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      var nodeDy = node.getLayout().value * minKy;\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          x: i\n        }, true);\n        node.setLayout({\n          dx: nodeDy\n        }, true);\n      } else {\n        node.setLayout({\n          y: i\n        }, true);\n        node.setLayout({\n          dy: nodeDy\n        }, true);\n      }\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * minKy;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    nodes.sort(function (a, b) {\n      return a.getLayout()[keyAttr] - b.getLayout()[keyAttr];\n    });\n    var nodeX;\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var nodeDyAttr = orient === 'vertical' ? 'dx' : 'dy';\n\n    for (var i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout()[keyAttr];\n\n      if (dy > 0) {\n        nodeX = node.getLayout()[keyAttr] + dy;\n        orient === 'vertical' ? node.setLayout({\n          x: nodeX\n        }, true) : node.setLayout({\n          y: nodeX\n        }, true);\n      }\n\n      y0 = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap;\n    }\n\n    var viewWidth = orient === 'vertical' ? width : height; // If the bottommost node goes outside the bounds, push it back up\n\n    dy = y0 - nodeGap - viewWidth;\n\n    if (dy > 0) {\n      nodeX = node.getLayout()[keyAttr] - dy;\n      orient === 'vertical' ? node.setLayout({\n        x: nodeX\n      }, true) : node.setLayout({\n        y: nodeX\n      }, true);\n      y0 = nodeX;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeX = node.getLayout()[keyAttr] - dy;\n          orient === 'vertical' ? node.setLayout({\n            x: nodeX\n          }, true) : node.setLayout({\n            y: nodeX\n          }, true);\n        }\n\n        y0 = node.getLayout()[keyAttr];\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue, orient);\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge, orient) {\n  return center(edge.node2, orient) * edge.getValue();\n}\n\nfunction weightedSource(edge, orient) {\n  return center(edge.node1, orient) * edge.getValue();\n}\n\nfunction center(node, orient) {\n  return orient === 'vertical' ? node.getLayout().x + node.getLayout().dx / 2 : node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nfunction sum(array, f, orient) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], orient);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue, orient);\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(function (a, b) {\n      return a.node2.getLayout()[keyAttr] - b.node2.getLayout()[keyAttr];\n    });\n    node.inEdges.sort(function (a, b) {\n      return a.node1.getLayout()[keyAttr] - b.node1.getLayout()[keyAttr];\n    });\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Group from 'zrender/src/container/Group';\n\n/**\n * @alias module:echarts/component/tooltip/TooltipRichContent\n * @constructor\n */\nfunction TooltipRichContent(api) {\n  this._zr = api.getZr();\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n}\n\nTooltipRichContent.prototype = {\n  constructor: TooltipRichContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {// noop\n  },\n  show: function (tooltipModel) {\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n    }\n\n    this.el.attr('show', true);\n    this._show = true;\n  },\n\n  /**\n   * Set tooltip content\n   *\n   * @param {string} content rich text string of content\n   * @param {Object} markerRich rich text style\n   * @param {Object} tooltipModel tooltip model\n   */\n  setContent: function (content, markerRich, tooltipModel) {\n    if (this.el) {\n      this._zr.remove(this.el);\n    }\n\n    var markers = {};\n    var text = content;\n    var prefix = '{marker';\n    var suffix = '|}';\n    var startId = text.indexOf(prefix);\n\n    while (startId >= 0) {\n      var endId = text.indexOf(suffix);\n      var name = text.substr(startId + prefix.length, endId - startId - prefix.length);\n\n      if (name.indexOf('sub') > -1) {\n        markers['marker' + name] = {\n          textWidth: 4,\n          textHeight: 4,\n          textBorderRadius: 2,\n          textBackgroundColor: markerRich[name],\n          // TODO: textOffset is not implemented for rich text\n          textOffset: [3, 0]\n        };\n      } else {\n        markers['marker' + name] = {\n          textWidth: 10,\n          textHeight: 10,\n          textBorderRadius: 5,\n          textBackgroundColor: markerRich[name]\n        };\n      }\n\n      text = text.substr(endId + 1);\n      startId = text.indexOf('{marker');\n    }\n\n    this.el = new Text({\n      style: {\n        rich: markers,\n        text: content,\n        textLineHeight: 20,\n        textBackgroundColor: tooltipModel.get('backgroundColor'),\n        textBorderRadius: tooltipModel.get('borderRadius'),\n        textFill: tooltipModel.get('textStyle.color'),\n        textPadding: tooltipModel.get('padding')\n      },\n      z: tooltipModel.get('z')\n    });\n\n    this._zr.add(this.el);\n\n    var self = this;\n    this.el.on('mouseover', function () {\n      // clear the timeout in hideLater and keep showing tooltip\n      if (self._enterable) {\n        clearTimeout(self._hideTimeout);\n        self._show = true;\n      }\n\n      self._inContent = true;\n    });\n    this.el.on('mouseout', function () {\n      if (self._enterable) {\n        if (self._show) {\n          self.hideLater(self._hideDelay);\n        }\n      }\n\n      self._inContent = false;\n    });\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var bounding = this.el.getBoundingRect();\n    return [bounding.width, bounding.height];\n  },\n  moveTo: function (x, y) {\n    if (this.el) {\n      this.el.attr('position', [x, y]);\n    }\n  },\n  hide: function () {\n    if (this.el) {\n      this.el.hide();\n    }\n\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  },\n  getOuterSize: function () {\n    var size = this.getSize();\n    return {\n      width: size[0],\n      height: size[1]\n    };\n  }\n};\nvar _default = TooltipRichContent;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbol = itemModel.getShallow('symbol');\n      var symbolSize = itemModel.getShallow('symbolSize');\n      var isFnSymbol = zrUtil.isFunction(symbol);\n      var isFnSymbolSize = zrUtil.isFunction(symbolSize);\n\n      if (isFnSymbol || isFnSymbolSize) {\n        var rawIdx = mpModel.getRawValue(idx);\n        var dataParams = mpModel.getDataParams(idx);\n\n        if (isFnSymbol) {\n          symbol = symbol(rawIdx, dataParams);\n        }\n\n        if (isFnSymbolSize) {\n          // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n          symbolSize = symbolSize(rawIdx, dataParams);\n        }\n      }\n\n      mpData.setItemVisual(idx, {\n        symbol: symbol,\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\n    // this case.\n\n    if (dataDims.length === 1 && !isString(dataDims[0]) && dataDims[0] < 0) {\n      encodeDef.set(coordDim, false);\n      return;\n    }\n\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\n\n    if (dataDims === false) {\n      return;\n    }\n\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n    zrUtil.each(axes, function (axis, axisIndex) {\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\n        points[dataIndex] = points[dataIndex] || [];\n        var point = coordSys.dataToPoint(val, axisIndex);\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\n      });\n    }); // Close polygon\n\n    data.each(function (idx) {\n      // TODO\n      // Is it appropriate to connect to the next data when some data is missing?\n      // Or, should trade it like `connectNull` in line chart?\n      var firstPoint = zrUtil.find(points[idx], function (point) {\n        return isValidPoint(point);\n      }) || getValueMissingPoint(coordSys); // Copy the first actual point to the end of the array\n\n      points[idx].push(firstPoint.slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nfunction isValidPoint(point) {\n  return !isNaN(point[0]) && !isNaN(point[1]);\n}\n\nfunction getValueMissingPoint(coordSys) {\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\n  // (probably cause problem when refreshing or animating)\n  return [coordSys.cx, coordSys.cy];\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      }\n    },\n    // textStyle: {},\n    // feature\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n  preventUsingHoverLayer: true,\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(echarts.PRIORITY.VISUAL.LAYOUT, zrUtil.curry(layout, 'bar')); // Use higher prority to avoid to be blocked by other overall layout, which do not\n// only exist in this module, but probably also exist in other modules, like `barPolar`.\n\necharts.registerLayout(echarts.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar _graphHelper = require(\"./graphHelper\");\n\nvar getSymbolSize = _graphHelper.getSymbolSize;\nvar getNodeGlobalScale = _graphHelper.getNodeGlobalScale;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\nvar _symbolRadiansHalf = [];\n/**\n * `basedOn` can be:\n * 'value':\n *     This layout is not accurate and have same bad case. For example,\n *     if the min value is very smaller than the max value, the nodes\n *     with the min value probably overlap even though there is enough\n *     space to layout them. So we only use this approach in the as the\n *     init layout of the force layout.\n *     FIXME\n *     Probably we do not need this method any more but use\n *     `basedOn: 'symbolSize'` in force layout if\n *     delay its init operations to GraphView.\n * 'symbolSize':\n *     This approach work only if all of the symbol size calculated.\n *     That is, the progressive rendering is not applied to graph.\n *     FIXME\n *     If progressive rendering is applied to graph some day,\n *     probably we have to use `basedOn: 'value'`.\n *\n * @param {module:echarts/src/model/Series} seriesModel\n * @param {string} basedOn 'value' or 'symbolSize'\n */\n\nfunction circularLayout(seriesModel, basedOn) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  var count = nodeData.count();\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n\n  if (!count) {\n    return;\n  }\n\n  _layoutNodesBasedOn[basedOn](seriesModel, coordSys, graph, nodeData, r, cx, cy, count);\n\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nvar _layoutNodesBasedOn = {\n  value: function (seriesModel, coordSys, graph, nodeData, r, cx, cy, count) {\n    var angle = 0;\n    var sum = nodeData.getSum('value');\n    var unitAngle = Math.PI * 2 / (sum || count);\n    graph.eachNode(function (node) {\n      var value = node.getValue('value');\n      var radianHalf = unitAngle * (sum ? value : 1) / 2;\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  },\n  symbolSize: function (seriesModel, coordSys, graph, nodeData, r, cx, cy, count) {\n    var sumRadian = 0;\n    _symbolRadiansHalf.length = count;\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    graph.eachNode(function (node) {\n      var symbolSize = getSymbolSize(node); // Normally this case will not happen, but we still add\n      // some the defensive code (2px is an arbitrary value).\n\n      isNaN(symbolSize) && (symbolSize = 2);\n      symbolSize < 0 && (symbolSize = 0);\n      symbolSize *= nodeScale;\n      var symbolRadianHalf = Math.asin(symbolSize / 2 / r); // when `symbolSize / 2` is bigger than `r`.\n\n      isNaN(symbolRadianHalf) && (symbolRadianHalf = PI / 2);\n      _symbolRadiansHalf[node.dataIndex] = symbolRadianHalf;\n      sumRadian += symbolRadianHalf * 2;\n    });\n    var halfRemainRadian = (2 * PI - sumRadian) / count / 2;\n    var angle = 0;\n    graph.eachNode(function (node) {\n      var radianHalf = halfRemainRadian + _symbolRadiansHalf[node.dataIndex];\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  }\n};\nexports.circularLayout = circularLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar _graphHelper = require(\"./graphHelper\");\n\nvar getNodeGlobalScale = _graphHelper.getNodeGlobalScale;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FOCUS_ADJACENCY = '__focusNodeAdjacency';\nvar UNFOCUS_ADJACENCY = '__unfocusNodeAdjacency';\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  var opacity = item.getVisual('opacity');\n  return opacity != null ? opacity : item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (!child.isGroup) {\n      var opct = child.lineLabelOriginalOpacity;\n\n      if (opct == null || opacityRatio != null) {\n        opct = opacity;\n      }\n\n      child.setStyle('opacity', opct);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl(); // Should go back to normal opacity first, consider hoverLayer,\n  // where current state is copied to elMirror, and support\n  // emphasis opacity here.\n\n  el.traverse(function (child) {\n    !child.isGroup && child.setStyle('opacity', opacity);\n  });\n  el.highlight && el.highlight();\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = itemModel.get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el[FOCUS_ADJACENCY] && el.off('mouseover', el[FOCUS_ADJACENCY]);\n      el[UNFOCUS_ADJACENCY] && el.off('mouseout', el[UNFOCUS_ADJACENCY]);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el[FOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el[UNFOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el[FOCUS_ADJACENCY] && el.off('mouseover', el[FOCUS_ADJACENCY]);\n      el[UNFOCUS_ADJACENCY] && el.off('mouseout', el[UNFOCUS_ADJACENCY]);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el[FOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el[UNFOCUS_ADJACENCY] = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx);\n      var labelRotate = itemModel.get('label.rotate') || 0;\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        graphic.modifyLabelStyle(symbolPath, {\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        }, {\n          textPosition: textPosition\n        });\n      } else {\n        graphic.modifyLabelStyle(symbolPath, {\n          textRotation: labelRotate *= Math.PI / 180\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The treemap layout implementation was originally copied from\n* \"d3.js\" with some modifications made for this project.\n* (See more details in the comment of the method \"squarify\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * The original presentation of this algorithm\n * was made by Mark Bruls, Kees Huizing, and Jarke J. van Wijk\n * <https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf>.\n * The implementation of this algorithm was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/layout/treemap.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx); // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n      if (isNaN(value) || isNaN(baseValue)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var count = params.count;\n      var largePoints = new LargeArr(count * 2);\n      var largeDataIndices = new LargeArr(count);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var pointsOffset = 0;\n      var idxOffset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord); // Data index might not be in order, depends on `progressiveChunkMode`.\n\n        largePoints[pointsOffset++] = coord[0];\n        largePoints[pointsOffset++] = coord[1];\n        largeDataIndices[idxOffset++] = dataIndex;\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        largeDataIndices: largeDataIndices,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n} // See cases in `test/bar-start.html` and `#7412`, `#8747`.\n\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  var extent = valueAxis.getGlobalExtent();\n  var min;\n  var max;\n\n  if (extent[0] > extent[1]) {\n    min = extent[1];\n    max = extent[0];\n  } else {\n    min = extent[0];\n    max = extent[1];\n  }\n\n  var valueStart = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  valueStart < min && (valueStart = min);\n  valueStart > max && (valueStart = max);\n  return valueStart;\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _text = require(\"zrender/lib/contain/text\");\n\nvar calculateTextPosition = _text.calculateTextPosition;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  calculateTextPosition: function (out, style, rect) {\n    var res = calculateTextPosition(out, style, rect);\n    var shape = this.shape;\n\n    if (shape && shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      res.y = rect.y + rect.height * 0.4;\n    }\n\n    return res;\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n\n    if (symbolType !== 'none') {\n      var proxySymbol = symbolBuildProxies[symbolType];\n\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseWheel: false,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {\n    /* eslint-disable */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n    /* eslint-enable */\n}(this, function (exports, echarts) {\n    var log = function (msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    };\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n    var contrastColor = '#eee';\n    var axisCommon = function () {\n        return {\n            axisLine: {\n                lineStyle: {\n                    color: contrastColor\n                }\n            },\n            axisTick: {\n                lineStyle: {\n                    color: contrastColor\n                }\n            },\n            axisLabel: {\n                textStyle: {\n                    color: contrastColor\n                }\n            },\n            splitLine: {\n                lineStyle: {\n                    type: 'dashed',\n                    color: '#aaa'\n                }\n            },\n            splitArea: {\n                areaStyle: {\n                    color: contrastColor\n                }\n            }\n        };\n    };\n\n    var colorPalette = [\n        '#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53',\n        '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'\n    ];\n    var theme = {\n        color: colorPalette,\n        backgroundColor: '#333',\n        tooltip: {\n            axisPointer: {\n                lineStyle: {\n                    color: contrastColor\n                },\n                crossStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        legend: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        textStyle: {\n            color: contrastColor\n        },\n        title: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        toolbox: {\n            iconStyle: {\n                normal: {\n                    borderColor: contrastColor\n                }\n            }\n        },\n        dataZoom: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        visualMap: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        timeline: {\n            lineStyle: {\n                color: contrastColor\n            },\n            itemStyle: {\n                normal: {\n                    color: colorPalette[1]\n                }\n            },\n            label: {\n                normal: {\n                    textStyle: {\n                        color: contrastColor\n                    }\n                }\n            },\n            controlStyle: {\n                normal: {\n                    color: contrastColor,\n                    borderColor: contrastColor\n                }\n            }\n        },\n        timeAxis: axisCommon(),\n        logAxis: axisCommon(),\n        valueAxis: axisCommon(),\n        categoryAxis: axisCommon(),\n\n        line: {\n            symbol: 'circle'\n        },\n        graph: {\n            color: colorPalette\n        },\n        gauge: {\n            title: {\n                textStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        candlestick: {\n            itemStyle: {\n                normal: {\n                    color: '#FD1050',\n                    color0: '#0CF49B',\n                    borderColor: '#FD1050',\n                    borderColor0: '#0CF49B'\n                }\n            }\n        }\n    };\n    theme.categoryAxis.splitLine.show = false;\n    echarts.registerTheme('dark', theme);\n}));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar HIGH_DOWN_PROP = '__seriesMapHighDown';\nvar RECORD_VERSION_PROP = '__seriesMapCallKey';\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(originalDataIndex);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: 8 + (!offset ? graphic.Z2_EMPHASIS_LIFT + 1 : 0)\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\n      // But consider the case:\n      // series: [\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\n      // ]\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\n      // For backward compatibility, we follow the rule that render label `A` by the\n      // settings on series `X` but render label `C` by the settings on series `Y`.\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(originalDataIndex);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(originalDataIndex);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var regionGroup = fullData.getItemGraphicEl(fullIndex); // `getFormattedLabel` needs to use `getData` inside. Here\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\n        // FIXME\n        // If this is not the `mainSeries`, the item model (like label formatter)\n        // set on original data item will never get. But it has been working\n        // like that from the begining, and this scenario is rarely encountered.\n        // So it won't be fixed until have to.\n\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'emphasis'), normalText);\n        var highDownRecord = regionGroup[HIGH_DOWN_PROP];\n        var recordVersion = Math.random(); // Prevent from register listeners duplicatedly when roaming.\n\n        if (!highDownRecord) {\n          highDownRecord = regionGroup[HIGH_DOWN_PROP] = {};\n          var onEmphasis = zrUtil.curry(onRegionHighDown, true);\n          var onNormal = zrUtil.curry(onRegionHighDown, false);\n          regionGroup.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        } // Prevent removed regions effect current grapics.\n\n\n        regionGroup[RECORD_VERSION_PROP] = recordVersion;\n        zrUtil.extend(highDownRecord, {\n          recordVersion: recordVersion,\n          circle: circle,\n          labelModel: labelModel,\n          hoverLabelModel: hoverLabelModel,\n          emphasisText: emphasisText,\n          normalText: normalText\n        }); // FIXME\n        // Consider set option when emphasis.\n\n        enterRegionHighDown(highDownRecord, false);\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nfunction onRegionHighDown(toHighOrDown) {\n  var highDownRecord = this[HIGH_DOWN_PROP];\n\n  if (highDownRecord && highDownRecord.recordVersion === this[RECORD_VERSION_PROP]) {\n    enterRegionHighDown(highDownRecord, toHighOrDown);\n  }\n}\n\nfunction enterRegionHighDown(highDownRecord, toHighOrDown) {\n  var circle = highDownRecord.circle;\n  var labelModel = highDownRecord.labelModel;\n  var hoverLabelModel = highDownRecord.hoverLabelModel;\n  var emphasisText = highDownRecord.emphasisText;\n  var normalText = highDownRecord.normalText;\n\n  if (toHighOrDown) {\n    circle.style.extendFrom(graphic.setTextStyle({}, hoverLabelModel, {\n      text: hoverLabelModel.get('show') ? emphasisText : null\n    }, {\n      isRectText: true,\n      useInsideStyle: false\n    }, true)); // Make label upper than others if overlaps.\n\n    circle.__mapOriginalZ2 = circle.z2;\n    circle.z2 += graphic.Z2_EMPHASIS_LIFT;\n  } else {\n    graphic.setTextStyle(circle.style, labelModel, {\n      text: labelModel.get('show') ? normalText : null,\n      textPosition: labelModel.getShallow('position') || 'bottom'\n    }, {\n      isRectText: true,\n      useInsideStyle: false\n    }); // Trigger normalize style like padding.\n\n    circle.dirty(false);\n\n    if (circle.__mapOriginalZ2 != null) {\n      circle.z2 = circle.__mapOriginalZ2;\n      circle.__mapOriginalZ2 = null;\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n    var showAxis = axisLineModel.get('show');\n\n    for (var i = 0; showAxis && i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(mapType, region) {\n  if (mapType === 'china' && region.name === '台湾') {\n    region.geometries.push({\n      type: 'polygon',\n      exterior: points[0]\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar linePolygonIntersect = _graphic.linePolygonIntersect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || linePolygonIntersect(x, y, x + width, y, points) || linePolygonIntersect(x, y, x, y + height, points) || linePolygonIntersect(x + width, y, x + width, y + height, points) || linePolygonIntersect(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nvar _default = selector;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 60,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    renderMode: 'auto',\n    // 'auto' | 'html' | 'richText'\n    // 'auto': use html by default, and use non-html if `document` is not defined\n    // 'html': use html for tooltip\n    // 'richText': use canvas, svg, and etc. for tooltip\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar Axis = require(\"../Axis\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData,\n\n  /**\n   * Only be called in category axis.\n   * Angle axis uses text height to decide interval\n   *\n   * @override\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    var axis = this;\n    var labelModel = axis.getLabelModel();\n    var ordinalScale = axis.scale;\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n    // avoid generating a long array by `getTicks`\n    // in large category data case.\n\n    var tickCount = ordinalScale.count();\n\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n      return 0;\n    }\n\n    var tickValue = ordinalExtent[0];\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(tickValue, labelModel.getFont(), 'center', 'top');\n    var maxH = Math.max(rect.height, 7);\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n    isNaN(dh) && (dh = Infinity);\n    var interval = Math.max(0, Math.floor(dh));\n    var cache = inner(axis.model);\n    var lastAutoInterval = cache.lastAutoInterval;\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n    // otherwise the calculated interval might jitter when the zoom\n    // window size is close to the interval-changing size.\n\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n    // point is not the same when zooming in or zooming out.\n    && lastAutoInterval > interval) {\n      interval = lastAutoInterval;\n    } // Only update cache if cache not used, otherwise the\n    // changing of interval is too insensitive.\n    else {\n        cache.lastTickCount = tickCount;\n        cache.lastAutoInterval = interval;\n      }\n\n    return interval;\n  }\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      borderType: 'solid',\n      shadowBlur: 0,\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel, 'symbolSize');\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    // eslint-disable-next-line\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var groupResult = groupData(data, function (item) {\n      return item[2];\n    });\n    var layData = [];\n    groupResult.buckets.each(function (items, key) {\n      layData.push({\n        name: key,\n        dataList: items\n      });\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    }\n\n    var timeDim = data.mapDimension('single'); // data group by name\n\n    var groupResult = groupData(indexArr, function (index) {\n      return data.get('name', index);\n    });\n    var layerSeries = [];\n    groupResult.buckets.each(function (items, key) {\n      items.sort(function (index1, index2) {\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\n      });\n      layerSeries.push({\n        name: key,\n        indices: items\n      });\n    });\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n    * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {},\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin');\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: AxisBuilder.isLabelSilent(angleAxisModel)\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      }); // Pack data for mouse event\n\n      if (triggerEvent) {\n        textEl.eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\n        textEl.eventData.targetType = 'axisLabel';\n        textEl.eventData.value = labelItem.rawLabel;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphicUtil = require(\"./util/graphic\");\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nvar graphic = {};\nzrUtil.each(['extendShape', 'extendPath', 'makePath', 'makeImage', 'mergePath', 'resizePath', 'createIcon', 'setHoverStyle', 'setLabelStyle', 'setTextStyle', 'setText', 'getFont', 'updateProps', 'initProps', 'getTransform', 'clipPointsByRect', 'clipRectByRect', 'Group', 'Image', 'Text', 'Circle', 'Sector', 'Ring', 'Polygon', 'Polyline', 'Rect', 'Line', 'BezierCurve', 'Arc', 'IncrementalDisplayable', 'CompoundPath', 'LinearGradient', 'RadialGradient', 'BoundingRect'], function (name) {\n  graphic[name] = graphicUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\nexports.graphic = graphic;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  });\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  }\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // right-side\n    ? Number.MAX_VALUE // down\n    : 0 // up\n    : isDownList // left-side\n    ? Number.MAX_VALUE // down\n    : 0; // up\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // right-down, left-down\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // right-up, left-up\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction isPositionCenter(layout) {\n  // Not change x for center label\n  return layout.position === 'center';\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight, sum) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n\n    if (layout.angle < minShowLabelRadian) {\n      return;\n    }\n\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate;\n    var rotate = labelModel.get('rotate');\n\n    if (typeof rotate === 'number') {\n      labelRotate = rotate * (Math.PI / 180);\n    } else {\n      labelRotate = rotate ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    }\n\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 3e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nrequire(\"../helper/focusNodeAdjacencyAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\necharts.registerAction({\n  type: 'treeRoam',\n  event: 'treeRoam',\n  // Here we set 'none' instead of 'update', because roam action\n  // just need to update the transform matrix without having to recalculate\n  // the layout. So don't need to go through the whole update process, such\n  // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n  update: 'none'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {if (typeof define === 'function' && define.amd) {define(['exports', 'echarts'], factory);} else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {factory(exports, require('echarts'));} else {factory({}, root.echarts);}}(this, function (exports, echarts) {var log = function (msg) {if (typeof console !== 'undefined') {console && console.error && console.error(msg);}};if (!echarts) {log('ECharts is not Loaded');return;}if (!echarts.registerMap) {log('ECharts Map is not loaded');return;}echarts.registerMap('world', {\"type\":\"FeatureCollection\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"urn:ogc:def:crs:OGC:1.3:CRS84\"}},\"features\":[{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@࠿@ᠳ࡚с̶ʩт˷˔ƹͮɠͲ˖рԜ׷҄̕ҴNܾͰؼ÷۸ήԪҮƴ̮¿ঞɪֶϤϲŹƛе²֭ĝǱƊĠǔōϭñėށ؅ਓɁȥԯ঻ƻԓࣗඩअ৯۝ڻो֑য়ߝล໥ϓ؇UļāļƫȖɩ̌]ᶼ̈́͘ɮ͜ɪ͚®ĞĚ۪ƼɦːϪǰ;Ąߞᢌᣮ\"],\"encodeOffsets\":[[49130,8189]]},\"properties\":{\"name\":\"Somalia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ƛ¬Ð@ĞÆÒªǱ\"],\"encodeOffsets\":[[9810,48188]]},\"properties\":{\"name\":\"Liechtenstein\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@⌗øĒ୬ͪࣆيʊˆ҄ؔ^˶ȇɪÈצϲ֌ĐФ؜ְദ׼ҢڴήࡔլİtʍԾ΃ʤ՘ĲʢË΢ǒŎɽĠPĀmǶVǢgΤ̑ĮவňȵǑ¼ýĈå²yĞÇÞ³ëąÍĥʹ೵]É³Ɨ{ΡŉƑcăZÉSÍƫH˃ǨǓѭǇƣġǥÕȿÕǃñÿśıƇħěŽđұĿЍUƉÝåSĵ^čfʉdʇǍ·ণ֣oۋ@Ĺ\"],\"encodeOffsets\":[[-8891,28445]]},\"properties\":{\"name\":\"Morocco\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@⌘@ķœ@@@Ŕ@@̷@̩@ǕBȍ@ȋ@ƍ@ĩ᫫@@ɋ@΃@ɭ@ŕ@қ@΃Oх̉űƽw½gΉɩķƯtįQJǳ՟TšRšPėRŏᇷCฝCċα`ý§¨Ƙ࢘Ӕ׎ŰшΞ׎ǇĹèƤ࠴݂Ģָ͌܌۴КͲޞŚƀ\",\"@@i˷@@j˸\"],\"encodeOffsets\":[[-13351,28480],[-8984,28120]]},\"properties\":{\"name\":\"W. Sahara\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@A@ƟwđĵȏÒʁč«Ǔƅ@ã̌Ο˘SǴʒÊÆ`Å_֡˰ϟʊkIDZʪĠɁ˔˶àϷˈȘѬ˻W²ɤ˲ÚͩǀºĬȋːÈĆѠŎǊĘȘoø`Ȓg¤_cº·¶ÙȈėÒ÷´fFfV\\\\T^Qhɿ՘ɳkĝƱƨ÷YißMµGuODƎĨãɰİÈßĜhŴĬŬ~Ũ±âZ]ãNÇk¹ėǌƽɣȭkěHãƺ˝Ǵč¬­¡İÃƩǝÿďȫẸ̀Qßço}ß]ĕUΥ@Ʌ±@@\"],\"encodeOffsets\":[[22080,43262]]},\"properties\":{\"name\":\"Serbia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@хǑޟܯőࡡԧ¡á͘з¤̧սշŊƉˏͭąٝ°̺׿ٓɥɓӱз·ʫɫƚν@ӧʟƆƋʇğԻzЛϭĭ޿ॕʳכ]ʛŷѿĘࣻõЍĺٵȀ͋ĠШъȒȢȌȜxèFƆ·ǴăĆˁȡ|ɍZ{ƒZØaŤDĠƲDèĳ̎őͨaŦ̰̚˽êóļ@͒ƂǲȸZíĊ´ubSv\\\\vÀTÎ hňǞjΔö´ƌFgÈèTɶǓЀ«Ȁǫ͊î̲ǆzĺîĢƘ؜Ɣ˒Ř˞ǈ°òńƲъÖŖ¾ŚǶRɄJǮˊרȋ¦HʲpȮńċľsĺ¤ÚR|¼[þJ¬wNwNÌÛļûĢmǌÂpp^ªô¤ʂĸ®T¸SZ^b\\\\~VvL¤QȂƓî§R¦¼¶^ê}ĞlôÒÈŒǐ`ƐǢbÀèHĎ±ĸ^ǠŶˌ̆ѨīÞŗ­ɃaÎJĊtÄB~oűځĈʁŔů࠰˨ȦȨˈŢƠ®ĈRľsª_ÂW\\\\a÷ËvkĄOΘĈ²ʹkÒČÑ¼­§MÕryWJ·oğ}ƽáHiĸã|u^Q\"],\"encodeOffsets\":[[76331,37911]]},\"properties\":{\"name\":\"Afghanistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÂR̮cҮƠ͎Åǖ@ǔ|ɔDªĞƶHǊŖ̈ƄĺTǊ|ʖĞGR_¿ƽA½n½¦ʬGɼEҾi°oČ଩ýٵ͔ӑĠճēśnʕ¬ÓIàþÖÚ~ɈqɘM͚Ĳ̴ŐŢdܓ×މoěG±ðƁIĵY൑@ȗ@@ڟ@ˑ@ˑBౝǶ֡া࡙ࢳǑ೟Ƶҧƀ਩¼ҹͺሹTᅍeғ̴ʟÌՋȭǃNOėFǗģµƇo͆ƖËܼɠˌ҆ლζ֌θɌƴȞǀЊ¢ݐс޴˫ߚ̢̤hˊүஒґۤݴɦƌOՎNዲQĮĘÇƈǕϡÐŻĚƉÆ˕Ԃۻ\"],[\"@@̆Ƅ_øęÞËr___ğıͅ˭DeÌ·ӏɫθƅːОΖ\"]],\"encodeOffsets\":[[[18002,-8293]],[[12802,-4697]]]},\"properties\":{\"name\":\"Angola\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Π˗ä̋ÝԍȄ́ɊßQÙÚŷűŻȉ̍ǝ©¡aquwW@yÐğBƧůÙPÑXkAűˬѽ̨ŚAĹɐȨࠐDŮȡæ½ʮ̾ϦŒŷɴÒ\"],\"encodeOffsets\":[[20546,43569]]},\"properties\":{\"name\":\"Albania\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ł^ĊĤ³\"],[\"@@ɨ÷ϫƯħƾƊ¡sƜƖ\"]],\"encodeOffsets\":[[[20135,61632]],[[20470,61800]]]},\"properties\":{\"name\":\"Aland\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ɵ½íIir[ò\\\\¢Ö ÈOŢ~y@esQm\"],\"encodeOffsets\":[[1747,43524]]},\"properties\":{\"name\":\"Andorra\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʙOǘøĂç\"],[\"@@šȆĶãŷ\"],[\"@@ø֟˗ȫÁǸǣïԿƖw´ŷѡĹÂĹ˧څ[˥ççᒣʾ߳४oǪǘÚȱɴѼƸॺí̆ĐȾĚ̌҂ৎࠠŞɦò_m̙ź\"]],\"encodeOffsets\":[[[55223,24758]],[[54613,24841]],[[57650,26267]]]},\"properties\":{\"name\":\"United Arab Emirates\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ؠQۓƫĵÜǪĢ\"],[\"@@nᇜ͠έǇvµǥˠŸɏ׶УࢸНࢴŧʕȣ࢑įԭņ౳¦\"],[\"@@ȴǛߖȡפϿବӗɒ˳͉ӡȧɇ˽ͫЛoÁıξบɿɮȜǴGƌùÚDæ¶ÌEæ¶Ì rºʒàǞȔɌͦʮbΰƠ¥ʐĒɜũȈԵƛ۩ЧʩхŃɫˇԽ˳ƩǟXࢣ਍ʉƽƯɃƅę¡ě½õĳģă¾ɣÙßdƕqùşȅißlgĝëĿēk©z¿HÃiÉZÇÁEÕáųeû¤ͩɅŷĻҩžѻőēȰ͗آ˯͆˿Ʒ̛fʳɔɧ˜¥ÞщܿਟՍ̍൱ͷઃŻأУƊϋȰŉŁMĒå¯̩ŽÍīʩžБůǻӃǿ֋¥਻ΤɛŧŬਅϘŷƋŴcˎňƗ¢θĖƒƙZ΍Εƻϟ̲ЛŹ³ýתǭѫȁ΋͏Yש͏͍R̅ҧكʗցڛþؖ͟ӁٺóɖɁÛʗΉǁʔ@ľĩൿࡕǿʛş֡γƻ·̒LƷˋÉ͎KƨůԹ˻˃ѹƄƒеίăрýѬ֯ౡ̊࿩fЩϘÊܞƛØգŋ̉Ԩ«֊þŴ˜\\\\Đʊ͐ƢÌ̮ȒĠvɌǃȞƠ͒ψʔ̶ȬưƧЮȴǨī̀ͮȺȹ̒ϏÚmŎڬRĐǠ«Ĵԛ¶ŞϢȋӨżĢͩȺب̜ǤƉͬiߪȊʼğǤƄž»͖ƲŚ֖Ҙˤʷ۾qޚŘˎմϲUҐŝɶƌČ˺܆ǚÜ߆ɝèÀˊ˻ڨĠł˥͚ÆΞǰłƀ֌ǒFĦƶīĆÉيǘȄƞׄМЪˠ٪Ɉ\\\\ɰƖɭцƪˈƫ؞Ǫˠƫ̂ʾ̘ݨ̞̈ࢂƽưǢʾɼʚ̆Ē¼ĘİxzEÜ}ǘşöãîSƖ`Ѷ_͘ĳèţħčÔƧ¢ÇdǊʒѾ°࣠Ǽʗî·ƚ÷ƄƣΔӍ׶Ћ\"]],\"encodeOffsets\":[[[-66098,-56029]],[[-70300,-56170]],[[-62550,-24224]]]},\"properties\":{\"name\":\"Argentina\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@́{ř̮ǯŔfƖ˟§ʭôķƶɛ½Г˲Իðą̘ŸȦʁ͚՚Ú؞ÞǆǀťıÑѢȓǫƣÜşєʣßǫʳ¡Ժ͏ɼīŷȀƭƹúʇ\"],\"encodeOffsets\":[[47607,39841]]},\"properties\":{\"name\":\"Armenia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@āɆƃë\"],\"encodeOffsets\":[[-174823,-14695]]},\"properties\":{\"name\":\"American Samoa\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@īƨǜMïƙ\"],[\"@@΂ŜªūȩÃŚÕٸǔȢťƙțȃúͽñȐŵɖ¨ĻƣࠅƦƇƥƫJÌ҈ħĊȜͼŒǗëȃŐy\"],[\"@@ƥÈè þħ\"]],\"encodeOffsets\":[[[70946,-50236]],[[70846,-50288]],[[53079,-47554]]]},\"properties\":{\"name\":\"Fr. S. Antarctic Lands\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ťowîÐÒĎŏ\"],\"encodeOffsets\":[[-63197,17446]]},\"properties\":{\"name\":\"Antigua and Barb.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ēǡÎƮŸÔı\"],[\"@@Ȫb࢈ͥ;ðŀùŢƨϸQƖƂɂyĄþȺÙńଡŇȶʏԑlԟƇñĈ§ĐŸþȏêķǁŻȲ­ΧȻºæĳǡ˱˙Ĕщ£ƞǴ¼˫p͕̮ʏאɨɗ¢ŚƹǪą¥FƪЅՊĵΆÔʸ˚ĩ\"],[\"@@£ÝÏÒĴL\"],[\"@@éżBÑ\"],[\"@@ÞƯ͑êʴĆ\"],[\"@@ʠȓbƿǩõ˵͢ȞĨ\"],[\"@@÷ǲƌ˖Š̻ǳƋ\"],[\"@@Çȏ|ƾ\"],[\"@@˪ZǎŁϟȅƩȩüϡ¥ǷŤĈŢגƀɀyXı\"],[\"@@ĥɩRʨĔ}\"],[\"@@ǿɪcɂȤѫ\"],[\"@@čǘ¾̞ǂǀéǆĨðþ˫ɭֿ\"],[\"@@þCȷǡȸĨ\"],[\"@@ŅÁĮƶXĳ\"],[\"@@ĕPŊÀř\"],[\"@@jɇǗȞƮj\"],[\"@@ľàēģi\"],[\"@@̉ƙŒɲʚÔĢĵǃµ\"],[\"@@ųÈÈĮìƵ\"],[\"@@ÕgIżàœ\"],[\"@@ěWÌŖĽ\"],[\"@@ƪdũʉǤģ³ğҷèö̆Țǂ¸Ņ\"],[\"@@īPþŸnƇ\"],[\"@@ƃ×ʤǮşŕ\"],[\"@@Ŭřҿ|żňƴŢŠƒ˽\"],[\"@@ͼȶŨɪȹӳЩρʸŅΨȠƹ\"],[\"@@Ñ»ɆΪƳ̭\"],[\"@@ğɠĂÌ^˫\"],[\"@@Í̉ʖ˱ƺڭʟǪԝǤĩјȚƦɕ՞ϙŜ௳ˠЉƂǶ؇ÿՙʪɽ¦ΣٌΓɼ^˘͡ࡢѧŀǇŻZĥѪқȾϟɀܥĴ¨ŶƇȰŔŦϸͧxƦĔƞ࢑ʼ˙֬˵ʤЋ˜ǣǔͱɔȗÒ͑ưů¡ਗϬ࢝εӯཝñܹ͓ԡõͥ˫ȩzá̏ťѩ֯W̃ſáĜq̡ЁÉћԟۏɗාϝȯകƍࡧؕ՝ÁĴƕŊ®ÇʱȭɾȉŧȢͥŌŪŢÇŴƷL˩əȯƈǎGǪɆȓǈеȥɨÕृԡࣩκؗĬŋįƛr΍ʌԷưԗնÔӪŅʔٓڔǬ¶ĤóMȢٕɡ˳|˞ӶkɖͳԀͭࠉڷąŌ˘̈́DĒلςӨã͈ŠĚǫѠNȳ̷̉ǡλڵͳҏՋàˑƩĴŧÝѳ̖ĀĊȞÿȗԸˣ˪ĉʢƵŜʳtŅƼÕȘńdNƶӋ˺ϟpϣȒҗ§࣏ј̣ĝഁ±༱ԕ୷ঃӭџŏإݵଗÙ÷İտ¢ಧů͹ͥұģٓэҭģࣃĢѽǊΟ̴ұƞ_ج̬Ŀ˘ϔ`఼Է॔ȃ஖ׇࣀř؞۽঒Ś½ƎȎБŸĒĂbƘϩԴ´ĪɘșVʣŊĬŚʵĊÓŀĖAπڟஔÔӈɤϜшĥɶ˸َĎ¬fջȢŢ˨Ѥغ˨Ұϰא̈́טÉښ̄ҪĨ̒ɢМஊκ˸ʆи۾ј̬ǕӀĪΎϬ̊ɀ̎Ӿ࣫~ЬȨ÷Ǟ͑άŔØeǊĺŊǃƼİɌĻІ]̯ĔXƔƈhÔȲŧďĻǶ¸ɞĺEŌȈ̶ƗTŔƍEÏŲǘƀˊīƫ;ͶȚ¢ȐÞȧƄ¼ÐůŌļѤŊsØƉŨŨƖšǰǤIƖńҰʍ؈֯ġԱðĖĊÕáɊʹɦМğƂɵ¬ʐ̮ɥFʐǲnȳƴþøˍƒ˦Όň΂ΠɪĿƂǀȚɨǾJǺȶŃLǆΘʦŬǫՂGǄĂƂğČƈǞXçö͖ǗƂͷbȿƢŜĸǎŉƬô̌ʁɺĈȊʡ؀ŁќȅˀÌʦǫǂwעͪǽ͑ʮdÖȗƮWÌňáŎǌȆɶɱƬc¨ęΉι¶ǿŏȅƕò̯ƓxՋҥە¤ƑلЗðƓΎīäǫǾ`ל̕ҔС٠ƱȨίڌ̽ЎàˎǮϰߜˬ஀đӲÒˊĹ̘ƢҎˆˈǢɃȼVŠƴ̀úßǨजʎȪŰ©ŁȐȭþץʴŏ\"],[\"@@ëµ¹ĸÈ¤Þĥ\"]],\"encodeOffsets\":[[[150893,-44438]],[[148525,-41765]],[[151795,-41487]],[[148260,-41478]],[[151887,-41274]],[[151553,-40711]],[[147383,-41078]],[[148803,-39414]],[[140899,-36596]],[[157224,-28094]],[[115900,-26678]],[[156752,-26368]],[[154775,-24054]],[[118217,-21286]],[[152621,-20778]],[[149789,-18668]],[[142807,-17525]],[[142857,-16970]],[[140384,-16156]],[[127588,-15771]],[[128204,-14929]],[[139996,-14135]],[[139508,-14156]],[[139611,-11880]],[[133591,-11959]],[[133754,-11649]],[[139877,-11651]],[[135776,-11574]],[[146616,-12241]],[[145690,-10961]]]},\"properties\":{\"name\":\"Australia\",\"childNum\":30}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ñǱʀ͋ãʣթɊśȝŕV̡ͥťŕƻࣃÑ˿ǥ܋ĶǭśFƵ^׃Čù~·¶½ÚĩČo¦I\\\\wPͥąȻXā]ǁMġÑÝ½iÇOĉLÍfÏ¬ğPčBuTDÆÅjǹőҫǦ«ǶĈǒď´ȌªúoŎÀvqL±Ŕ{cíƼò¨ŔSƨLêoŌGƚŃ२ȐdxMÀZR¸_ð@Ŝcǌ_î}t_aDuvkÎø}Dd~bÒLÚſÊ²ƘǋǼϤǐĜ|òÀ¦ƞXN`TŲAŲNZJłXhȠƑբE͂ͰࠬȱФΆǓ\"],\"encodeOffsets\":[[17360,49766]]},\"properties\":{\"name\":\"Austria\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Փň֍ը£¬ɜ¾ĸƵʮóˠ¨eƕǰœŚ̭\"],[\"@@ݒ࢙ˎǻ΀áƸȋϓ̯ĻȏӯɑǓˋŷĔƃʝ\\\\͹ɵqԃόʞƒǁȆǾƄ˛ʈ౉ٷùʈƺǿƮĬŸɻԹ͐ʴ¢àǬѓʤÛŠǬƤѡȔĲÒƿŦǺŐÂvڲɟ̂ěĔXüÒðT­´ˁƐķǎȸǄˎßӌѽЈéڂը\"]],\"encodeOffsets\":[[[47222,39811]],[[49739,42849]]]},\"properties\":{\"name\":\"Azerbaijan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@guûƿcy¤«£ŇR§èöcĘÐOōiƃ͇͟ϟչȕů˃LǇԮZپǭ˪ôľʎǳʶ^ƜàÀ̈́ǀÝʔĔŨñ\"],\"encodeOffsets\":[[31287,-2457]]},\"properties\":{\"name\":\"Burundi\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʦq̈ʣȋ˥wAá\\\\ğí£Í}©͋ʁw՝ɸ£̪ɯǉͫVtɴСºÿƞ˓°Ɠȼ̇{ȟ̆ۚɾèōЂ˘ƮڰêƸǅӨŁđͅ\"],\"encodeOffsets\":[[5831,51994]]},\"properties\":{\"name\":\"Belgium\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÁÁŏEĕŶǽbmlʻàƋ¿ǃĿQͻɷȍɽ׏ɧÓ֩aлɍÙÃAck_wL˝óVŃjån»k¥cÇ{ȍ࣫ŹžàȹזĀJqႬǷʾ±ՔӇ͞ŚԜѴϠҮyΆДo˚τƌڒׁ\"],\"encodeOffsets\":[[3682,11977]]},\"properties\":{\"name\":\"Benin\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@­ΏȀɃ ɯǂɥӪ̃ǱNC˕ӠͿҒÈĸȡŹƁˈ΋΅Гҭzѳϟ΃ҽƊȗ¨˟ȩΑê຋WíͿļƇVֽ^óºĽV«ko¥¥D·ØsÜÜ­­ÃĆ¿ÇYʕǫM͟ŕïÅćÕDķÚĉSąґӂɗĚԮȬ˪ϞӶȼɪɘ©ˮɈĸď˚ƬǀǠĄΜǿȎĈ®͆ʢUÞʬʌɸЊ¹Şʎޤ̨ʐȒѲXϠŭ\"],\"encodeOffsets\":[[223,15270]]},\"properties\":{\"name\":\"Burkina Faso\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@÷r¢ǆǷ\"],[\"@@ç\\\\ƪnā\"],[\"@@ęÏΒÒ́\"],[\"@@ũĀŠĐȟ\"],[\"@@əqƒɚƫѐĀzɮ͇ùͩ\"],[\"@@|JeƊÊAɪ̻ɖnńĊæŶɫD͍oȉZ¬WɆÕв«ாDΚȍéāőo[Aġğɷ­ĳǽǗĳ|̓ŧǃͱǖӻÞŌİǩÈWŎÖFȠÖŰŦQĀ@ô¦LÆ[ǞLòχzˁĒǍx¥Î՗\\\\ÏPVЇƉʧŒŵūŨуɣ͐ǉনÇ«ˉӴɛȱɩʑή©ӆ£ƛʉ˔ǃſѝƲ͓͝ҁƇ¶ŜɨɉőþÈ̎ơЛȱǻïђḍūǋɓŶ͸ŉ̜iǰ¥ǔàŬǡÌuȦ¿¶ËľŐˠ\\\\Ê\\\\ĮNUå¨ťjƉĜĥNátÉÄ¯ÞL`¤ĖǜLúAºäìȐİ@̚\\\\ÊõïƂɡ̗ɲ~ȸƶƜĚĦ­ĐXfæŰƒȏɐ\"]],\"encodeOffsets\":[[[94157,22025]],[[94079,22357]],[[93339,22708]],[[93755,22920]],[[92957,22620]],[[91076,26876]]]},\"properties\":{\"name\":\"Bangladesh\",\"childNum\":6}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĵ̓˧NǡǭνͻɿѼнҏmƱŐ¥\\\\ȝéɧuÇËÏŵsySyFyĵxÿckkgÞŵXñg¥ÍţśfɏŧŋiБĦƫòwr§î}FγyoµkQ́ÕċAđZ½SōGëÁȫ^ôͺƕɈЯːà^p~àèRQnół~ǴˬŦƪǞįÄ¢«®ǳĎƹ˞GäĜlĄÀŠŠ˸ƩƇŉ¨ħᓞƏ؀˲ܸƈ˶ŭϬ˴Ƿ̨}\"],\"encodeOffsets\":[[29272,44793]]},\"properties\":{\"name\":\"Bulgaria\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÛĝƄHɜĬXl̛\"],\"encodeOffsets\":[[51822,26505]]},\"properties\":{\"name\":\"Bahrain\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@řǵѡGBņƂôʎƪƄĵ\"],[\"@@ʚďΏ¬Ķ¤\"],[\"@@Ï{̶̀¡ǀĖ`\\\\ǉ̵˙\"],[\"@@ǽWņɀĭ\"],[\"@@͏ɬþĒƻʹЎٱ\"],[\"@@̻źxÌ̄ȅ\"],[\"@@ĹĉrŖĈ\"],[\"@@ćïŞ¬®áWͯǓ\\\\ȓϾ˼|\"],[\"@@Ǐ»Ăńˋ΢ΚЩ\"],[\"@@Ƿ`ʊvÑ\"],[\"@@CȳʣƧďǦȃ¨ËêǊvҌȤęȚ̓\"],[\"@@ʰſǾǇЭųƚĚJ¬ʠǫǌɁĴƇIÐŚ¾Ý\"],[\"@@ӐۑǅȯǄǀěǜǺĖÍ\"],[\"@@ƩĸƀŎPͼɫʈη¶Έ@Ͼ̽xǑŇý·˱\"]],\"encodeOffsets\":[[[-74779,21702]],[[-74794,22968]],[[-75987,22747]],[[-75834,23269]],[[-76636,23444]],[[-77480,24013]],[[-76215,24646]],[[-79521,24832]],[[-77115,24781]],[[-79203,25615]],[[-79609,25301]],[[-78488,26100]],[[-80376,27371]],[[-79079,26526]]]},\"properties\":{\"name\":\"Bahamas\",\"childNum\":14}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˼Xȗѫϸˇ˵ßɂ˓ʩğ{D©OS«^­To_ðƛSÃ¡M®ëNď¿Ù«§ǟœ_nǇäŕġå٥˲çÆÌ̓τࠉ֮Ṷ̌ͬȶªΎȬVɞƱȦǨ͚¼ݨǗ܌@ƤǍƞ[\"],\"encodeOffsets\":[[19464,45947]]},\"properties\":{\"name\":\"Bosnia and Herz.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŘñࣸįkŻº¹ÎŰÊ®fº@ät¶²ZĘQǈR͢ƭʀąKơãÇUoHyÂ±æïh¥@ůŕs­[¯PmƼóŚ~oÝőĢĪƉĖăȌíƎ¯sX}WÅãyÈeƞJǬ_ɀŅɈˇ»OÇaĝ˝ƭʕ^ƳĂɁI{Uo½ßw¶³øÑüÁ~jȏOȃpw¤mÊāJqǃNȑEŅ¯ȥGŕÿ÷µóåëĿ§ýzÃ»TÃj©ƵåʏǢۃăȳȶC¡uw§SßkıěLd£ðÉh֡~ƅĩSĂͥrubŅŜËRķMƯbࠥŸண±çýŹġůÕwKñÓ\\\\íHýĭQM¢ѮБȸجОαজØiƦMϨ}æwʬòŮIlpĶvƪWÆlÊºʂàwl¥{ÚǊ¿Ħïd¹BSjj¬êÄÚzNvSņŘǜĘxň`èÚĸ^ʺQ ØņÌ_jáZƻXrX|¦Ü¢ĊpÜFϬƎѲӒ̂\"],\"encodeOffsets\":[[28824,57491]]},\"properties\":{\"name\":\"Belarus\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÝŝĔɜuĽ\"],[\"@@˵CÒྪzƀ˞KʄИȒv­ħȀOĿƽԭÌÿğݑӥد\"]],\"encodeOffsets\":[[[-89961,17841]],[[-91027,16272]]]},\"properties\":{\"name\":\"Belize\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŏgǎĞ½õ\"],\"encodeOffsets\":[[-66283,33069]]},\"properties\":{\"name\":\"Bermuda\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĭއҀޕU฿̇ѥޗAх̽গǉȤࣟ¯ʑѽǉc¡ÈÓƨČĪçŤ͗Ĵѵ`ƕ_íTõäǗŠÛ|Hwyįė»̅đɻʙǡʽƕǽǷZí´Cˢʯ݀Uˌ̣ͰØɰɗƜ[˾ǖŰDÄgįĮEhļƊĦńMpkx̭ʐġŀUž¡ƀÅ̾«Ŝ¨Āǁî}nǕξ@B@UÒĽŠl¢ԔҸWƔǄŚ̽ǄǡѐȾͼǝɰ^ƘЪՂǟФĂڬʚ͆ݥನ̌G͌±ƜďɾĀ˜ˆä|ƀXĨiʲʘۺЬরǀĈι]ęçś³S·Ħ͕VōÇȅǢх͸ʹؚ̨͋˼ǝɼVʬ˟ծƋnçŴƑÐÁî±ǶBÄaĂ^ʌz¬RӐʥŒՇČ֛ŇIƳI¬ŴƥŚƋΟhȗXŗ൚¹DÖf¢r~AIǥĵƅO§fǭƛlŹ¢¡̜șðgÔj»RĉĲɵÚƥúûßÅŵϟµƳÆŉΏיɪȡuÕi»]ÕăÅ[\"],\"encodeOffsets\":[[-59555,-20648]]},\"properties\":{\"name\":\"Bolivia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ËXȦņƦÑ̯\"],[\"@@åĦłĴș\"],[\"@@ǇMŲƘƉ\"],[\"@@ȗ}İĊĨË\"],[\"@@×§àĬFÓ\"],[\"@@ÚǼÊĥţĕ\"],[\"@@ĉćĮːcȇ\"],[\"@@ř¯ĘĄ§\"],[\"@@ėeɐ̮ŒξʖĞĀĿī̗ҳ΋\"],[\"@@јÆ؊őυࣽǣĽőĐ½ƽɭôçǛǻßɕòχëɅҢĨŸpŏtñƞŴՒͮƀԶĥ\"],[\"@@ɯǑģĐǐƨǄå\"],[\"@@͕f˜ƬŌçÑĩ\"],[\"@@ƯʓΟÈÈǂ҈\"],[\"@@cūƯ¾ɂҌ˧ÿĵ\"],[\"@@ĝiƂȈĺÿȵ\"],[\"@@ƁyǾŰ\\\\ǟ\"],[\"@@ŁĲǡÀ¿Nwʫ̃şݭĘ˝ŒõXŷOƅI½øŻŌʰ˕ΆƥN¶ƢHLżĢ`¢¶ʲÉªňĠfàǜH¤nȒȦGðnÒvQ°ÍÌgФtϴċ´^~PøLÀ²µÀ­âÁnPptzvĖdffHȐĩ̄¢¸VĈ¢ØORÄvJV¥§¦żQrçArYi¡èʬñ̦ȠܪťːˊɌպ֦݈Ęɀ˞ǽь࿫Ɍʯтƛ¸йͩ˝ϯԧѷʵוઁȻJλǃ׼ࢬհǤەʌɇͺƸɾā;ǎ˓ޥƮŸȸӴȂòʀ˼ȺŁĨŎıôfȾˮ΂ҶÌŜąjŞ࿄ؕṇ̌Ɇɂ̘ɣµÅņ®ĨʳǿǳĀĝȒǤ®ǓśÍƗőՋʈɔǬЊļmñ˅ɔȎВæÚłόõ׀˝̼ͬƛࡌĸєÇనܗΪн΢́˚ķńǗӬƹ࢔ƂķҸ๱Aߑэ੓ΡЅŃ`LƉљՕ̵ƿΑͭơ˭EŶˣ܇ˣЭ͏̿ʏ˾ƉƕôįÑȩǏǽ·ȉĎu¹ίĚ\\\\įԽƮ৫˓ૃ¤ѳйңŏ્ǽƛͧ۟ͥ˯Ƒ˧ýɣ гףʻɱɩ¿̭ޓiǑȰÍɡ֥ğÙʢ¢ǃĊ٫ŧŵĔÉً˛śǝяNݩχषڣºŏɯȻbĚǻÕƝɋØĻʔėɝȹöùȳŇ÷ǎީÇ݉ƭпЅʝЋЭҭࣁԹۧऱܙoʆ͐²΄ʢĢ̞ƴrǆɄǘwɺŔYdƼϯīɯˬŠˣĿ͗ÛÞŭαϹɹȅуÈʁѱࠃ׿ԕwJÅzË®@РhÀ|ô¸îêĄĚöì´ύɸƇ̄ƃĖʥĈ̶̯ϕǦ±ç͑ͺtqMo]ţģÅßU«B[ôhż΅͞Υ˺ʍÿŝ˳n³Ö¢ƆĚưɄʊƾࢤ਎ǠWƪԾ˴ɬˈцńШʪƜ۪ȇԶɛŪʏđƟ¦JŤŚǴĊžۆƬ¨ÀtfǕŪƻơ̈ƉĉoħgûZã\\\\£wð@Ö_Ę¹ºi áކŇƆMĐăĒţxǕ@±bűƠ«`˝ƹ঱ŸZʼĦڨíʶÁoǊm¦|¬[²kÖÆ\\\\ÖĄ¼^ÖjvƙŮďôΒך]ń©F¶ƴŶϠàÆùüÙƦıɶQĊ¼ÓiïhǷŴţæ¡¢kźƜeǮP¨ĶƆJǦ}B¡qÕeC൙ºWŘgȘΠřƌųƦ«ʼTċ֜őՈӏʦ«Qʋyā]ɹ`í²ÏÂųƒmèխƌȿǊ«ŖɹU˽Ǟؙ̧͌ͷʺǡц²̔ĥ͖T¸´èŜ^Ěćκযƿ۹ЫʱʗħjſWã{˛˅ɽÿƛĐ͋²ȝPĭGăEƑlķFė«ŻÃÏa©E¥R·éà¿}୞¶ƶÇs{]ͻ˹×ȉŗۻ]ǕвۣĊĴŪĶŪGńąĢŏƐĉÆ·ƦjŵĦƵЄXþ|¯^Õì©ti|jjp|KńǸ|vŘȖԸτĉ̲vÎ Ąƶʢþњ²zŐxú¶ŜĞĮĬĆΊȴܸżĞĶÈ´à^ǆQłd¾v«à¯Ģ^Ú¤LvLÆfɺ಄ɨఈȟּν̶b׾ӨŶˎÑƅ͢ґRHղචXãŀÀŢɐȧ҈̲ʀ΍ѥǦѼϥʌf͈ǖƄşŽêF̴ΖݲΠǒͶӜȌɌցúƥ࣮ϕΦĳɜǲŕ͒[ƞǓָ^К̍ŨΦʪŜɐ·˨ĊҔːɸfͰΐËǸx{TøhǊ¨nÖUĀ¸ČgŶſƃңϘƱ\"]],\"encodeOffsets\":[[[-49649,-28433]],[[-49750,-27035]],[[-46346,-24462]],[[-45188,-23697]],[[-39837,-13796]],[[-39673,-13411]],[[-45567,-3010]],[[-45960,-1349]],[[-53076,-1468]],[[-50819,-234]],[[-51868,-134]],[[-50630,-115]],[[-50931,275]],[[-51636,143]],[[-51356,403]],[[-51506,1986]],[[-61132,4458]]]},\"properties\":{\"name\":\"Brazil\",\"childNum\":17}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ıjǜȂųÇÑ\"],\"encodeOffsets\":[[-60921,13396]]},\"properties\":{\"name\":\"Barbados\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ĩ@ŴҟƷãє\"],[\"@@ɽƳĀ˙ƽ̗ӷҰ̢ÌӒ̤Ĺ\"]],\"encodeOffsets\":[[[117788,5018]],[[117788,5018]]]},\"properties\":{\"name\":\"Brunei\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǝŰīĞGČhQ®í×«ÛyÉSLiÅL»q§gſCƝ§ŻJ½º{@ŝÝҟcͥĲşéýƯ}ƭmŻdoºɇÎƹě¤ƵĆĳǶlĸâTf´Ű҄Ԅ² ĮªĆ|ÊÌæêb̰É^w{Ĺh[ľSźPîMʲď´HŰĆ P]¼ɲĉSƍ\"],\"encodeOffsets\":[[93832,28427]]},\"properties\":{\"name\":\"Bhutan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@_ƧגࠁȖԋࡔҿĒͅͰqSһ̂Ыࡘȱbȃǎ½àß¦ȡgĭÅÉĭęïՇǳͭΏֵέȿ֍ǽŽƓƽ¯ɡµĉĵͥޑʯÿݏ\\\\řĠȉNÙtщʺȫFɩƙɿ֥£ÝɇƛŁǇã±ȇ×§ąߣOĉĚŸ۞̧٦ϙ̶EᙶࡄIᵦሶˎ͌ϯզξʌ{͆Ț̌z\"],\"encodeOffsets\":[[25865,-18220]]},\"properties\":{\"name\":\"Botswana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ڊअoЛŻȍÎʣԠųŨ̽ҾŻ̈ˡgɁĈŉ࣪ڕ­ƯǦ͗Պ̃ɒԩ˥úȿřટɀϭ́صvݷˣҫ¼ωӵ༩˞˧̰ΛɔʱγȣЋқ`ܱŕŨˁĻ֙ǀ݋Ƴţ֣ʇҽĵ՜޹ޘÃϪ˩ˊƗ֬®ӮƻƤʶȮϾުɰˊВaΞƨƖƶȪ˃ܪζޒ¾ҜԢȇƲÐĒୖǂβɺވݒô̔؈̮̔Ý\"],\"encodeOffsets\":[[23409,11182]]},\"properties\":{\"name\":\"Central African Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ˣ\\\\͠¤»¿\"],[\"@@œ­ĂƪĻ\"],[\"@@ĵÌƚR£Ý\"],[\"@@ƍWʈĸĹğ\"],[\"@@ͥyɰĶǰŦùȡ\"],[\"@@ȬǍɽ˒¢ɸǼɭWκ̖Ôī̤nǽۥ̍ԡcƓŤϢҎՂϲǨÜɡƋϻԡ˙\"],[\"@@ŊĀҪŝघAуǿKȍЫøń´ƉĎàüȡſΫÐįƘ̑xsƦɃͨΞÿʉɶʵ\"],[\"@@ŢqȡuìǈѺǲѥ̑\"],[\"@@ĉǔȪĉǥ\"],[\"@@ॴΠͰӮࢨҔ܈Ǥذɶࢢ޺ਞֆႺӲૼkԶˋʡɦųēɣއͷ֕Ƙٹƕ̂іųȰȫԘƪʢĹǫ̙ͿɣЦ§ȧ˺ӧՂÙì·ȋï̔ƍࡄį¥ýɤuѸȸƮǱʆŤħÌŏƯ×ΰÙቱկʡKǟ͝ƒďƁÇĊıTǹ৥ۇɋűȠȧfÉˤ˚Φɹŏ²Î൤ۨˀ˃ǎ؎ŮోSҸИƕ{ųŠūʷगΑȍĀêĎ΍ˑε{ɃĒȯHÇΰ̳ľIଘέɜכœħǸǉٝىʏګӋՓϳhǃʃᥫEA\"],[\"@@zùƓŚ¸\"],[\"@@țûÝâʺZ\"],[\"@@ĦéʯÇPĮƺ\"],[\"@@ʡĦZĴǂLĆȥ\"],[\"@@ਫŌோ֌̔°੮ȣ࢖Οĸŧė\"],[\"@@įˈȒǋġĻ\"],[\"@@෺˕նڋۮʱоաĚôâɓɗó˿Âৡ̀ɪɢƺĩǕҿã˵ƄƺĀʵÀbźӫImǌ΂è͟ ͇ȌǯÃœɒċïıĤͫˊΚjƮӻíʍȸάĮ؄ȃ\"],[\"@@Ŀůϓ¹Șʛ޳ࡵ÷ͥդтdƥֆՙ̧ɪ¨ǽǿײįĪŖĻέ܎ϔ°ǓЬĦ˴ĵƱӳ̓ʸpħĕɔ§΃ɗࣲȬĝțЉǍĳʥËȚIȍȓǈś̌͞ΖĬʭԍȌƌǺňȁϯݥǩÀɡáOю΋ʳƏ˘ҺŝˈǟĔʝϥ\\\\Ŧ͏ƋϫЕЇŋŲάŦרшӧGǫǏҩɖøRȐޓɇಿƔٽƇǡƔ¤ɒ߈Ѷ۱˚ǂÃąǆ©ˀФΎąĝøĴŸǯzmņǔƀȌ«œǰвڰɈĠĳìɚˀ̔˒րȤˮćrĜǪ\"],[\"@@ȋŸİèĜȟ\"],[\"@@ɓ¸̼Üħœ\"],[\"@@ÑʞǊôķ͑\"],[\"@@વʬǊŖײhͺϩ\"],[\"@@Ĵɯ˳ѢƫœĻ˦ƍ»ĥƪWßřߍՊlǺͷŚژ¸\"],[\"@@ΝƙȕÉЊŹõɵʔŤ˄Ͷƕäơ\"],[\"@@ſrðǂÐǳ\"],[\"@@֛̈́ÈòюǏǆǇÿÝ\"],[\"@@ůĩˍ¢Ɍǔǲŋ\"],[\"@@̒yŘṯ̌ʭ̈¬̌ϼĚʑۧ͝ĵͳĸ˔xΛƜȟˤ˒ͤ\"],[\"@@jŸŰcƙœ\"],[\"@@̤Ɍœǯȏ\"],[\"@@áäВƮͯɑ\"],[\"@@ȩ͋M˞ˁ˳ɧÉȄ˒ϋȣѼծß̟ɞΜ˰˫\"],[\"@@Ěř̽ŎɤL\"],[\"@@ûÓÆƒvý\"],[\"@@ǋã¦ƺŦĕ\"],[\"@@Íʝàĉłΰœ\"],[\"@@őØɾɮɦřΑǫ\"],[\"@@ŗWΪĐʑ÷\"],[\"@@ԋʆդZʟ\"],[\"@@Œū˳ƒǢe\"],[\"@@ɒƏȅЯγϗȊJʔ˪ʆ͎f\"],[\"@@̞oYıΡHÞŚ\"],[\"@@έ¤ϡɶٸŝĘƻ\"],[\"@@sȋҕ˝ϕǋֵ£Ǳʚ҆Ϛୂ¦\"],[\"@@̀ȣ·ĳӿʸֈ \"],[\"@@ֿǎȚĀИƭqğ\"],[\"@@ΘǔΖȫႆӗ̾γǯǑࢸØѶ˟سʧ૧ȶõȄ۱Ǽૡۭٓǃ́Ӧ୏īȂˈְȢĹήʦ߾Ѩ͔͈ƟÁȣːȽ\"],[\"@@Οƴ­ɒͤſêʅ\"],[\"@@аåĉëډŠʍ̠ԶƓ¼ƙ\"],[\"@@ʌMśşůŮ\"],[\"@@ǅNϤłɝŏ\"],[\"@@§ëǛĤĒȢŲə\"],[\"@@ߝŏȨ৴ÇòǧǷS\"],[\"@@ʟĎÉɜɐǤɾĹƣϓ\"],[\"@@ԈűĻ׵ӟƧএ̡κƮɘѼ˨ޜ\"],[\"@@ǇÒȆö}Ƈ\"],[\"@@ѕźϘD¾Ž\"],[\"@@ѥƪĦƌʮĒʣ\"],[\"@@ϱĄʜŦɾÓħƕ\"],[\"@@͇~ɖ̊ȁ\"],[\"@@ǛkŚƄĭ\"],[\"@@Ǣވ˲ϑλγė\"],[\"@@ŋƕƉİʖ¦\"],[\"@@͑ŊǈƔѨ×˝ȅ\"],[\"@@šƮˀĩƝÃ\"],[\"@@ÜǏʗÛǴñǩdɈ̦\"],[\"@@ʳÜˀÆKš\"],[\"@@UěڷĿێȜ\"],[\"@@ĹſгFÎĿۇư̶Ğ࠲S\"],[\"@@फ़ʣҤϑОÓ࣏॑̕Ô܉ʤ͏Ǜň̋ÍȫĆƠࡀǠùȨъĭƅ˺ΈÄ̎ǿ\"],[\"@@̖įٟîΊ\"],[\"@@­Gȟ{ͻǕΗʭ̯ȍՑԩٵ@ܥFɗMĿ˝įöœr­MƟõÆÓɏƇࣗ͏ٽıЕŧϻǵϷǵɁ@ϝʨɲӄ̘̾܌ªĆ̅ౚÇɜ̱ƞ֡ʤļƬūĺ̥ũΘˉGȋǭ̚ǍäӧȬࡩΔ҇ǲ҉ǴՓȰࣝʳૻŔȷÀ˿ŕԱȴ˽sÇ@ïƄ˯ŐΟ¼ĳWˣùŧæ٥ŖûĸùŜµɌNʧÆMͅȣBܑ@Ω@ܑ@੻@⿿@、@、@ᅍ@Χ@Ω@੻@ີ@ć@čąƓʂ̌Ŝͭ¯ö˰˽ʃлǦŐƨűȠĂʕ²¤΂ĵʷʟēсȼɱͰǔϢǗ̝ΕaÁŶďƵϟ̓øҚİԡsŞƄŭzJǈĩšΧ¡յʄʐϨؒĄիHˣȕƳǐ°Ѥ̜ƒǐѺ˫ЕͬȰʚÉúǃ؍̧ʻсɋ̶ːƆĈȒ˧ƵȀҢʽíƇˆұȐùƔˈƞ§ų̃śΈEǢţɻǪϽÒõǊȜĤΫaʣΡʱƕ٫ЈʖΆΖĆϩ£̃Ȭܴ࢔ȟĈɅхݦëƄ˅\\\\ÁĞƟەʘ̑ǞȧÄĆɳł¸Æ¢®ÍÞšŌěþϛϘɯɲɫɾ֟̆ģøÁÎʅǆɡöěʒˇƒ˭]ԳĽĿǁiĥʵȟCˁğŵ«ƉíçZÓʼ؋͔ҧˮˇŚ¢ö¶Ĝ@ÂŽGχUʟũЕĮÕåȥȩ@Ӭ@݄@௰@݄@௰@݄@௰@݂@݄໒ŕྞҧग़çܨǕ֯ʒ̨¬˭îȀǘͲEŶƈֺT¢ǢѼƥʛɉࡖƴȼǐј|íâ˚ࡸǞЄȄ؄ɨĐxǏহ̃गį݉ˡԍ̣ɾćǕöْZšȚ޲̒϶Ñɘøþȭܒі਀ȸɑƓĔċǜ¨চђУƄưžٞɷࠎف؎ǋ̒ÜƹǖӶ̨ȇμľŰ͑ʂÝǵ˙ںrцΞߦLजŽ۔ɽណϻঘÛƹŘڪےǏր̅ōō֙F̥řʳȕʨëᕊŗ౜ĞޔǞόɓӾƼɥȨƨՀ˻EƉчEਤ׋ϛ˺]ȴӌđک߀ƈǾାƐ֤͢שÛųƅࡕuĩƁӵgͩŦ;˂ᅰʸДùʸΑ،ƷƔƕ࡚ªॺ͇٠ૼŪઘĥђæȁɠপϥȼȨҁļϡ¯ϩφζΤÎŋŘўwθȭҠ²ʕɭلǰͯةȒȧΞµō̦{EţࡇՔιȽː՘ZŢˀͣЎǆʄ׺¦ઞҢ͹͎ǳǹ҇fѢːƝǆՔĔŇǇǺɊاşǎǁÓॣȎӯ΂ɈʨΚOŨ̹©ʓƖĒβ͔ƤмÝƂžϹæग़ΈΪǽҾmڢЗ·஖ٍ֣´Ǉŋ҈Åމ̵ӜJʹţ׮ĪȧĳࡲÍЏǃ́fِͻāͿ̴ǽަ࠼ࢴ˹ΆӍáąϡ˳ߢٯڤʰޘ৾ٴÖȩÒȶȖѳƄĵԨ᝜ŻȔ÷̩ęώíêƉ܌¿ӣʫӜČǉՏǗՙWˤʩǮ¤˧ִ̩ơΫ࿃ו्Ԑʵ²ɣĹ͂xўɃ̖ϿΥà˭ëࠍ̢कpƋؐȯళٻѣT๻ӲşÉಋâ͖ı¶øࢺśߚε࿒ųࣟ࡝ױǅ͏ĸÎũПÀǏŲȗƼƹʿn\\\\ʏցğছȰ̙ଝ̠ŘɿʒqĝĜਆɍʷŗԼŤܺɉɬ͇ؿɓދ`ΦȑԫǷǑȨƳ֫ǒʦűΫʁȻRɨƥԍʇԅ݃ɃęwਗƙǗ֞̑ΙǬτߎUظ୿ུ̫ͭˮ࿘Ϳܾ͑ӾϑྡྷЗ˺ǇŭɧʰǦॴ|౤ȹƤɉǣӋʄΩųڋ׊ԇȓǫ̤g݆ҋŪɻ΃ɛ̼ƶ̾qٌѩ͝ΤͲϊʢƑŚəƠʠɁɸ҆Фʝ̙ͨࡂĖ̄ȷĆĂÐӅф࿀Զঞބà׊ʅ٠̤̅ଝ֎يזʞ̈́ćŕĚǐ˲ʝÈŐ¶ȓʀƬĬʋĈǜƚӻT֖ئэɶĥϚٖʒಲɍxŗϖŐ׬Ǒ[Ą߈ɘࡤ̉íʅɢèɼùƾŵƩý̎ĐȒÓǹƩδɿ०÷ʊǱЪƸĊǋ̕΁ð̩࠙¥ޞěªӝ˴ƿηĭ£ŕŔ̷Ǐ̬ÑѦǐӖjˈƉŸɑŅˑַɕՄŰͤθŐǃƧſʶɠàΏĞȈ܈ɸ̠ʨ̢̡͞˔Ǡ˴ˇźʎĐÁžξç̳ŶsȦ;KťŘ̖΢ˊ¿äą̉ƅРª¶˓ƜæʲʻǏōƜēȤ²ľřұş؈\\\\ǙȚVƪǥ֍˽˞ŚԬNǽɯϗƻٴŜƲƳ̆»SʥѷĻӘË±ơզȥˡुĶٔɳǝđў¿ʍŉ̊]Âƙů©̢Ň̄ÚƴǷȄ¶ÉœǼƙΥΝܞȾÎĥɂiͱ̥Ӡ͖ɘ¥Ǿʽ͎ÃμĐҶʅʛǣءƃǕƭৃǷ˓ȧȿ¶ʜƕȕȃඬײ׺Ĩ͍płĨٴÅʀ̷͛ƯǊţЬɪ͂tоʙƘɑIӍѫĉӠÏ}ġȟ~ˈɋ੿ֱಅƋୁࠓ໵ǳǍňڝÌṽ÷Ϗǽαթއŵୣ࠻૿Ɏॸʃú×ȁ̝ׯԋҿ˿ԣğएБзЅһȣɷ|˺ƻ؟˻\"],[\"@@ʻºȘǊäɃ\"],[\"@@ߎ¸ʈʢҐఞɭԿ̛Ȃ±ం̤ϣ̆ոq੆εӊ۝̀ćюɦ޳੊ǬǘಠŹࣈ΁ࡼৱŇљ޲εюĹzŪ଼̓ĪţѨq¼αуƜƏŵ҅ŮΏŅqƕ܁þΔƟÑɣ֤ɬʹWǄυࢍǙඩ¤҅¢ðƊਿĨ͛ȶٿοޥÉछɑᵽƳЩ̀Ý̚ྣôݩŢֵՊᔔɐ࿢ñࡌìᄿ͎ምĕഅ֩ɒIŬ៺ϬᕏďʑÚОǊ۹UͻĬȆؚɸɣƐ̈ǦᰶتδÙžȏЃБ\"],[\"@@൏ҼʶǺઞÒؘǃɡ֕͡\"],[\"@@ੂVࣤƓࡰտ൹®ఝŝсÎ̥ͰӿĠÓ͘ાÇ\"],[\"@@ߐŢҤAɬĻľԒ՝ÈӓʐӸȸࢎǁҷɜȀÌ׽ʷʨ͚ȚࡌƁ৕ʺࢎ̎ՔªƆຆżҒăैܩߝϩ԰ŜˁҗزʨʢȋžɸĪۦƥOȕ΢ƋɷȄƎɀসơ߽ʖؘɊႤŹո̃ܵёࡨ͐׌ķęŗݛŏшʝϧђΰ֤ļ̯͑ТƸ҂ʯćɊ͂Š੖ƋΌƫɟȝϋU׍ɛݞǺ̺ÑҜŒź³õɓे̣ԪÎŹ̻ϘϠࡾɞ௢ȡŎŇ෍ρ੾Ɗȗȋɞֺ͂אʁŤʭڣਗɏئÆ੶įѪůRť෗ÂՑőՀØӪę§ʁ஻ÖञŻɬƭ৒ÇʑōĠɓǎÂÈāƨΚÐșϓтȦàů̘Ğʗ]ǢвŸĉȳ͐¬ڎɱƃǿׇFܨïȶĨҨţ։΋تńӪɌŠ٪̛ƥŋԃîҬɩ͕ÁԅĈhƯҖǇՏgȰƵɵǋѓdʑǐŧȗ¡˂u͗ȱʩةȴÜȔʇʅ܅ծߦҬҷȩۑåƚǪ΁Óޡж÷ďȗèɓփƂךεƕĕБՍʆʏ¥Ҁķ~ǩːąÏǫ̰àϞǟǿÿ՜ѿÀƼΞɹɴƐ֐ɉɉŃϤÉśő̯SΊɟЮ@ĵĥ͚ǫɇϯѷѦļсͬ˹ЫV®ʳफИIĭƻȫȨǏ৏֐ƞʽ٫ʬΕk٨ѿϸá»ë๎ڧť˅ᎋ̦ӷƚЀՋIӅŮʯüƈĲ͵¯թ̎ԤƐޅŮĮƒ˗ÍߥӚƸƸ՝IŻŹÅƸ˥ȁƼȧÅȌɥࡩx©ōࣵŻݻĺʇŞ¥τؠɐɌ఼ȍ͕̈́ĂƖχʐՎ[ࡺȂӲeܫֶ୐ҼȶʬӌȊࣃऒ҉LA˖ʝ^ņŷɽMԻɢƪȦ༳̅zʼԔlʲƴۉɎȚǌё÷̇ÀȚŞ؛ÐƵͦёSڃ̀˵ǟҖƅwɝԿ÷ᅗĶؘ̌եǲؓėܙƠ׫ೕŲ̇ÙҕĞÙːேǿߍȼ֡ӊഢįפÈᖑϜ³ߘঀ࠮ࠢː๨ńࡈŇࢭ΃տӵςۙ৐ҝೇ˻\"],[\"@@܀ǵదƀрÁƚƃԽƏ̒ī९ϑڈòѐͳҊêŬƃ̗ȕǀЩ߿ǡԉšǄľΉϵśһîଷ٠ԩƐџCࠟϘъ˂޲̙ڎªöǢɤÏ΃ʔײ`ғŪѯëՑǲҠĨϢųχ˼ࠈHUŴ\"],[\"@@ס³ϋêขǶӓȫ\"],[\"@@ߔǁഄiȸŃร࣑ჿHφõǺȹЛͣࠃ_ӿܸھ޼νǾƊƈຬĴ\"],[\"@@ѾîôƵӖȖࡼY၊ԧÂƯᱝىҩ͍֕÷σקܑĭɷ²ଃ̍ދӪએʞңLႢຐݯӤᧈǔ࿈ʿơĵ\"],[\"@@ͧ_ˬĮ¼č\"],[\"@@ҙÞ˺°Ǡō\"],[\"@@٣ĤҔʂנȱЏų\"],[\"@@}̟߱ჃͪըΌࣜƾࠂǩ̮ͧ\"],[\"@@۱ŋÉŌԬŨʐŧ\"],[\"@@̽ƴ̨ÆVȹ\"],[\"@@ЧµӟĄ๘к׏҇\"],[\"@@ӛéՊʬ­ȁ\"],[\"@@ȀÛӑƅء_ɰżߋ^ƺĔωVĝŔ഼ŀтʕ\"],[\"@@ࠆőɓđ࢟Yȑɮіºªé\"],[\"@@ǃץМóÒɅˇôȍùǢʏ̷ÖÙƗᄩsȽƲ˴¸Ӈƈ౤ʖ᭣ƹǭðոɴঠÝχ¢ϩȦ̀ŒӛĪׄĀದсȹǌӒzܻĆξÎ܏ǲࡠĞޤƕưȔࡔȑ\"],[\"@@͗t଀ňߧŻ\"],[\"@@ӎ½ʡǅڰðʬǱȤ̂࢜ßĨˁӕҗࢽƋ૑h̙Ĳᶿկॷաɚఐɔ঒ӠȦᔱƿšǆ͖ƂңdŷǍ̃ÀǁӋģͥŜ˅ūعǠࣵ¾ʶȐল޺Ƽઃýاº̤ńຼľඡ¾ϤȦலmࢗĈۖȒڰ̶ȵूI൪չᄘMDƂާȘ͒Ǻ۟ȌৼϊՌ×Ʀֱ\"],[\"@@ۣȒΜĒφą}ȝ\"],[\"@@ੱ¨ߌĎ˦ŵ\"],[\"@@ࣆţʯ˓ҐƢෆ¼ٚƻܻᅌŻĹĥ၁ᅊΥ̱ȗؖģɬǤόūІÂǆùʂŐલȇkŒ႔ʒאË࣪æ໨ǝۀ̳ܻȍ࠘įҗë͹Îîˋඩģڝ´ډ̺SˇݥÝՕĊÓ÷ʷḙ̂ďᔫIģ˴ࡱɵ࠳¶˝ǤɇƗΑL۷ԜǢӪݿѐᆵ÷ٟȈ͜ĈਕżД¸̙ƦކĀಮŹ\"],[\"@@ٹȍѨǕωʲǅࢫƯȟȿّľĦͲމʕʏ͛пǞ°ˡ͗śзσ̜̫Ǘ્¹ǰʻw͒ȀߪĎᐄܐሺǑłѺè߮ƹ\"],[\"@@ͧ±ٟİs˄রŷLȉ\"],[\"@@ցۏҶϖG࢜ͯ_Ǐ\"],[\"@@ᆸ«ȯɯᏋdǩǼ׮ü\"],[\"@@ַÏŸ੊§ǆāׇ\"],[\"@@ϣ׉ǎղƌм˕\"],[\"@@۰y਱ȫ״ÑȧᆣƉڕƔ§̾ᙎǘ\"],[\"@@˦˭ඹÐ̇ģԩúࣻḚ́ƚနɤࢾë\"],[\"@@ઐšΏƑͪűႱɧ֗ʆ״¾कƤʃϖߚRবɁ\"],[\"@@܎νܺǘӚɷ׌fۚȣό؏झqڣ̤ಃ°Ľĺ৹ġۇüūǚ૶YϙĄղĐہǪرƳŰȀڏLlǮńæ࿰O\"],[\"@@ŹɍथƤHǐݴ̤ť\"],[\"@@ਰґஂé͈˿ւ¯˙ʴ܌ȹɱߐǡˋˁߪ°ˤſ̠ŐԘ˝ྑʹևʣΡˎ¶ϫّ¢åͯ৷Ξјϓ٫ƘˉƫรƎйŮࠚèୱÆ̱ŤЌtߣźೊ̔਺ø౫ÞणƅƩĤ࠱ĥҹȦ੖Ǭ૳Ù܋ɌƷȂᅄó͒Ŭॣ¹ࠩư܂ª̔ͅှƉೱɼ҆ǰ෎¨޷Ș়`ॲǳ\"],[\"@@ᣈ÷႟ɯᦜŪˆĒЖĻܨ̧ͨ٬Ð࣪ßȉɏᛏχᇃŁჁ˕ᾆǘ♩टঋƀϔʱຓġద}ۍ˥ࢣÉ࿧ưޠıĢɃᅡ÷୩ĈઞɭऺSƇǍ῅טŏൂÄ๨ɋ͡ǥ಍ਈƷ֟ˉᅫÃÃΩՍƩ༩w࣯ǰ̜Ƴً¡ʨýቒOѦʫ׆îʲȇʩƹᑝͭƥʠرrڿȔʠɍ൷[˵Ȉ§ˋܭ«િɾȏǩ֣ÒŕŚOǗݯhċ̰¥̏ۗ¬ŉ̒ऐɸ೰æܳɂ˯̊੘âখͷ܌čࡤ®ࡖκĬŤহϫ౓vɏ̲޴ɦͤgֿÂņʎڭΗՍyʢɘ࠱ǻ՛¦شԈະŜผţ౪ǦׁÓဇþzĺڶÅᜁږßΎᙲ{ႊҗ৲ã̐ÂݕpဏՊㄾҖ༓ò໦ДℹٳགྷÝ֌ǎᇏȵ໩̑Ĉ߶ɖጎȊᐯħಣ̫֣L঍ɠᗄĂಊɂያǥጉ¡˗ŞتàϷàნǔݍ྿ƅԂȖఃÃ̗ĨᳮΌ࢜ř͢þ೨Ë೑Ȣ฀Țቜ̹ĆƜᣒͫ᠛Қ٢ľλĠੈ³ŭǨቘċ୿Ȝᒌ_ഞ̣όØಷͲᗮJ์ʕڃƸՊƪۢh࢘ǗŧƲपКĉ\"]],\"encodeOffsets\":[[[-61222,44995]],[[-68364,45755]],[[-62424,46582]],[[-75463,46680]],[[-75332,46561]],[[-62571,47048]],[[-65342,47584]],[[-63400,48420]],[[-55528,48580]],[[-76501,46084]],[[-129118,50539]],[[-55863,50779]],[[-55391,50939]],[[-129680,50797]],[[-63284,50273]],[[-128188,51300]],[[-130250,51856]],[[-56789,52774]],[[-130994,52710]],[[-81289,53199]],[[-131449,53659]],[[-82669,54014]],[[-134915,54473]],[[-131637,54211]],[[-132267,54393]],[[-132964,54444]],[[-133361,55254]],[[-135839,55427]],[[-134069,55787]],[[-133709,56085]],[[-81897,57557]],[[-80830,57617]],[[-63225,58936]],[[-81629,58896]],[[-70819,60458]],[[-65952,61816]],[[-69871,61687]],[[-80416,62187]],[[-66388,62839]],[[-66591,63365]],[[-81454,63910]],[[-66379,64061]],[[-72025,64050]],[[-83968,64466]],[[-79745,64994]],[[-78517,64916]],[[-86957,66828]],[[-86706,67149]],[[-85735,67376]],[[-110686,68614]],[[-64185,68666]],[[-110489,69020]],[[-75388,69411]],[[-88673,69362]],[[-77492,69963]],[[-80878,69830]],[[-107049,70048]],[[-76678,69990]],[[-104290,70233]],[[-102622,70459]],[[-102394,70670]],[[-81111,70498]],[[-92364,71086]],[[-78843,70804]],[[-103599,71063]],[[-97805,71244]],[[-69544,71210]],[[-79901,71389]],[[-81337,71463]],[[-99778,71315]],[[-88998,71796]],[[-76501,46084]],[[-99105,74688]],[[-117270,74336]],[[-107815,74670]],[[-81446,75423]],[[-88667,72716]],[[-102401,75721]],[[-100628,75642]],[[-95406,75941]],[[-122609,75892]],[[-99692,76315]],[[-97594,76294]],[[-106618,76838]],[[-95787,76829]],[[-98384,77323]],[[-96795,77568]],[[-121168,77394]],[[-80960,77749]],[[-104680,77840]],[[-106519,78422]],[[-100045,78302]],[[-103655,78418]],[[-110891,77883]],[[-91879,78344]],[[-116286,78586]],[[-96558,78759]],[[-118324,79220]],[[-91989,79123]],[[-107067,78994]],[[-97776,79660]],[[-104134,79562]],[[-116564,79621]],[[-113109,79978]],[[-112451,80539]],[[-98513,80417]],[[-105908,81220]],[[-101162,81901]],[[-94090,83081]],[[-71156,85010]]]},\"properties\":{\"name\":\"Canada\",\"childNum\":110}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÅÑ@ĝ«ÏƜBAҬǥǺŒÆiÅCŉOÏĩȟÐ·K¥]u­mÁNwzµfĿ¡STďľ¯Ląků§¹B§TďƨyAā^čɵíǡťǕȍǦÎ®̡ƚóǘÓÇ¿ųíõȫ֑ēǕÕplÉü³ĿĪ[ɀƯlűMěñ½ŝħãIRAÂÆp¼ʌɾǂhÞxĮƘ²nlŐĘŌĔvnj@bč°ÌºƘǨ³ɮƆ۴HĘxX^G\\\\]NčMVStŘߜɃĐ³ćǑ@A\"],\"encodeOffsets\":[[9757,48405]]},\"properties\":{\"name\":\"Switzerland\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɫªƎŞĞǇ\"],[\"@@ɓśŽĬәșȬࢲFƔƧ\"],[\"@@ڪĉό¸ŽǑˤċȠ͙ۋǊoǬʫÎƓŅƬƥȗӋʠĄɞƴ\"],[\"@@ƾċ͚¸ĶǣƫÁ߱ʎϐl\"],[\"@@̲áķɗˣŤЍÏɗɈǶƌԚŭ\"],[\"@@ąʹSɶǿǟǑϱĻĚɘɳƑŉXēɎѿƸͰŖѰÓ\"],[\"@@ؚŭѦʅγ ʥǮ͹`ω˪˞ƣ\"],[\"@@mᇛ۩IȥŬٱą૫ƶąĈņĂ؄SʂĮĆƃ͞ҩΘIȐ˰ɎŸ̟ȿeĀŋ̮ȱάÖШɁǬŴߋʢƍȄºƔآʲɿè׉ħʖˀŤȿǆϐËѬˮȸƳ͆úƆÛ\"],[\"@@ʊ˭ƃˁƁPɅМʂƄ\"],[\"@@½ĳΩCȯȑŖ̆ΖÒƬÍ\"],[\"@@ğë_ʄʾ{ƽƛ\"],[\"@@ͥĺ˦Ϛćƭƽ\"],[\"@@ʃ˕ɁźĨăȊАn\"],[\"@@ıܝƙIįʈƀʪȣĝėˍН¼ȲʢƉŔ͌öĽĺɖǀ®Ȓ̌Ð͋\"],[\"@@şƪâЬƲÜȜԑ̏ş\"],[\"@@̙ʏР\\\\ƖʬŖˢم\"],[\"@@űÖˮƻĩ\"],[\"@@ŷÅȋĂ͈ЬCѧ\"],[\"@@ƽƜĂĜüɷ\"],[\"@@ȯãƙð¡ŐȦʴβƣǫɫ\"],[\"@@ɣǑɲԕʍűԏהĮƦͼìĒȾʔőķ\"],[\"@@ŧāƿ¦˨\"],[\"@@˻Wɭł̎ாђčĖʟ¡ɯˋĳ̔̏ˁȅoƿ\"],[\"@@ƻ_ĦðÖÏ\"],[\"@@ŻĒĢÑ\"],[\"@@ƾƯ̇ࢁݧ̝ʽ̗Ƭ́ǩ˟Ƭ؝Ʃˇɮхɯƕɇ[˟٩ЛЩƝ׃ǗȃÊىĬąĥƵǑEſ֋ǯŁÅΝ˦͙ğŁ˼ڧ¿ˉɞç߅ǙÛ˹܅ƋċŞɵVҏճϱŗˍrޙʸ۽җˣř֕Ʊ¼͕ƃŽĠǣȉʻjߩƊ̛ͫǣاͪȹŻġȌӧŝϡԜµ¬ĳďǟګQnōϐÙȺ̑ͭȹĬ̿ȳǧƨЭȫƯ̵χʓƟ͑ǄȝuɋȑğḘ̈͏ơďʉ˛[ýų¬։̊ԧդŌƜ×ÉܝЪϗ࿪eౢ̉ڟŶ͉ɑথʯǙࡓʩĕ݃ɂȧʂЄĮ¦ʑĎ¨ɄϞǘ¾ȈƉ ݝ̱ɫ˟хǼ˘Кɲ©˰ƐԚ׷ìǱĕɱø·ҍѭȤͼŊİȂĵŕ˻¿έ Ɂ҆βŇŴƀΤãϸǪȌȿęƹżňďʸŔƶɫǈ΁Ĵӌ̃ޗȭȟȶύĬɢÀS̐ܿǠɻ͎΄h÷ǈŎĠɺŃȐˣ˪ĵŶϐ˕˫ǩ˺Ȣq֭ˈʞȂ̀i̫ǰưϢKɏƲƆ΄ʉЕũČtڲ˨ĶϷVġϸৌūǿŸę˴ȋɯʉΫɢĸŔʔģĞö̉ƈ˘ȼŽͦşlµıгŨnȔҳƽĢȡɵȔڂҞţʈކĜɪƒüŐǏԟ̻ƉΨÂöʴŦvɑȫϱĔɆ֖śΚϸŒ˨ęѕǸèɔԾȴ¸ŞbƄԏɤɪžÔȘáʶˊʆ÷̶ØƐŢGşɄŢ¶Ȁǁñ΂˗ÔϴɔŴȋǉ·ƨʏɟ͏NġĤƊƿÄŽͰʜॾɖƤƺӆʙ׸²ЀǓ˼A̜¼Ÿ͖nĊДѾޮƤͲЪȆ޲˴њßҶʒμɋႀʢɨǀìвǟ؊ǲɈȄܞƈȎɼ੒ÇҞɤԤŅѺƴ࣠Ǜʼ~ǖȚǪɄరįՎࡨɕଢаŜľǺ¥ʌƖ®ĊÞÚÈǖν~mǂí§ÿ¬śÆ̽¢ſVŽĢĿȦǟÖ²lwPoħŃĻƉFgİĭhCÃǕů\\\\˽ɘƛ×ɯ̤ͯVˋʰܿDˡʦÍǾƖ\"]],\"encodeOffsets\":[[[-68903,-57115]],[[-68689,-56477]],[[-71375,-56237]],[[-72695,-56184]],[[-73103,-55329]],[[-74673,-54765]],[[-76170,-54192]],[[-70277,-53916]],[[-76618,-52869]],[[-76348,-52507]],[[-77109,-51896]],[[-76856,-51503]],[[-76909,-50008]],[[-76263,-50327]],[[-77322,-49933]],[[-76356,-49758]],[[-76914,-48985]],[[-76096,-46788]],[[-75399,-45897]],[[-74737,-45854]],[[-75504,-45460]],[[-75582,-44879]],[[-75543,-44386]],[[-80695,-34453]],[[-111902,-27791]],[[-68807,-23369]]]},\"properties\":{\"name\":\"Chile\",\"childNum\":26}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŀ˯̻̩ǃҙ͓ʥҡȕۉˊ٦ԤϨċNðĪބƠΖßÂƌȦū\"],[\"@@ŘScĭȉĖü\"],[\"@@ĳaļòGÏ\"],[\"@@QƜægÓų\"],[\"@@ý§\\\\Ěâ±\"],[\"@@ĵolǦĮ¡cœ\"],[\"@@ĵoØŢı\"],[\"@@ɭ¦¯ŊˆÙXĕ\"],[\"@@˽´ʷɌնʿ\"],[\"@@ɽǬKŮ˽ĚǙҧ͑̿݅͟§ȴ͉şȁ߿ŦȍȦǱهۏऋϏѷϣɋƍϣڻɽܝҡʯ¥wśУŏ³ǂӖǂ«ĤǈƔҗAQƆɀĂ@ǦʆĘЊӺυζėŅү°׏֛ࣳГΏӏ֯īɍƈƥȽ˳·ȑǬˁȼŇަşŲ˻ŗ̳ˮǋЈbҪϾ¯´аżݠ̻ΖÌԢŁȃ˭Öķƭĩ΃ń݇̇ȱjîǁƹ}ÕʃȵÛÅƤŧsõëǆőܗַɛϝčࣈЋԔ੏c̕ШȣÀǿϞ͝VħƻRˡŬ͇VϟȤПƛְ¢ÔƏܼпǾͷϭŅԅι̹ɉūʦ¾ŜƛՀƞΜ˙ͼĝӛ͕κĸoЃǙĸȗÁǊȫśiĺåƿǭŔ̉˳ÏŁĖƿʑǯuîĳȵʻjƗˡ˅ǉΧǡ»·ȢħįĹ²ʘϙΗɻ˗ÈǊơʌ°á΋êǙω¸ĘǽʷmËɽɫÿhǵӍLåũƏOǶȓΫ΅ƋHĉɃÝłǩŕƟÌ¥ǍșĉÎÛƇĉËȝǿͱƯǱªšőʫĈ˻ǙǝŜćȏʍXɁyͩ̌BɠčsǃǅȈˉG̳ͳų»ŐœʥũȅƗȏǜ¯ȣ̣Ğ˹ʓӯ¡ϙʟſľɍͥǲě«ƓǖŹƕȉϱÎðìʱЀfǸɀ̌ȳķƔkŹͩĥƒˣƭɪħHnɫƫ¼ßŕɱ¥ǳŬ΃͉ˆʵ°ħѮȖɸȧŊə§ŋĦʯ¡Ӊ΢Ήǫƫ˃˅ıȓĆǛɓˑȮŅǋƓƴ́˓ѕʬÃƛȭ»©£ʇRçĒkJQqs³uß©©mǲΩN£HƟqʓÞđaO±¡oMƋìɕ¥\\\\ovY®RÄÆlĪµ¹ǀЋʃϧRǧɸoɨ؋Ĉ˄۬õĠүĺθŽɾƄǼԻUխǙŦˌƩɚªʄżĂè͎ǆŐɺǆ`˔ɸûǬĸĮ®ԆóڌǕìŻęȣՖϳ˦½MęſÙċgŉėʛȅë»٫˼ϧÜԽ̳࢓ƇϫɝʱҍӁ¢׍rKºÄMlVzÊ¬ÜØ¯îRćgğHůĪǠTƎɻĎ÷°Oůą³GʱĐíNŹOĽTg\\\\|ĺ]xŃįrĻRéaåÉËą{ĭ©±ӷس· ÉÊaüæȶhĐŜȏðŵçŵői_B¿Ƚ`ȧÑ˧Nűbķøïûûn¤yrÛP»cĹĝãġÀåþ·]ůÍqd¾åŪåîå¶ɣCǕb÷p´ĤôAjVµNǵ³·NӉ̐­ŀ¡ĶuÂáïv̑ăΫή޹Ϝƫɚǁǳrȋ¥Ƌȳß­Ǉǔĥ®ֵɺbĬʃǤɓÜɵĊɿ˶̧áXȐ½ǆȲȗȚîƔy®̈b·ƒšɄŞqш¨Ķm®ƏĶëîå͆³ǢȲǸľÑҍǺƗ˺éǂ̂ȱ`̑gŷǡǯ¾ĥ¢bą¨ËWĪ£QĭœuÕA}fÝżƃÈ¾˪mÜeÂýņËĕ ÿdħZ¡Ū}~ʕÖėe¹_ǓêûB·]]R{vķäGjƾâĢ~¶pXIzÖq¨NȒźȋǺçܠ҅ǘɃĵȋÊėȺĠĪǕɖ|ƘIªǈìøPzĜ¤Gjzz¦°Ď¬Ä۶ʈ{Č°~VŜĚHŊvɾŮCĺˍǎE͘ņ¼áÞìºĈņîdäj¢ĬƐìâ`ԂŚĄŢIƖtȈǦbøäʦŤҨȈЈĮØĆÎhʴdfVXbŊMҜ˰ŜůƜͪĲα޼ń԰ԡƚǀļ൐˾Ɇǁ˒¸Ɍÿøʤʟƞ׸೺ࠤǹմDĴšטȞƠǆŋ֊ȊЂڦŦɒѪўĀQČȸªE¸ƋŇĳô÷ǒ±yãŷˤéĔËĔg¦ÇRćĚ¥ƀËâYŊñδvèqǼƫ®Eâj¢ÎQÚōôĺsdkĂųÒȁŬƹÔąìeÐ}ÑÚœ×Бÿ¤ÓJÍ˷ѕǺˡƢl҆ş۶ÉžDǬrؔù৒ӿ՚Õqȧǚïˬ֫ѴұېÎቚȅѠĠĒMζ­ӖÅͺYê]æo˂ʅƸ·ΘÅмï՜ɉʊʶ¤ǌ@ǿ̦]ĸ£ÌjÆ¢æØİҮȈݸʜ୶ƆѠոlĔdߨˌԜӊܸ˶®ŔѽҬиגŔdäeʤIôĈÿĠ˾ÕɄeǨ{âaÆdȌŐŸ ¨z˶ȚŠǀƮ|ƲȲXѦÌѢʀ´W¦_̌͸ʞĊЌup|AĎ\\\\`ĞDǎÏˤŰðXŸĄ[ƨWÌTØSĸÌĨsǢąƜqŤZŬmðDlĶ~ƼƽʖՉшÁřĵÍÄĻĸÍؗHΕ˯Å^ǹŞı~§bşbĝIśsœJ½`ïCſËåßăqɿǀûɌĪ²ŬÀVĈIĠ|ĺܦਸ৆ʻӠ˦ڸȈðǲƵńݺ৐ֶжÿЄӳÈvżݢкᔺɘৢ΋ɚÎӘƉ׊ֱӪ੗͐ͣ~̛Ɇş΁Ϙȝע̤ȍθ^הй̜AɑɄɕÑ˓Ȕʹ౞LȚȜξƄ˘Qۚɶ̺ĵċȗƾʵӭ΍ʱࢯΧգȿġÓ̩ƫč࣫ʠͽ˽Ϸŝɰ٭D׋ǁЏէƥĒǇ\"],[\"@@ƅǦüĻ\"],[\"@@ɂzDȵ˥ÎàŮ\"],[],[\"@@těřlĦð\"],[\"@@Ɨ׏ԛژƇδºцބ୊ҬȰ˰ʧѿຩ͝ҩ\"]],\"encodeOffsets\":[[[113551,20472]],[[113035,21600]],[[115348,22160]],[[115498,22121]],[[121020,25085]],[[122697,26068]],[[124162,28761]],[[125232,30683]],[[124788,32249]],[[133660,43557]],[[116734,22744]],[[116752,23053]],[],[[121250,25111]],[[123913,23164]]]},\"properties\":{\"name\":\"China\",\"childNum\":15}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ҒӁĆĊTĸÙÖCŶŖ͠ŖǬNʖÈZÀÄą®°òŷt¸×¨C¤lpT£gåʱ´iË¤ſĀӻÕoOwfY¯qķ÷ƛБɣףȔࢍǤģƗ»ɻ̑¦ŶŭȉٯưЧ×ӒKܥû͏Ôí¹ʲi܏ĳ്և{ȆÙƼՒ¯ʔƳÈÿXÑĴmÖîÿ¨ʱʧƠɜΰëЮkǆàWĶvøƞUĚĮǰúýXÛZżN¢ʄnŊUîû@oɤșŦZǌľÂkánȐȭäcВƐǄˢɞɶñ̲ǓÈǘɐNpmĶLÆT´nnƞăȜƂºˋC}£ùFcĺ¹èMńĦX¢ªŴŚNƤŁĶL\"],\"encodeOffsets\":[[-5388,10568]]},\"properties\":{\"name\":\"Côte d'Ivoire\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ɯˉϽީʵȭƼƣ­ӭƘ֫˪ˉÄϩ޺ޗĶ՛ĽӿˉȨ۵Ĉ˗ƾઇÕĂඉǯEgōț@ʱ@ڻ@ġ|KIlsNlȢńҐɵϬĀðĽWïƾƸ°ċĦ¤úǣT·ťΥƚçϴɏİIŽĭ²ƨЌʂܸатʒ˼p®hƐĲĖÚrdjkô]ĶBǊƼ̊ʉàáÖȫ gìZƒêŲƎzǊàÀǢƒāžÖǨȴǼ׌ƞˀƮ|ÎŊŴrÌÎΖ®ļɨŚÒЈŨŔĸθƐɦǊɢöÒÜðHºh̜ȌºքčŮȷ¸óøķՎƲAǼ±͖ѧȠց©ؙĒϷŦʕ͈̋உwɡʍ̘Чڄիθ٧Íɛ\"],\"encodeOffsets\":[[15852,7705]]},\"properties\":{\"name\":\"Cameroon\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@͔ϵͼʛȢuʦƴмħȴȂǪsѤԕ˂ūàǯƞ@æőÌçŷ̯üǍį͡ϔƻÜȍહ਍Qˏǻͳşణ͉˧ÅЋɉǣdȡĶíǮ˩YٽǈԭBß˵CÁfëǚѡªŵZÓU«ėǃU¹vŭš¦ãĴȇöÙƎģŨĥĚĹĎƓĀɍ̂؝༓ʕyʥϿσǠϡܷɗࡡČȵӦҋΠÍnǆʌÔiઁȃǄ̑űƿ|ʅόƭöśˌ۵ʔΑծ˭͕ڡÚ֩ɢ»ΊމǣWʌͱɒÅģÉ̳͙ĳɗPɇrÙ}ýÕßJ«ÔmʖĔŜğմ͓Ӓþٴċବ¯pҽjɻFʫH¥m¾B¾ÀƾQ^ĝJʕǉ{ĹU̇ƁŕGǉĝƵC©{ɓǓǕ@͍ÆүƟ̫dÁQԁۼÅ˖ęƊÏżϢƇǖėÈĭዱRՍMƋPؙŧȩȰɬծ¨ÒnfȞȮĲĠ``^¤CɺȝȶĮ¶ɢȊ}ΖƼüųëŕȷʠ¥ંबȒآCܒ˚˴˶Ԫܼ֪ˎᓀΚފĴҮ_ܲЌҜδȤʲΜɓ˨̯༪˝ϊӶҬ»ݸˤضuϮ̂ઠȿɀŚ˦ù\"],\"encodeOffsets\":[[28061,5232]]},\"properties\":{\"name\":\"Dem. Rep. Congo\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĳҭΙމˍᒿܻ֩˵ԩ˙˳Dܑȑءઁफʟ¦ȸìŖûŴΕƻȉ~µɡȵĭɹȞ£D]q`ÝÊ÷Ĝ`̅ƃНΕȫςխղĖȎɨƞƴƋǌb°̆ǿŢǎȇŬÊдϬÏ͐ê]ʹƄĒǠėǖ͋ЊçɦɎź˝ĚsǦŘŘȆ˞øૈԩ̶øҶ̾ɪĚɸȽЀˣ¢ՓƛҒĸ̼ઈ˘ƽ۶ćˊȧľԀʈҾŤ֤݌ƴ֚ƿ˂ļŖŧ\"],\"encodeOffsets\":[[19057,3562]]},\"properties\":{\"name\":\"Congo\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@՛ǏʑЁχ̣Ư˿ŗם̟ԃʶÆɘųŌЙɴ˹çٙɞŹǜ˳݆͢ĔԜŗמۣߤԨŐ̈́ğPȿ̍և}ٙǌե̎ϕҡԹȬ@΄͹ˬকǥѦɿΎ̱҇ɏȨ¿šäĿඟWGձҒQƆ͡ˍÒӧŵa׽ξ̵ȠֻɧఇɹಃeǛƼÕƘµ~ͩ՜़Ëfã¥°ɿŒÓZµÂǫľ­X·gñgéÉǙkƋĢǋÒ¥[Å½Ã»©ȟ×؇N£°Ƒ¾ϔʥŚƗώǕªÃÒ¹xÉÎŃÅx§Þéɪ¡À£¢½¼ÙÁs®i˱Ųū³Яǒг̌ȉǟݵƄÑȰȡǜГŌ֭ЦƓƘȞȎǺÙ]ӪƦń̌tɆǨئ৔ƽi]ƒãħ§ʬĥƘƼÈ˘ñԐƉǴʈȲȁͮĎͰҁպŜЂȊŏ˾΀ʁѶĔƈѮӋÓįŚ^͊ůɚզΒɀ͚̈́îɼŢЎƛ¿ɚϾԐоќħƻőĬćɐҲۤsࢎԀŞʦΞȚϞíŀʏƵƹ\"],\"encodeOffsets\":[[-73031,12147]]},\"properties\":{\"name\":\"Colombia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ð½ǏtĆƂ»\"],[\"@@|ɳʇƼɌø\"],[\"@@ȧŲÔ̈́ĀÔЯ\"]],\"encodeOffsets\":[[[44840,-12602]],[[45544,-12371]],[[44509,-12186]]]},\"properties\":{\"name\":\"Comoros\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŏk±ŪƖlƍ\"],[\"@@yƾú±¿ŋ\"],[\"@@»ûǛ̰ʰˏ\"],[\"@@ȌÉcŁȽDǈ\"],[\"@@°§ǭxãęÙłʼH\"],[\"@@ý¢ŠƵ\"],[\"@@ǥ^Ƃø¤ĕ\"],[\"@@śU{žʬî°åǃů\"]],\"encodeOffsets\":[[[-24891,15213]],[[-23738,15501]],[[-24006,15369]],[[-23467,16627]],[[-24665,17022]],[[-23437,17059]],[[-25484,17222]],[[-25773,17354]]]},\"properties\":{\"name\":\"Cape Verde\",\"childNum\":8}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʜԑӌթǸýIecgµƁði_¹{}W]i@͛¸GĊÅZǃƧ¾ėVũaƓĭŰɡȳʂȢʵĲƮʧɃǅƚĶǄĻ̄܁Θő˦ѩ˾Aœ̎ʉǅǿȧǬʹüȍ͞ƶϞȫźƎƐƈń֦ȳɴĎ׸ʻǦ¨ÒŎ\"],\"encodeOffsets\":[[-85649,11180]]},\"properties\":{\"name\":\"Costa Rica\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ͭŋȋŸǰAğǘúŶɸ«Ÿˋ\"],[\"@@ȽŘʈđ\"],[\"@@ƋØĆĶƝ\"],[\"@@ӚKİďж¢ʈƅҜ³ҚЕӸࢤӍŞQïĎðc̔ȑȅĨŇźĘȚɑ२ȁńĭŅɽۼÁ̴ɡ̄û\\\\Ľ߳ɡĚśīܱĆಳœԤҬŁȤݗĲ̽ʖȥҎՉMܻʌɉɂҥ¥űǎċƃӃĔȓƤ̰ĠŅƨݱbաϹѫ«ŉȑЅƕBż͕ÕҼǾʮˆʎڎʨஜǐ\"]],\"encodeOffsets\":[[[-84543,22090]],[[-79533,22479]],[[-79748,22659]],[[-83801,23719]]]},\"properties\":{\"name\":\"Cuba\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȳèƍȨ΂ˏ\"],\"encodeOffsets\":[[-70401,12350]]},\"properties\":{\"name\":\"Curaçao\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɚʡuÐ\"],[\"@@çSƎ°å\"]],\"encodeOffsets\":[[[-83322,19814]],[[-81739,20186]]]},\"properties\":{\"name\":\"Cayman Is.\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ѹÃýƌϵÙǧìƖRÀǮ֔ߖʶԩ̳Àȑ\"],\"encodeOffsets\":[[34821,35907]]},\"properties\":{\"name\":\"N. Cyprus\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ǩë϶ÚþƋѺÄÛ̍eׇͳҹƆōȌ_ňΊö\"],\"encodeOffsets\":[[33498,36016]]},\"properties\":{\"name\":\"Cyprus\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@òFòrVņ࡜ͷɲŚçǫųήˑ̎Ŕğǆ҈ơʌ¬ÙǅȺŧźÂ҆ſɪ̱֟ɇÙǉ˝ƩԻƵȯ΅ǔУࠫȲ́ͯաFȟƒ¤í¼řêęGnП̒ȡìʓ˚ĺŚ΍θ@m´ÁzrȴǀϼĈƒhী͜£ŜȎ^zGS·oÆcFrXb\"],\"encodeOffsets\":[[15165,52080]]},\"properties\":{\"name\":\"Czech Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɭćȼ̶ǩ\"],[\"@@CďѣŬ̸˒řªƩ\"],[\"@@ʂŵŹǝܨſʀÂIǕǓęĚáМ§װȊϸʤϠ³ΚɧɶXŢʥͦĻƣĮɭCÉCcýÙáŻÿU¯ŀăɖŗĘį¥ć_ÑhÄyÔƗųȽŘǣyé^iƲ»~yx˷ñēŗIYWaqEÅdpT¸yH]ȍ¤śি͛ƑgϻćȳƿyqÂ±n@SQ@ǤōǾɑĹřʔ˙ȢëР̑mĚHŚéî»£WgIŁYʣK]SYM¥Ɲñ¿ě{ϣǏǌǻ±ƗƀÉKÙaÑc}Cõ~ÏulCv`bsí~Џ¤YQN¿cw॥ȏ½JñÔo~DhŋHépƧKTő©ƻñdîœ|A~Itur¿ō ùpȋ©ߛɄŗTsUĎN^MH[W[åWqa۳GBӄѦۈֹƮ׷R͡ʖŤ̄ʁİÇ¸y¼NðȌ˦̇ʤ°żǅŀɮİÌʬȿ̒ܐƒÛĨʾʦʋìź˔ƒՎĻǐǰǠ؊TČȉŘmôƊƌǱļИӲeӠʩЅʰ͡Ě[ʞɿþ˜Ĩɿξ࣎ß\"],[\"@@ŦɦÓŽɀOˑė\"]],\"encodeOffsets\":[[[14539,55214]],[[14039,55688]],[[9974,56142]],[[8508,56102]]]},\"properties\":{\"name\":\"Germany\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˕п̩æٓčKצӰپ~zv|OȌŏÂ¸Ŭ®dAĺĤȤ˻xɳثѿıX¾ÙϬüǠõ\"],\"encodeOffsets\":[[44284,11776]]},\"properties\":{\"name\":\"Djibouti\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÿké΀ƴęIɹ\"],\"encodeOffsets\":[[-62752,15615]]},\"properties\":{\"name\":\"Dominica\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@͆ívŅʷ§ΟŨpƘʬ£\"],[\"@@α§žŲɴĉ\"],[\"@@ɉhsƎɾƵ\"],[\"@@ĥĎˢʰǻͽ\"],[\"@@͹äæǎ̰ŵĻ\"],[\"@@ŠЏ˽íϡĬŅ̐چĂ\"],[\"@@ĩ¢ľÈë\"],[\"@@̓ˋǖƯ˕ĉ̻ǁǩΐ̯dʵѢ̀ʰǢǊɑ ɪ̒Ŵ̠¯Sɻ\"],[\"@@ƭTʨ¼ĹÏ\"],[\"@@࣍à¯ўНƴࡎѐģǼȪƮ¸Ŋû¶ʼɗHȃʓʭ»ƹǀˮɒۄÂѼ΀ծƀ˝भզƫơǛι{ŕ̇ɻkĶçεɣäȑǽȏɺÑPţ\"]],\"encodeOffsets\":[[[11635,56210]],[[12851,56285]],[[10303,56204]],[[10992,56065]],[[15450,56343]],[[10901,56945]],[[12970,56931]],[[12871,57124]],[[11318,58627]],[[9974,56142]]]},\"properties\":{\"name\":\"Denmark\",\"childNum\":10,\"cp\":[10.2768332,56.1773879]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ċøǜǜk~ĤŊ״ÆٖɳȦǼ̹юw̻Åcõ߂ǳ̄ʗ̇ͫȻǊ˷зH׫ȏƑĴ͏ÁΉՙǉŜŗɠHƐxÊsÐġÚÉĄ»ð\\\\XĶHļĴbÐM¬ÕŌƈǬ\"],\"encodeOffsets\":[[-73366,19657]]},\"properties\":{\"name\":\"Dominican Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ţŵ׳CɃēăçĳėȵؙչj̥˾ҝȢįȄїװЃĮϛÂȻʜ१ǫĩж޿ĢୡƗϣŖי͡ʟɡҬ؟ɊحŠėʒÆےȥϰڝ␣ᕧ൩୧ഝ˯ܹſȣĮŖʶĿτ௏Ѻ×ƪϏɚiʆ᣽ၮ᜿༸ἡኒ@̸@Ȳpیত֤¸ʈǎʊcĎeĶ]TÞæƊЎVҲŀžĒĨĜǲʤǄòɀÖǦÖƤĢѮǈǧǔG˄ÎƬÊTĄYƒd΢Ŋ|´ƘÊ೶^ĦʺªźÝ´ĝÈ±zćæ»þǒŇȶĭஶ˯Ȃ¹¸yØҞâ਺֮͆{̢ˤֆʀഺƂ͊ƸڲĤࠖ@ҌȻৈπφƓʾ¤ľצȣ֔ærēͥ˃\"],\"encodeOffsets\":[[8405,37396]]},\"properties\":{\"name\":\"Algeria\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@šm¤ȰŦîƠ³ȇȻ\"],[\"@@āà¬ĳ\"],[\"@@ǅn˒ǖŋȃ\"],[\"@@ǩĄVĂɚĆÜƣšħ\"],[\"@@ƹbƆƾ|ǣ\"],[\"@@ʙÂòĢǨƣ\"],[\"@@ЈٷęǁȍáʍpÛŖ̀ʪȽɬ¹ɞƗtȢļøč\"],[\"@@çüÈSě\"],[\"@@˻_KÒÐ£ÈƇƒƳṬĉ]vw`YųӍѥԏӷί঳Ι͉ЫĕÚʫ܏ˁƧđ¥e³X¡I±_i½kġåB¿|Ëô³ØĄ]Ō½»ÕYïQ¡~ı²čÀÙ·]ăė÷D¯S¸úńčFIa¦jº¬Œu´rf¥ˢåǂ̤ȘȞӢĥіéЗĕQpǠɹ̑խπƠˬţܚ̊ȘĊɚƢǗɄμѲՈূΠȾ֮ХДŋȢǛÒȯݶƃȊǠд̋аǑ\"]],\"encodeOffsets\":[[[-82054,-3044]],[[-92594,-1372]],[[-91564,-932]],[[-92502,-790]],[[-93620,-471]],[[-92747,-342]],[[-93462,26]],[[-80803,1283]],[[-77091,-109]]]},\"properties\":{\"name\":\"Ecuador\",\"childNum\":9}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@քนƕǥ˱੉ƯɃϭʄљѪֳ஀ǥ˿Ҏࣅղ֕DʓʦΟĢ҉ਠᆣӸҋȱcšǌ۩҂ˉբՍ⮿AªŸï°ŝǙƗOᢱBᢳ@@᳾@ᴀɵࡦɐВĝրʢːȚšіĜଖȱʖƑࠎƋҴȁܞͬʖƢǘѺĠ̡ųςæŠψŧ̬êȺǙȳŢķǅ˦ǗưĜÅþ͘ȋࣂ¾ҀǊ¢ĩ\"],\"encodeOffsets\":[[35068,31958]]},\"properties\":{\"name\":\"Egypt\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɐĭΣwêļgŋÌbŨƺǋ\"],[\"@@ąħ´ä\"],[\"@@ĳňԉˎ׃Ę˫µ¿Ē½ ¥@yƷĕʵµÕHǭȆǿò·Ö¹ÁťĥɁ¹œßƣqIZȿʠțƳǳŏOŗ£eCʎkǊoǠkǊŞȖ̈޺sˠúƨEÈhż\\\\ªDĞgȮj ¶ưȢŔЄł\\\\nj¶v¤ĚǀƴΦޛɞএФڟà̄˺ϥࠆͥКՙӲͩż̿ľRɰ̙Ƣ³~üêÙĭģĹcB«·ūÁȋŐ{Pu}yõĔÃüùĠƵĤûŦāƄͷˆΣО\"]],\"encodeOffsets\":[[[41105,16073]],[[41039,16469]],[[41922,14319]]]},\"properties\":{\"name\":\"Eritrea\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ąƏƧĬɮ¤\"],[\"@@˯ɯwĉǰłƆʂM\"],[\"@@ŝĄÈðżýåõ\"],[\"@@ëȓȩŧȻ˨ڂȤǯǏ\"],[\"@@ŕħƅɔĬȔЬŬÑПɥë\"],[\"@@ƓɞÒðǞĵěȗ\"],[\"@@ťŨ̢Ȋ]ȗȧā\"],[\"@@ǁA~ĆƄă\"],[\"@@ȅ]ŀƪǺºçƭĵ\"],[\"@@ˈý͛ͫɭìċƂǛÃŉĀڐͰ[Ư\"],[\"@@ΩĮ[Ė̼}Êǅ\"],[\"@@͒Ɨ¥ƿƈ¤׶ʩ৾ğÆžؚȽ[¡ģîJƠ¾żÌĖÕমàХȱƩޟЕࢥȍˋȩƪčʛěޡँĺϧ΀ʭ؇ωʙҟĀśԙÏˁƣЃԡ቉·ʵǱйéǃʍɝğΑƌ˿ϘƖɶƭçϽϔҕċҤФϮůMȥɶ̄ԊҍԘΘjŤĮâȊŗŪȈƨı֔׺ѮˣŠÛɨѹɍŭؽkħ˚ѕǑġƐǒƚĿXðłçȔȃĘǢʵƮ´ǔްɞOŠɄĬтϊƻ৸ú૖ȕޘĔҺŭƜêҎŃҘä\"]],\"encodeOffsets\":[[[-18317,28478]],[[-15770,28823]],[[-17597,28695]],[[-16726,29062]],[[-14537,28846]],[[-18262,29178]],[[-14045,29606]],[[1633,39601]],[[1480,39853]],[[3221,40746]],[[4397,40799]],[[-1837,44450]]]},\"properties\":{\"name\":\"Spain\",\"childNum\":12,\"cp\":[-2.9366964,40.3438963]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@צƝӿȁ̝[̿ʉǈȊʱĜgȢيľ\"],[\"@@ȟĠȊUVĉ\"],[\"@@͋ŗōƤ̕äӾŦɖą\\\\Ə\"],[\"@@Ŝğ׻ӱÌӇɶ̍ȣÑţŏ¡ś͕æηßȟÐ՛ˎ͗öƋ®շŽăJǦОΏó̅ĂɑʢƠňȽŐÀɴӶĄʠƲࣂ¤ÆĲ௺ǁࢌ\"]],\"encodeOffsets\":[[[23161,60029]],[[23904,59956]],[[23474,60239]],[[28685,60912]]]},\"properties\":{\"name\":\"Estonia\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÖGʶ¶ƸĖz¦@¾Àđˬ¶ׄėԊˍĴŇΤН͸˅ĂƃüťƶģúğÄûöēӯٽLץٔĎ̪åɟͱƺͭ˸˓ʪст̵ᠴ࡙ࡀ@ᢋᣭߝͽăϩǯɥˏ۩ƻĝę­ūBɋ_ğcŵCǙĨɋǺޡΟ©ąŏƩƍķݗŦſJȏ\\\\ś~޳ԘȽƂݑ´ɑ˸MŤnžl¨±ǀΙj½ @Hʅ̬ɯڬիӆƉʄݻ͠ʂҌ֢NĴĐJޔȞؖϾȒȆǘőƈĲƲߞҸڴϤŒͰాfDŘ¤ŐPǴȜƴɀʟYrJÞƤ¼ŔĤɂÄŦº¸ÕȀñǮȅ\"],\"encodeOffsets\":[[39354,14775]]},\"properties\":{\"name\":\"Ethiopia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȬÉ¯řʃĸĈì\"],[\"@@ų¥ÙŠȎù\"],[\"@@ǖƋƛłŒ\"],[\"@@ɫªͦZĹÃ\"],[\"@@ҩı̞Áʩ̏ǶʣֆŅզͥޟٵࢌও͗ďĝ́ȀēȇƩЀǟ˓ЈȱSƭљʉৄѵ̒˕̅ͻహ޹ལࡓਖ਼ĽǲǉǙΟ¦äŏɷ×ďÈ৯ʿࠛωƛƬǦʋǀƋŷʋyĺ̐९ǺƜ࠶̋ͰĥـюʦėƒٲĘǴ˴ࣈؘٖͤ߬¸ºԴ֡ǈǂЇ­ϣϔʎҸ̇ˌþʚɻƺдڇΎܙźିѠόJ@ƢѸºۊҭގÑѾƂࣴǳڴͬ˘מϠȊԐQԶƄ୨ͥǈǕХʝĶŽ\"]],\"encodeOffsets\":[[[22708,61820]],[[21966,61983]],[[21727,64760]],[[25445,66551]],[[29662,70679]]]},\"properties\":{\"name\":\"Finland\",\"childNum\":5}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ѻŭ͂ǀź\"],[\"@@ăÒ¬òƃ\"],[\"@@ʾɽÜέױƷՑƾµǶȬ˘˂Ŷϲb\"],[\"@@đAĒƮ@ƫ\"],[\"@@s@²@ê@ŞĈĩȥ\"],[\"@@ÏĊĞyÑ\"],[\"@@λϿHġ̦ȔCȍё½ǻĀǏƿʧÛǫǂðƔȆSغ͎ϔĆ@_\"]],\"encodeOffsets\":[[[182772,-19429]],[[183654,-18536]],[[182559,-17788]],[[184320,-17370]],[[-184294,-17331]],[[-184247,-16898]],[[184320,-16556]]]},\"properties\":{\"name\":\"Fiji\",\"childNum\":7}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŤQÑŷǓĜł®\"],[\"@@ݲĒĴÉչҕ˙cęŹ˩¡ɳŌ؈ʈ˿º˲Ö˕ʀʂĕ\"],[\"@@ƍĬǤwó\"],[\"@@Τ¯éƅȦùZƂʄƘőŷÅƚ«ݡʥ~ƍҗæņŽɯm¯ĥɅƤàǬјȬǌȸȆ\"]],\"encodeOffsets\":[[[-62483,-53028]],[[-61733,-52697]],[[-61554,-52629]],[[-60262,-52500]]]},\"properties\":{\"name\":\"Falkland Is.\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ιÆŉǺàż̎EƬșǛ\"],[\"@@ġænȲŌċȋ\"],[\"@@֥݇ɋչˏˉܩŦ̥ȟʫòç¢jqZXRNB¦ÖìŪɄ¼ĖtƨŨ`ŀƤ®ĄsƲˇΦŇڂҼ޶ࡪ˿ԞНƝĖüƌũ²̫ƦʄƦӗ\"],[\"@@ȥw¬ŔǝȸʊýĎɕ\"],[\"@@ãJ¼Ĥhĭ\"],[\"@@ƛ°Xʘǐëɛ\"],[\"@@ǍC¨ɺʤȿŽu\"],[\"@@Ð֧̩س͇ǠäĦɟȘâƐœɚȾɀмĘ¦ʮİǱ\"],[\"@@ñƥȞǮū\"],[\"@@Þ_zY~mªQÀR~¾\\\\Ǝ͢ʕ׸QֺƭѥۇAӃɭƅǧ´ƗÉ¹Č¯@akiwŋēŏėkmƗ±cƣʹǩWĳkƗŁÅBÁQäJĨŞò¾ĜŲNưk\\\\ȿŀĩ´¦·dȗƹ̘̟ÉšϋƟ̜ȫýЯΚǓˌvŧͭޡӋϡŁ׫ž̅Ǽ̇ÑکǄյ̵ǧɷƆПভßĕÖËŻHĎšÇPÕؙȾÅŽ৽Ġ׵ʪƇ£¦ǀ͑ƘʺƀȪ࠸ƚŊÛØýćƒܮ҂ҁȯϾͽȸƐvĩӐ՟ǢɭʜȒƫŀƚĤʈµțĂѹBÜƆ˽cĤ౱ǔ̯Ǽ̌ŌȹĴˮ\\\\БºôȚƚદȆҐʯȸĤϊÅĈĪѼǃŸcͮɭКԈGĶʕࠌûӤŸʋº¶ǎࢸʞ̆ɈäՐܒǲȠ̅̈|ƔȻ˔¯ĀƝТ¹sɳͬUɰǊ¤̩՞ɷʂx\"]],\"encodeOffsets\":[[[57137,-21851]],[[46265,-13288]],[[-52892,4159]],[[-62286,14843]],[[-62700,16272]],[[-63067,16392]],[[-62799,16620]],[[9708,43833]],[[-1206,47006]],[[5929,50728]]]},\"properties\":{\"name\":\"France\",\"childNum\":10,\"cp\":[2.8719426,46.8222422]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÐýəzǊÄ\"],[\"@@qœƹvĬƗϓˬҔµ\"],[\"@@ś«SŴŰć\"]],\"encodeOffsets\":[[[-7359,63631]],[[-6790,63722]],[[-6559,63753]]]},\"properties\":{\"name\":\"Faeroe Is.\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ōY£ŦƈLjŗ\"],[\"@@ÛåĴƤý\"]],\"encodeOffsets\":[[[162115,6978]],[[141459,9729]]]},\"properties\":{\"name\":\"Micronesia\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ķ̻ґՔƜˤ¡ȾϿęɷ̽ɩ÷ҵԪ̵÷ેȅ˝ŗǥŗętŹ˞ɥɍЉèǕ͌ǟĘƃđ^ͳ͏éϫÐÉгȈūǍȀš¯̅ǋaƳƌɧƝĕȍڃݺԿҞ˸éοƸ˙϶ƸPǽÐȓѠʂ˕ƶÞǥ¨ǆţµśì̥רȴć̌˴¸׎ĨƷˠīǤŴϣĐȅɌƞĦĺówϤ^zzJ²Iz£`wĒமEѼG՜hŎǰFඊÖā\"],\"encodeOffsets\":[[13613,2214]]},\"properties\":{\"name\":\"Gabon\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƻďʽàɀĜȺë\"],[\"@@Ů_˗ƟǍɄɆĲă\"],[\"@@γ{̛̈ˉɯʁVїɪ̪ƲſĔ̢Î˨˘زŰτăˌ˝ƉƩʞnĦƍǛ¤Äɵ΋ȅǗ\"],[\"@@ȏ\\\\ȔǴɕ\"],[\"@@ÖȡȿófƔǣÙ|Ģˬĺ\"],[\"@@ďà̆Ȏȵʭ\"],[\"@@҇§ƤǔŭĸƸ˼Žaū\"],[\"@@ƉɠŦSdɋ\"],[\"@@TǇϴ½ɵǧïƀʍBρȪϤȘƊƕ\"],[\"@@pű˩Ìʺæ\"],[\"@@̗ɩňÓҵɫčÄȐĠȓɒ̠N§ĦҐǜś\"],[\"@@đǍٷ̣ěƮɷȭؚŌૢKʘȓڽދ׽ǕΦǰŧֿȍΩÊجťϘÚϞĽЮ˧Τܯ८ӯķă˒΍͕ņ͝Y̮ӄ̙îƧʻɇȠąɼƄиOԐǥøʅŽ̝̋ůƗνÕŜƃϻęࠬđaƱοɋ։ų࣭UՋŎèÛƵÕћmIĹߵĨͽëɳͣѝź҃đ͟ɃчX஺ड़ࢪ`נҊܡ̍ԇǜ˿mŦúʛæџĩɡĪ]ǬߺˠȦɜķ̾ӧğΒ˴ۺǒˤãƖˆį˅ǠȀԺˍMͻ˶ĘʲάưћI΁ƕܡÆÿſķÒŝȌиѠǏ̺ʌÆɓĦĜΫɭŦʾ˛ǝũԙƥ¯ȐϾėɆΠנϷȏЗƦ͸Ŭŋ¦ʦˤțŪǴƘƍĺŘǴϜ@ɍǂÚƚˤpQʰӬ­তŘǦ]³ĵ\"],[\"@@ɜĻҍÄlƆɆč\"],[\"@@ɌýȹӇRɴ̻ňʐ¦ǓƌǪĬ²Ó\"]],\"encodeOffsets\":[[[-1091,51907]],[[-4297,54602]],[[-6367,55387]],[[-5227,56780]],[[-6275,57273]],[[-6113,57155]],[[-5916,57697]],[[-7423,58487]],[[-6292,58886]],[[-7378,59068]],[[-6347,59765]],[[-3184,59920]],[[-3130,60447]],[[-1339,61991]]]},\"properties\":{\"name\":\"United Kingdom\",\"childNum\":14,\"cp\":[-2.5830348,54.4598409]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˂Ə®³SïûÑēẂĜڱɠÁuǹŏsYƑe؝Ýէuȑ«Wz~nmhûųĪítÒ^ÓNÙMaOoWčĳғ²ďÁRß~ĿvÇhǈǂ¾ɞɱׄշͺ̽êПɰÆ¼ÌӂgʚīŢɲĒµĶ³র¥ȚßRö»ЀŧÄƈ½`eEsUlmÆmŎI zĊlȐòƨɠōâŊjTÔuňöeƶũȂLŤloýȫH}ӘǷǾĉȷǃĸǍ\"],\"encodeOffsets\":[[47417,42504]]},\"properties\":{\"name\":\"Georgia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@àāă̇ϼ͍ĭիàğşʘÃҡĭû˂ͻƽڷŔǉĝхǰͯϚ̧ȥɻׅ«ቕ࠵थ˜ʢÄ¼ɼƘǣĤȓࢎɤפƜВĸø°rZePxÖpÿӼ£ƀÌ³jʲTŊU¬¹ľ]ôU־Ļƈî΀ຌXΒéˠȪȘ§\"],\"encodeOffsets\":[[-70,11383]]},\"properties\":{\"name\":\"Ghana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ħǥǔƷ̺ǆȊʳκ˂ѪƵͬȎǬ̐¿ȎЕGȽ΢ʳɣ̛ˢeÐщɔƏbƅƏǃdБȮãmȏânĽÁYǋȚťpɣŅüŉVʃmO¡WŻÜþWùĭǯVě÷ƛuǕ³ơŊȗΧȑ̃ǘĀʎůդɛǈʁěéøï§GÛV]đĳ½ŇLs\\\\Æƪʌī̸ģng\\\\Ex¾ŜJzÙĄʏͶőŜq¬Ëf՗GșįʉnŉǋǕ˥ǝġĳǋǷiť̸ɉĬBͤŉȍɈ͍ĜƵʪbǼëßĉȰģóƑÛPĘª°äƒˬºÜvàFŸŀÖÀ~ŤOƚZȄÒDȊM¦ßŏľ¾Ìń`òǺ¹ĬHæլlťŊ҂ǉࡔÄ\"],\"encodeOffsets\":[[-11662,12703]]},\"properties\":{\"name\":\"Guinea\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@½ɸžŒɌǣࠤǖשiǻĕǭȴࢬAèŠˎîמʷήŴŕΛƟݻːŕƇѷÑiƗۃEĩ÷\"],\"encodeOffsets\":[[-17165,13378]]},\"properties\":{\"name\":\"Gambia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ËovŒġ\"],[\"@@Ĺ°Ɯê¡ř\"],[\"@@ķX¸ĸÀŏ\"],[\"@@©ĻĩİƔL\"],[\"@@Ń_½ËǰƙN¥CȉȃÑʽI¿}ĿÕŷßEu·ÛƓ˫­á«§ÒŌƗģLŀƩ¾ƮĽ^΀ǀƁöƵÓõĠĴ͜łܧƵlŶǽiǃŒêƼǉɱŴ°TŖaĖhƦÚĈ^ʰgɞ¬͈Ǆ܆GʆA˰AGåºīñǹ\"]],\"encodeOffsets\":[[[-16277,11349]],[[-16501,11325]],[[-16283,11741]],[[-16370,12168]],[[-14090,12557]]]},\"properties\":{\"name\":\"Guinea-Bissau\",\"childNum\":5}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Fѻ஭đ_xy¤±JyIy]Pnõ¼ĽrΞڎwŠlȤtMT¯{Ġڼ@ʲ@Ȝ@H՛\"],[\"@@Ƥ@ŋȯ͹ȓUƼɬʶ\"]],\"encodeOffsets\":[[[11605,1566]],[[8946,3849]]]},\"properties\":{\"name\":\"Eq. Guinea\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@˄ºµċȶŕୂW¾ȍѺǊŻʝଫíûžȵÒܷĆmɸĒiÄŢĬĵ\"],[\"@@ėŐŸȈ̗\"],[\"@@ťƎĔǍ\"],[\"@@ŅzBǶѠɚŧ̳ȳŕ\"],[\"@@ĥĬØå\"],[\"@@ǅČúú«\"],[\"@@ɠƠŘ}ͷš\"],[\"@@īA˒Ĩǥĥ\"],[\"@@ċ]ŤŎŅ\"],[\"@@ơňĪã\"],[\"@@õāŢƎłjȕ\"],[\"@@ĉN¸àí\"],[\"@@÷ÐŴe»©\"],[\"@@´Ęɞˑŧ\"],[\"@@ċ¯ƇŎɔÝ\"],[\"@@É£úžoę\"],[\"@@ȘďǭÃɛâȲò\"],[\"@@ĘąƥǗǆÔØǒĽ\"],[\"@@{ÇəɦɎ³ũ\"],[\"@@ŰʿȥÓńĉ­Ǯʜ¦û\"],[\"@@ǝtČĠũȄ˄Ç˓\"],[\"@@ŏuŞɘMȡ\"],[\"@@ői¯ǈǂƝ\"],[\"@@ĠũԒƏŰέˀą©ť˗ŚƟɮ͝¬̞͍ͯÎ͚ƊƂÕ\"],[\"@@ƺɿęviď̡ĜƒİǙđȓĖ˒Ƥȶ\"],[\"@@ǋzȧʲɾNãėȚȡ\"],[\"@@åƥěðƿGŮ͊a\"],[\"@@ɑĞŪŴƫ\"],[\"@@޷ɤʽŗˇøͧȉˍpĔˡ̄ùŌƯίǰƻ{ȪǷiűʁɒȧǜ˷ؗЎtǈʗăϫآܣơ×Nƀȫ¤ŕƲŏлƛֺǥβʹʄÝ¶œIϳѥ̜ϷſϠρ˟ęνǬμँϋ̆ʏˋ̇ҬĿÁɅʹ̀ĆʴүъɼʰɊkƔŸ࡬̡˲Ɣٗʲďç̕²бùšƒwħǅV˿Ь˾lNŒͽL΋ʔġȀûĄćÌlBWÒÚOƨŰAÏĞ@zxXvr¢bǞªȊ̎ŲżÙŸRÚԤfªxŸ°ǶƲǆxʺĢlĸ¸ź̺SìÂŐH¼TĒYČB͂ÖlRp¶ˤEĐ~EɌǑȂRŞ£ĲÓ֠ÌŦÌh¦Uò·ƶllĀdĶwɖīǗʙƍBʅʗȑ\"]],\"encodeOffsets\":[[[24425,36389]],[[27829,36317]],[[23608,37059]],[[28512,36792]],[[26095,37267]],[[27096,37464]],[[27597,37609]],[[26480,37674]],[[27669,37847]],[[25886,37959]],[[26159,37855]],[[25113,38017]],[[26013,38318]],[[26655,38431]],[[25863,38503]],[[24941,38479]],[[27469,38719]],[[21390,38713]],[[25592,38666]],[[21108,39305]],[[26721,39136]],[[21184,39536]],[[25267,39741]],[[23978,39894]],[[27045,40274]],[[20560,40380]],[[26049,40943]],[[25369,41590]],[[26664,41705]]]},\"properties\":{\"name\":\"Greece\",\"childNum\":29}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@@ƢĞĝǯ\"],\"encodeOffsets\":[[-63196,12301]]},\"properties\":{\"name\":\"Grenada\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĩķ΁ĈӪƼ½Ƌ\"],[\"@@ǧàǈĦ`ǅ\"],[\"@@ǁwŗǨȴǊΒÛ˫ʝ\"],[\"@@ּřŪǝත̉ԕŮѲ¾ƓÚँƢŎȤϸOяǈϬƸࣚģӆɕ\"],[\"@@ύ`ZĈδħ\"],[\"@@~ɥۇǗ͗ČறÇΘΪ࠸ڬƘ͘Ĺ\"],[\"@@Οò̼Ɯ¤ɍ\"],[\"@@ҥȑխž৔Ô\"],[\"@@Ԟ̷੹ƻˊܘö\"],[\"@@х͚Ǡɰʦ։\"],[\"@@ۓĘࢴȟË\"],[\"@@ࢣėЏŎॾǠјušǟ\"],[\"@@བྷɞѩʸܼచǯ¬ͭ\"],[\"@@ↂʭ㇓Ƨď㞆ƨպʁ᝚ȱಇʹ㏱ƍʵę̀ī෢Ġᗆ¡ܘʧৄʾ๠´ĜϽབྷەᰦܦᆦȯ૮͈཈ຶōࡈȍෑ̳૛ā§ȕቍǃۖūҩƧ೧áଝî؃ȷ঄۩ᅡѧԅߙܰǠ଺ǉpŹ׍ľѧÑϘȿ޴ūܜÉЙဏŤॅțӏĚΣ÷ؚŋ͞ʩ୒«ԂϱcӝߩŒএʓӫĆҎŽ׬Ģľρώ˶ζ@זέçəݙAͫũ઩ĜX˒͇ɛƾʽ๤ţš̗໳ȉݕňޥ̮ѧƋۿɀؖ˹੩ɏ৩ƶؔƿࡩġǶÏኔˠަ\\\\ᄄЭɍڣ๳͈ҽҐၷ˓༂ƾƎˍϽȡϜøᗨ׉ѩ̣ÀœĲƸҠȖߝܣÁ«ͮɇΡ՗\\\\եǘӹӖ૕̊ঢ়°gÿਫ਼«Čʟࠍțද΀ćßǑࡃɇᏚfęࠟțƪŏ̚Ǯ఼Ŷ༦ǵ୐[Cûعŏ_ĝۇ±łůҳEBūݥƭĆāԗɳڇǵᙡͅԳ\\\\ϗĳͷ¸Ġő̱³ଉ͂Ǝϑ࠯̩࢕ࠅࠫͻ֭ǆȦʧؽʹŭƪśǻͭæ̅Ƿқo֨֞݅æͼĽ̛͙͉ĘˈʡခŽԄǹ̟ǕˇýۥªĲțʼ ЊλԋɏڣÜҦƫΎVÊͿȋǇɯg˷ϝϥPˣŜҒȣɱȡࢃaڐŵƙΓǲʝЍŝȨċ̵܍˝ȱ݅Ò׬ǡúˣǓŏՓĈʠƕȽǭ`¨Ā̅Eǂ̐͛ɍ١ƼXƜͤîȀǨԽȁ֓ƞăƊɬψࡇ͵ળ¡ΊȔԭNƶгṷ́ˀûʦҪǄڛåÐȠٟȬjȾъ˔ԅȇ࣡ېß̪ઌǪȏK¦Ė७ǭĻĐʮɒތȖМȷĥɎͩÀϋκȪ͹нƙŊ֕ґ˱޾ɹƤޘ͔ѸÀՋ«۟ɗǭňοHþ͐ʉÒᆖ۪ົ֯х¿Ķє͊Ƭն°ࢳυǰðʄॎ˦ႬȅҵƔǞĨڝÍӣĊଢ଼ʋӪք଺ų˖¸ȸʮࠧǕহǛ˂κĈࠚƣ֬ŰŚŒχÝƒ͜ڌٻڈڰ࿳٥Ȳ࠭Ĵѡɺ̬ĶନÍྰ͕Ǭ¬օƞÈɞѣƂيQ̛İോ¾ĬɸऺǶඛýʜȔэҲɳϘϿҕǉ´Ǘ؍ùݽƼɺҶЎȶحƩ¯ĸ˺®ʳČ֪Ĳǀʨ˭Ťǹç͉Ú͊ˌۅȚɠǜ̶͗ࡋGѲĀUǮϲĈኻۜˈźɡƶᖟЀᄓǎҩœϵČࢿƽыĞӷċѷØˊȣఉø૭˨଴ɄಷîiɈޙƗѹǨɺŬཔj۾Ƹุĉʩʹ࠹Ɓ޷àؕœহȜΞŢঁyಝ͌̄ʎےŢᖂȞԮƲᒪŖࢄ۞ԨĊᖏmǧʶᒈԬژ¶׌Ɨŀˢ௾íӾ؆ಾ|ᖖѫᕭզ◴݆̂ƿĬѕ֚҄ᅈΩ଒p୧ϸݲö⪴׉ЮӴૉ͈ᶰÇюÎ♣ĠǤي፾ȸ෬ƍߌȚᇚ˫ӽ̺ࡶń㹪Ê\"]],\"encodeOffsets\":[[[-47377,62241]],[[-37920,67105]],[[-52237,71222]],[[-53996,71624]],[[-52915,72556]],[[-26042,72624]],[[-54820,72746]],[[-56337,74539]],[[-18432,77218]],[[-19028,77868]],[[-73387,79182]],[[-18035,81742]],[[-45941,84054]],[[-30671,85571]]]},\"properties\":{\"name\":\"Greenland\",\"childNum\":14}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˶DʔŁRƾ̮ȅÿáˍɉɷǩƳãáǧºǑQ¿īÝÛĩǯsvůс˳ƕїǊ٩¼ܛҲÜΘ^tr ĥȺĖƦŀǪȄ̮ʬBϢ@ɶ@ƴ@ÚDYøTĊø@­¤ĕz·@°sÈ§ÞɟƆη͚ǶAǠCHӂໞAÑྩ\"],\"encodeOffsets\":[[-91374,16270]]},\"properties\":{\"name\":\"Guatemala\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ýƚȐƾÆǗʻ\"],\"encodeOffsets\":[[148216,13578]]},\"properties\":{\"name\":\"Guam\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĽǳĠŝķƧ͋{ǥƛÒŷǩӇ΂ש̀aĘѱвۇȆāУsËh¯ÎuRǗ§ā¯óœ¡£mǛGßğg©ŅʱÊµ_¡ġKŻơGµM΅Ʀʯ˖ŋ CĄÓ_vB̼œöĕ˞Šݮʬ̄Mx¿ÀıǢłϗƲƄҤŵƀċhÿ·ĽWǉ÷gՓפ]ôĢàäÆoƞB¾}ÈmÚ¶ĚάÖ̮Ƞ~øGg`ĵbµm»X¥²í˘ǤɸИȬĞt~Į´d¶ƻȲۈЋׄ֩~̟ǉխɒϮδÅϊϡˀŹՉ\"],\"encodeOffsets\":[[-58567,5682]]},\"properties\":{\"name\":\"Guyana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȯǵǪӰŗŉq\"],\"encodeOffsets\":[[75477,-54412]]},\"properties\":{\"name\":\"Heard I. and McDonald Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݷȱĝxǷŲĽµ×ƛűɩѳϟgMOǓĸ³îʓɽ]țhĽWsaW¡PÁȓhÿeyÁIå[ùǹ¥_ɹYŵ̾˙ĺÈʖazÏ¤÷Jĉ_ƇĞʡŗF]¨MºO^ԝ͢ȯǈǈRÀ¹ǒâǨƴäɸǪˎɊĀâĆyɎƮ౤ąΞƞ¥ÐфĽєøΐƿʤjиΕǩĪřw`ûƘMƖƣɚDůŬɶŇâƉÄÌ¥ɍ`Ĺĉč\"],\"encodeOffsets\":[[-85642,15234]]},\"properties\":{\"name\":\"Honduras\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŘËͳøɜk\"],[\"@@Ҍá˱mǙĐ\"],[\"@@٦˱æŃ׋̪ٹǾԺı\"],[\"@@ʛ`ĎϊÓė\"],[\"@@Æ×ƕĤĐ\"],[\"@@ƧȬhɞƀщ\"],[\"@@̟ĒĶŪȪȻ\"],[\"@@ÇąȌˏ¹īͪƿ˱Ù±ɣƝ\\\\ƣǎ܋@ݧǘ͙»ȥǧɝƲȫU©΍̮ȵǔͫࠊ֭̈́σÅËֵϢёŶ΃oڥոÁì̊`Ы˦ŁВʯǼȥϝп˿ը̤­Ю®¶pŢŶpK¶áŦÿƊlƀ£ŌSĈvYOÐäÝÖ̀ňpĺQÄÍ¼IbкǮǸŸĚUöq®]ƮËļÝτ˽иǥҨƨbĎĂȬr\"]],\"encodeOffsets\":[[[18031,43796]],[[17051,44029]],[[18092,43927]],[[17189,44310]],[[15741,45030]],[[14836,45732]],[[15166,46057]],[[19360,47035]]]},\"properties\":{\"name\":\"Croatia\",\"childNum\":8}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@cÏɋêǗƎЈƧ\"],[\"@@ƇǫÖŋN«aÏĻĳĵG[W¼ïÊăĢÙtÏșíâýÊĩۇÝёČ̥½řůӽ΄úƦƆூȑΎŞ|ĎϵͬĜ̴؟ʀȂƊӦdΖſ͖¡²ll}ǛǛČ÷\"]],\"encodeOffsets\":[[[-74551,19229]],[[-73366,19657]]]},\"properties\":{\"name\":\"Haiti\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĺDˢɯƾqĜƍ݃χ݅ਇ̣ūħėȑqd£`ȑh÷_ȗpǉėًſčāaƧҧзǦσ˾ĽÞƫÌ­^ț̜ǅL̢ŦUͦȞŖɉŜժäʤԬȣ߲dÊǴ۬Ȉ˚Û͐ŰƀȚ߲tˆǵ̪Ê\"],\"encodeOffsets\":[[22663,49568]]},\"properties\":{\"name\":\"Hungary\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĹVhŘѴʌ ƧЁɑ\"],[\"@@ƭʚĠīť\"],[\"@@ùŐľƋ\"],[\"@@ٮө¢ãœƙɑóʙĂҙΨџÊŃǀ˲ŶլÈÐÕ\"],[\"@@՟՗֯ǕţÞĤǈŃĤĶ̒˞ɰȸñƌȨВȺ^ġǲV£ŭŝoĜʣ\"],[\"@@Ň°ä¤č\"],[\"@@õĺŜŤwƧÍ\"],[\"@@áJ¾ʴĢ÷ýȅ\"],[\"@@ʗǊƈĴeï\"],[\"@@ŃǧÔÅ̅u͏ŀȂ_ʶ˺Ȝˊōßɷ\"],[\"@@ŝǝǿêʾȶ Ł\"],[\"@@̹ʙ˕ȸǪí͔úŲé\"],[\"@@˧âȞŖĊǷ\"],[\"@@ÅƺƤĝȁ\"],[\"@@Ќæŭفõ¦ȜŪ\"],[\"@@ʞÑăíǟÆFú\"],[\"@@्ʋȣìïďʗeСŐ՟±ďƈÈɺآƮۮ˱Ѭĺ̚ơѸ˘ÎèƉƄäøȇȉʃ\"],[\"@@ñȶɒƀ˃ǁ\"],[\"@@̴ĐőǴİǠ̷͑Éòć̓mċƴǃƓेɑɭþ Њˢƒ͸·ȪʇƎaɠŖΛɀ¹Ǌ̦xŀǏ\"],[\"@@ɎɃҹω÷ɶωǎũǲЄiǺĸʚõ\"],[\"@@ĿïĕȦǢatœ\"],[\"@@ˡʃγÄȯĉƪ˒ȨͬŔǈă\"],[\"@@£ĢĖc±ý\"],[\"@@ȩŋիfδېǶńЌ¤Ȁʱϟӟ\"],[\"@@ǱDrˀъӔþëûÏg̟ʣ̻\"],[\"@@șîƠZºć\"],[\"@@ş¤ĈÆĩ\"],[\"@@őFOĈŢč\"],[\"@@׽ĳͳŶŢƢǚhނNĊñȕŧ\"],[\"@@Ɓfjüʲßƙ\"],[\"@@ŋtŜúOĭ\"],[\"@@ǵ΁ț`b̦ôXãɦΠɁ\"],[\"@@ʘǩ֐Ï̈щ฼Ɓ΄ѰŚWǬɁ̠ҠȵϞĠʛŪé@ȻȀėРÇӖú˶ƅmԥǒ̫ૣОӗĹঙĔݹƀ૙ώғʏŉ҅ÖՏɄۡĔÄˆ˓ŀ߉þĬƞĨįƞˀŎZè˸ǦǞـƷȆǎ˞ē\"],[\"@@ƓSׄ¨ѯ\"],[\"@@ŏPĔÞ|í\"],[\"@@Ł½§ʲƪȳ\"],[\"@@ӵɯʉɬŮ®ƪřŀŖIȖʈƨɻ\"],[\"@@åïʘ֜eɏǋ˛\"],[\"@@ɍƀɖGĥ\"],[\"@@ăĆìA\"],[\"@@ȟƴĘƺņñBɻ\"],[\"@@åıɿÊĨɀwʬ˪Ű¸˅ūǡŋ\"],[\"@@`ɫşØé͝ǸǍǿÕſɟƕP·ƦưɺòӼȆȚĘƏ\"],[\"@@¨­ʧǂɀœ\"],[\"@@ƕĩęǔȲ~ī\"],[\"@@Ɲ«ºļĤÏ\"],[\"@@ʡą«ÒͺƸ«ƃ\"],[\"@@Ɵ½ĈĈØ\"],[\"@@ȳŝJҦǦǦԭ\"],[\"@@̮ʭFȯҙǅЅȀƃƸˆٮf\"],[\"@@ťÔƘAqÑ\"],[\"@@ՀĽǆšʒσ¯ʋ߯Ҁ˧CĿԕȀ̅ǵ͑ʔȗ˵qɲ˒̚ږƸĕʺŮɪã\"],[\"@@ũɕ˼KǜɌǹ{Ƴ\"],[\"@@ŷȕǓŠȱĻ§ʐĒ̖ƞ͆ƕÚŏéƗ\"],[\"@@ǁáwʜǺǹ\"],[\"@@ȣðȚɬˉ\"],[\"@@ǉ̀ºĐŐЏ\"],[\"@@ʶܑįûĆ՘®\"],[\"@@ÆɽƛÛѕƲԬƨ\"],[\"@@ȀMłƑݫŅóŬôǘҪ\"],[\"@@சǧ֑āهʪ\"],[\"@@īĀŰ©\"],[\"@@ːڛϠğǧˑ²Ʃ֙ȺǳզշŜ˜Ͼł¢ĬǡhǔǄzŖƏ\"],[\"@@ĩpƮÌǝ\"],[\"@@ӹÉƕŜɄɎь˟\"],[\"@@tǽǔŸĦčġȥVďƭmʾɕʃážĆɀʰV\"],[\"@@ȹąZʖɤ­š\"],[\"@@ēDŔƚ¯ç\"],[\"@@˯ƘȍΌØȒɎbˬ֣ēų\"],[\"@@ǿ¼ğʞ̠ͯ\"],[\"@@є×М̱ǯĵȽƙ̘č¹əȘ\"],[\"@@ťh¬ŢúƉ\"],[\"@@ƉŴÎVģ\"],[\"@@băȏoǮĴ\"],[\"@@@ǋDᲗħͥĨƓBᇳࠉޢĪɮƳƫҥóŗǨ̝ɋǖմ˹˰ΰ¼˥°ȵǚɜàΧўţͨàĘƥŞŎɃuȴٿѨ։ń՛ʎڅäѡ̺xľưbԵOĳŲơkʝ˴ƎΦş¡ɷœįХŷƍ˫JƇ̔ĬŸıɎٽьɔĞдğϺ̐ђƽ®ƤŶºħĈŊǈ߫Ɲս~ʅɄýβ՗ƖʡǐɒÈʺҠŸӸ̈ϴ½ԬʷфeŚđŻǀ̣Ź̝öӳɞѯpɀŨØͫŢrʧ̪ƅȢp̺̌Ҁ؈ִƘČâ¡ƺֶ̞သܫ۪ćŀƉȎE\"],[\"@@ĮōȑǉėǐǼň\"],[\"@@ĬűÝšɴǗĳ×řİƉLƎƗŤrƒŌÑĤô\"],[\"@@ŉqNȮƐKǯ\"],[\"@@ɳSôŌǀķ\"],[\"@@϶ũÀş˫Ï͏ɲɶɏůċ½ŮśÏˁƂłŘϚÌ\"],[\"@@űAİʲĕȎȆɍíɯ\"],[\"@@ȐęҷĀĄǨȤǍ\"],[\"@@ũP¢ŴĈƃ\"],[\"@@ҋĢ`Țиȕtĥ\"],[\"@@ĝpÄ¾í\"],[\"@@ϷƶpĘɲùƖǓ\"],[\"@@Ĭ]×ƧőèþĞ\"],[\"@@ÞƕñǽŗȀƿĢƔȊ\"],[\"@@ŭðo˒ƾƍ_ȳ\"],[\"@@ϚЭģ·ŗãȦǕĨ˛ДɶĪł×\"],[\"@@PŇЍɸϾů\"],[\"@@ϱѳ֣ƑЧlɥƖဝ©ιð͗ɓƭϵ¦̟ƬˁɶƝŴˣК~ΪіͦĕʼƨԠD¹Ć˼ôǪß°Ň³ȏЋĔշջ͡řǩǝʝb޾ࡻĜʗūΛπϵƄhr˝ŷªԗǙÝʕϗÖďƮŌШ؍Ӓƌ̔CΔơĘȍkͣʁƨُaއšѹŶϏГ\\\\ȟĭƇêǓʠȠڔ|ШſѬЇqŃŞë֪ʸȨȖҬYѬǘфǠȎŐƱĹٰŦň³ǖĖǦ̚Ѷ˨įɠͰǶÚ˔ëǀƧ܄¥ͶơȔĆܪûԒ͌ΎψƐ\\\\ļƷ́э\"],[\"@@Vʏǿ³ùʐʤ´\"],[\"@@Ű_ðǮǌĬ¾ȲϺƠ^ϻ͹ȕţ̎Ʒʐ˫ޕɌăƣúҟϔէ͇ǀ̕϶bѼƝ˖ÐȦƯʖǠנ;̘ṷ̋ľŋ@̵̝ˉäƓ\"],[\"@@ȏŢƸaĿ\"],[\"@@ƃcÝɚ͒ʦòĻÅȿƛƟ\"],[\"@@սʞùƜƮÂѬ̽Ž\"],[\"@@čiČĨBý\"],[\"@@ËǘŨïÛħ\"],[\"@@CËéĮî¡\"],[\"@@ġŶŐqmŃ\"],[\"@@ūtɬǂʟ\"],[\"@@ōƽ¥óƒȢb\"],[\"@@ǹ^ŦĘȭƢȸȠŨșÝʝ\"],[\"@@ğāʾ͗؃ÇʒǑLțɒŉœň·½άяɷʓ৐࢛ϙƗ˵¼ʅȌ¬ǭȁƅȇг·ҹĊϓկϝƣƮ\\\\ʃБϧŰ@xśřǻɂƅǯǱ\\\\̋ƏúǇʧϿਖ਼ӗƗژãėď@ǮěŁŻèͅƩāɔɡ§ʹ˂¿ɇǳœƃá˅äΩșжŅƘٝƳčÚÎòǑĥŇŊˉÙƇ߸ŗŜpӴǏɜѹǢĨƚɁȺŖΠʿ˚yҴȆƢĴķ[ÆɌʬΪɂĘùōĬɿܐمԄǂתɨŎĜʞʒĶϼPÂŏԮǕɾǖԠdˌѺɪͤɮĉĤɖňŌǪRȌ঄ƴžռnӰЊƕ\"],[\"@@ĥĠǀûðǢƐɏĕɍ\"],[\"@@ࢰoלړ¸ˑ஦އږ࠳̪ȭ¹ʜǾ^βӃҘɁ̶ԋբɛqƍϧǗڐʢ˪ȍĪȭ̝ȩoƛĖēÏġʂʻ՞ŷžٿˢɯǍуːȌΨSծ؍Ǜяòǿĉˣ²܅śڷͱɦɣǑωȎ̻éW٧ۚઙެ·Ҭңδ׃ޚ˄ҟज՛ܺѕʴӁౚݧдġЦǗňΟԌѱȮܭ܄̹ԺlʀͶш˃̠Å\"]],\"encodeOffsets\":[[[125900,-11171]],[[124809,-10844]],[[126379,-10549]],[[122893,-9599]],[[128070,-9740]],[[118385,-8980]],[[125929,-8750]],[[122332,-8950]],[[126278,-8555]],[[119441,-8820]],[[127270,-8529]],[[126900,-8471]],[[142229,-8589]],[[120378,-8568]],[[127566,-8336]],[[130892,-8293]],[[125730,-8818]],[[134003,-8518]],[[121081,-8517]],[[118219,-8350]],[[132955,-8145]],[[129845,-7851]],[[130478,-7806]],[[141861,-8472]],[[134478,-8191]],[[135150,-7374]],[[131759,-7355]],[[123674,-7289]],[[116577,-7275]],[[118147,-7138]],[[107779,-6799]],[[137766,-6596]],[[109951,-6151]],[[123421,-6449]],[[115425,-5950]],[[135995,-5991]],[[137981,-5843]],[[136117,-6043]],[[104825,-5610]],[[126594,-5398]],[[124972,-5568]],[[125589,-5395]],[[126137,-4660]],[[136777,-4347]],[[126201,-4211]],[[131649,-3671]],[[131355,-3762]],[[119219,-3547]],[[119095,-3960]],[[129906,-3161]],[[109452,-3077]],[[132869,-2934]],[[102836,-3259]],[[110805,-3069]],[[102609,-2806]],[[102240,-2399]],[[129081,-2510]],[[129049,-1832]],[[133482,-1731]],[[127969,-1746]],[[138726,-1630]],[[111568,-1658]],[[108591,-1709]],[[126564,-1745]],[[131229,-1700]],[[126170,-1199]],[[112344,-1209]],[[138205,-1142]],[[101544,-1820]],[[134146,-1347]],[[138633,-667]],[[130356,-799]],[[133762,-541]],[[124790,-416]],[[144357,-2672]],[[106982,-342]],[[130629,-326]],[[130304,-507]],[[106227,-356]],[[133953,-4]],[[100823,-543]],[[107294,-180]],[[105764,555]],[[105501,765]],[[105907,1074]],[[105643,892]],[[106522,1209]],[[107096,1246]],[[104886,1014]],[[99822,1501]],[[104952,1495]],[[127887,1020]],[[104150,2129]],[[130799,869]],[[99671,2126]],[[131537,2102]],[[98779,2417]],[[111501,2976]],[[108299,2932]],[[108837,3233]],[[120483,3360]],[[128674,3519]],[[120714,4287]],[[110916,3779]],[[120397,4271]],[[129861,4131]],[[98809,5355]]]},\"properties\":{\"name\":\"Indonesia\",\"childNum\":107}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@̽ĥ̤ˬZȅ\"],\"encodeOffsets\":[[-4517,55486]]},\"properties\":{\"name\":\"Isle of Man\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʬ@ĤмӼþʜόώeլԟ͚ƺ̃͠đUz­ƓíȘșKąuū¾ǅWǫ̑âʀ˵ɶĉɔÛʄǣaīֶɹĦ­rÓ`·O¹yiŕĿœāŭƛíƃ½ůBėoĻÁÏqėĽhƀěĈ³Ā¯¼Mbn|Î_Ө˃ָϿP¢r^¤YÚƨĝƐíƬ`¢[ÛpßҲůä^ÀjĖQǐ»èeɚĪŜÁɂãň¥£\\\\Aĥ¥юɳĐsɴČâWªš´Ǵ׎ǵ˄ĶɬǏłÂμ\\\\Ŭ¯Zz´ƀ¦ŜGèĸįƄS¢ƎԬFĀxAÀ`ŒjŶŶèȐï±СbûÊÉ¸SeķákĴǵʒũƺɈÏp¹ĐI¬YƮnư~êþŠͦıҠdŞÞ|@À¹źIƞ¨ĐP°K¨hֶӠ£ʨҎϬɢࢎƈՎ̰Ϧ×٢˿áƷfÙǞɵC¡ůdſƎԙࠩԵšƕRʃċjiF{şɫ˗ʽĩȱŴįǭϯĭƍëŷǿϙ͡ŔȗeŁÜ޳aũ£Ŀˋê̝ùųęǥ¯]±léĂçv·ĵ±[ÐÍ՘w¦đǎy˂ñφǝIÅ\\\\¥K@óRÿƷǻEȟǕ½įǪÝŋǕӼǄͲ̈́ŨĴ{Ǿǘ®ĴĠɸBĢp\\\\ŒêĂΙȎ஽Cб¬ɅÖ«XYpȊC͎ŵɬĉåmŃɕɩ̼ÉBfƉ{IɏƑȐůeåW®ďęĥƵƛȷ}̘ɱɢðƁö[É̙į@ëȏ¹ãBùKĕǛ]£M²ÝÈÃâsĦMƊěŦiæ§VM[ĭ[Éō˟ÊĽÀµvȥƢoy˿jǯŊ̛m˳ßBĐʅǋúħƇGΞĉĮµϱśƃŦŕǑÒŜϐɇȢǾɅ˯ͧԻƵȷƭĥɓŐͿȋ͗̽ʳŋ őףȏßHPǈɋŋÉƋɖ֝с֕۩ำ৑č҉йȗЏPʳӡ˧Ř̓ƹȫ՗łԃÉɟǎؑųȔÿěɾȳħ̵֟כƓ֧Ět¦šUܽѯÇׅ̿äț͢şγÜҷƏȓǵŏэҕʱϝȦљӲȓҤçЎŐ͙êEĥ͖ųƐЅੴٹৠӁྰεӤů˔Ō@Ƈƨ¼òŷ¤ǡ̄ԍᓶĆіřƫĔRȂƦkǗîĵϾȐۼãϐǅɈĤČķSоʐӍ­ƂɴƭHƸɌÖՁļåċȥɡƢāǓȩ̿ࠫΕʱDӻ̔ঁ৒æŬȎŵݴʌˀѢųű֥Ʊέöԁ˼ȉ͎̠ɾҕɉÍɔİÒĊnĜbĈAŚCHʨXxh^lNhIzDvìgÈ\\\\ÌcĬAǬPĬEȸěʘĺǈÌɎÀfQ¯p«ä´O¨Pbææh°C¾B~ÙŢL vwÎÏŔÕƞȍ̢EȲáÁiµGƷtƑǠ¤πǜէɌĈ̶ˠʦżȄĂż¤¨ƆúîCŠïÀƗĚ¹ÜJʼİ̞˞þfî¸ŊƲƚƐ̎¦°ҾɸВݾάƆÞÌ ¼QºÐbêĢîˤ̼@ŊÈļÚO]ýÖbÚºǢY¸ÑǄ`ª|®æÒĔ¸˨ŠÊ`ĬâŜWN\"]],\"encodeOffsets\":[[[77130,33061]]]},\"properties\":{\"name\":\"India\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¿µáƠĆŏAƨƁ\"],\"encodeOffsets\":[[74232,-7554]]},\"properties\":{\"name\":\"Br. Indian Ocean Ter.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ˋÄɨt¤÷\"],[\"@@Ňŭˎ࡛λӧŜĉӅñÙøࣽΣ̏Â¼űϵŽޣġǲǨԃãѬɰدÙδ˖ЗZÒӮőźɰŦ܊ŎǧÜƹĵحÅϜɆƔɲ̴Ģӫ~ӝƦsŖͬ²Ƴļ˖à@Ø˯_¸Țȣ¼ĒౖaßĘЬʚՋ͘ǪĒɎԜĢRʇ̌ͨ̈Ņɍũ˧˗̡Íƀē̩ƱјɩʂUˊɰ̜̇δ|\"]],\"encodeOffsets\":[[[-10186,55208]],[[-6367,55387]]]},\"properties\":{\"name\":\"Ireland\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȝȃեĝϜȂIŖѮHû}\"],[\"@@͂|ొٸ˜ʇǽƃǂȅʝƑԄϋɶrüқǰʑ߬ǋ͸ͣӰɫ࣒ķೠʸŮ@ȣÝʔ±ѴڈńǚʶКɰݠ|ƚƚنƈȱނʵҰdТơźɏԞʑɺ˙ٺLþϝ¹ǵČğTȻhÇE³ƋõiΓŇǝgĥã¿S[uTuvańŽȷYƁǱ@͑ôĻ˾é̙̯bťŒͧĴ̍CçƱCğHǻ|ƑYɎȢ{˄Ăą¸ǳEƅwçȋțȑȡЧщǈǏİķب࠷ܺ́j͵}҇ΐY|Q¼±HwÁRǕQ]±wcƟܙƥÓőĩXʃţ»{ƛuŷamÍ©McT·ĝqʡyë¯MĵÿؽƲŹżġĿߍƜ΅ÃȽŘ௳Ȧʣࡒʵ˞ԡ`ଝՙїǈҕ|࡛ԈǹʘϏǪχʻɤǻԂǏŨRǊǙìsɰЗтćɸѡƛѷʰǒŜȅé͕̻ƃËēȼ˅ưIѲ˥Z@ͰØǚÜǌīŢĻŸáÀƵʰfƏOҩ̰ǉĄálƻNgfYª@¸¼ôJ²ŁƼԻҲŪȴéɊĤŘOȌȲȘĶªü lÎŀşǞÈŲŦæVzė¢͡BΏǌķ˺©VD¹¾ʍ֞|ŰȃŨbɴ͇ǔȨΪŵªuϚȽҔ̮ǖ̆Ȗı֎էՔŇ\"]],\"encodeOffsets\":[[[57537,27568]],[[47222,39811]]]},\"properties\":{\"name\":\"Iran\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŗPģêɉũȳԼұłƻI±»ó@·Z©heɞyǊăҪ̯ƎPeƶʯâ¿ļŷĬšÛǋ×Ǚ@ͯ˦YJѱˆƯǺ˕ûqċfǳìƅ{Gy˭ĪзąȯϳŗǅÙóƋƍƧ൝Ŋ߉վ෗ਚഃۀğ˻²˗¢ҷèŮĴĜǥɣ࣊ᇴࢴǪ˸ƆܸµزĶŌ̺êӐјĆhưĸĘĦTĀÌSžӪşƊGƪúĐWgbMųä×Ü¢ǢĲÂE¾Ooʎ֝º½CªUĸ˹ΐǋ͢AĘ¡U{åťÇűŠǝĿkÍûķ©ȯȗȋ\"],\"encodeOffsets\":[[46733,35404]]},\"properties\":{\"name\":\"Iraq\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ߔźѫɋΜėŇɋκpåǱʴÈҤĻƿƏǦˍϏʙ˹H÷ɃϝƣݽťڵʻধŷŋƫקŇಙŲʝŌäĲȥÉуǨఽį¥Ɍǈû˔¢،˸ӷÅĒǜ̢Ĥџỵ̈ɚଏ³ǧŀਦƶݬDĦŞؕR֒ɂࢷŐ࠹ơӛİȒø͢ÛȡȨАćˤÐҟČʶɅŘ̀NeƂθǗ̠ƃƤGƊуŤϴ®ՍÔƠúѦBࡨͻʅʅeѼϧ˚̶̌ÅȺѼ׾˧ĚʶҌĞעϙŽΤ͠]̚ƭͮȨ˄Ý̔Ð±ɂʔÜɜQϊʉ\"],\"encodeOffsets\":[[-15916,67818]]},\"properties\":{\"name\":\"Iceland\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǷÿGkcȋÉNå¤açjģlŅ×¯Ĺ¯ƫȹWqsPclMÐlØkÜÉɅŭÏȟӐĤБྣÍßփบĒìDÐƨƎ£¸NPǎʮβীʬOϨ̚ЛŁǷ\"],\"encodeOffsets\":[[36647,33521]]},\"properties\":{\"name\":\"Israel\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Бٗǒ͹Ƶ̯ԣĢ̝ʲȥEء͆ѽĬǣȎʤ̨ƚů͜Ƃкǯ૤Ơ͊ŚàÏ\"],[\"@@µċ¯ŮĦ¡\"],[\"@@ãĪľç\"],[\"@@Ƣ͏ƋșåएыÔ÷ɳˉȗɼňՒŝàẦɿ̠ɘ̈Áր΂͚ȫbœ\"],[\"@@rŧʍzɜĮ\"],[\"@@ǰFgeqË½¥M}PmlYúLÂǁƘģģýûƸΟ@޵˙¡ǡʢɯɳȷŮлঘշϒݍѾϏՆʻ࠸ɛ͑ႮܛьηįͱɟĬǳ˾Ͽ¼ǹƌɃͿׯӾ̯º͍ҵǕÑ͡Чϻ˩EßĄȜӢˌŪ\\\\ƴѣࢤدȾEȘƳǘΧÍĶŊΓêʻΤթPϩȎ࠱یзĒvŪϫʹǋ˝࠘டЌٕҝљğŨͮˋuΙǔþа̛ȬόƠÊŢ̗̠ȘƺkÖoǖ֒ĔöȬŴîÈÀÔôǗ̢ƙP_£ÃƨƕÐ`ư̾ĎɶĂ]zBĐƧ¨SºAŰ¨Ćl°KĒĽS¢Teŀy¶xMnÂv®¦^¸LȠÏi¸W´PÎ ŊvSĎAĠOÐ«ÎeĊKÈPj¾ÐÞĢǂNĂ^ȼWͦĆxOJ[p¥Īċ¾Ù¸µú}ׄċƶ]ŜEǮgµ[×ƍćlė\"]],\"encodeOffsets\":[[[15951,39138]],[[8683,40006]],[[8485,42025]],[[9864,41864]],[[10645,43887]],[[13744,47322]]]},\"properties\":{\"name\":\"Italy\",\"childNum\":6}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ފʱŞȧ˃¡˟ĞùĿƧíƑƁĲͿɵʞʛĪļƈ˾ØԦÃ\"],\"encodeOffsets\":[[-79115,18901]]},\"properties\":{\"name\":\"Jamaica\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǻ¯`øǜ\"],\"encodeOffsets\":[[-2067,50413]]},\"properties\":{\"name\":\"Jersey\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ůįYӱŭɛÇԱŽɹÍɍÃ࡬࠯į³ǋāgcacãƗ¿őka׵Ň©ĥƑīƟǋŝǵŻऱŸnǞВྤĸْiƂdȌHlǸĀӬ̇ϒÏ࿦ࢲɤࣉǦěŭĳ\"],\"encodeOffsets\":[[40085,32896]]},\"properties\":{\"name\":\"Jordan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ǩúĆƐ«ç\"],[\"@@Ɓƙ©öǾŶQÑ\"],[\"@@ƥS^ŜƈŇ\"],[\"@@͡ǭÁʑų·ɊԌǄuƂǸHȕ\"],[\"@@ĉNPƜúƩ\"],[\"@@ïåǝĺѴɤȥʷ\"],[\"@@ƩDµļĠÞŪÛiŁ\"],[\"@@õ Ǆ͔čγ\"],[\"@@ŝȂ®ãý\"],[\"@@Ĺ\\\\¤ɺƄhǛįġ\"],[\"@@ȔōǛwƮ\"],[\"@@áĤĦƲÔŝėŷ\"],[\"@@ķǘƺßř\"],[\"@@ķQĲàğ\"],[\"@@Ѯ@ƅˡ̠g£ŗżȡ˻Ε˕ࢻɡxƱ΋ȭø׈ķXĉŽ͓͙Ĩ­İŮxŴőƘN˒ϐѼţ¦Ʀʹ̄ģÓ¤ɇŶD\\\\ŵʉÎʉǙ¸żŭˮˀǫΉ͔|ĜȠkeĬҐǔĴǚȚĀȦ³Ȇɥ\"],[\"@@Ʈȣ¶Ô\"],[\"@@ÿlzƨļµƉ\"],[\"@@ɼ{ĐͿ̣ǳǏ̡ȉǜ˛À̅ŵʷѣơ÷ƋTÊŠǷ\\\\çќ͉÷Ԣ̌ʖ;ɐƋ͜ìlȐ̄ĖΆû\"],[\"@@č»ÍĄƜ\"],[\"@@ĝïƁü˲ɀÑɋ\"],[\"@@ıbƸˈÅ˩\"],[\"@@ōqĪö Úŗ\"],[\"@@ĳPrȾɈȦ¥ȫĸSȗȳ\"],[\"@@Ȑsֳ̰γưܥÛˋ̇̕á̟̝ÅūǃࢅΫݑʦыΓǷđˡѕɡc͎ɪʐəÔƹȽtɓǛŲȋiƍρȽȁ̘Đ¦ƹČѽѹթÌЙçǴǆʽ¾ûďtʬý^ɫ̹̈ȳuġѱū΍ԫȃÙȱÈ˙Ϣwʀˆˢ֧Ůб§ɹƿۛȋС±˿àƕУͽǶۓÛ{ʊĬŌ̌j೎ईࢶGৌȬŸȅ̔mȈĔǊƊẘՊՀŪՠЖŞΡͻİɽȖëɤǖڲɢӆՂДɊςڂɚزÏȘɅÆɨ˸ó˴̜ȼÂ̜ʄOĸ̫ǀĢƶ·ł˖ύÇDĪŔɄʖŏ\"],[\"@@¥ĴńÝŻ\"],[\"@@ų¤ĀĐŅ\"],[\"@@Á¿ǒĐŏ\"],[\"@@ݠǁռͲȕ֑ǚ̡аìމ͕ߝĳґϳǉΗ୕ӠύΝǣɵǴȓHŻɟۘЧŵÉ˷àɱʟʥí÷ŤĦ˰ɭ̬rʮӔ̼̊ظĻȤČ͘ৠƫ֢ìȶɪĞߒ۵߆ҭ\"]],\"encodeOffsets\":[[[126862,24863]],[[127277,25105]],[[128455,25337]],[[131337,27293]],[[132095,28387]],[[132560,28886]],[[133758,30990]],[[134103,31127]],[[133511,33202]],[[133205,33004]],[[131754,33571]],[[132175,33629]],[[132600,34021]],[[132911,34559]],[[134323,34410]],[[135441,34760]],[[132383,34943]],[[137583,35079]],[[137577,35312]],[[138172,35112]],[[132491,35179]],[[136572,37073]],[[141665,38730]],[[144619,42366]],[[142829,43091]],[[144687,46203]],[[144459,46421]],[[147277,45176]]]},\"properties\":{\"name\":\"Japan\",\"childNum\":28}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ķȤøÍŖøĤ£ǲ»ǢŸłEŶRÚ^́ǋɉŋĵ½\"],\"encodeOffsets\":[[78898,35953]]},\"properties\":{\"name\":\"Siachen Glacier\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ǁèĪŨÑŏŪÿ\"],[\"@@ѝɑѩڥťȉЁŌ։ƟǅחȝĳŢճCࠣǺ׷೹ʠƝ÷ʣɋĀˑ·Ʌǂ൏˽ƿĻԢƙŃԯβ޻ͩıŰƛ˯śNқśĨűĢγ½vȍƴĀbᅛǔ˹řUӝTûR§GěđՓØ۳˰˕ĝˣŉęʥyğÒƹåVă¢Ϋ´ďÞǭɣâџÄȷ¯û`Ɠ£̧ͥ®ûທەӍңWɇɿȳźÆȂƩƘਏcǯۆЩVúࠢʟħʳζӹͼϳƍਡÞ৻ŗࠛݸᏟঊᓡһBᶡҗsӣ֚؝̶ࣃƿҿ̯ĒࠖוĠʁʐˏ`LʶЃװнŐáŖƂƌ॒ý҅͠΀ξຈuΩȮ̤ԴÅ֐ӱŔ́Ƌ߭ʀકѝҏÛīƳׅɦbŶͶdڕ޸ֻĄǃÁȑаͻưͤˢ̂ȕǼòˤҒ֊ɶjՊѩΤÐőֺזȪƦȚؼǦҠτ̶çƲƟ݀Ƞ̐ȑ٤@ڪχΒщòЎ࢚έڲξѨβƧͮǞѨwѲ̳ӎ×ÐŅʐöȸɦ̮ƝѤbϔƒƔ϶ࣹ˜ιʂ߸ͺȃ˶ɰʠ࢈ΡȈϯº~ƄʲÞұĊɄͮזÓᒂπՄ͜ʄᖮ̔¨Ƹ٪Ȕ৤ȏҲŤϖץý͗ފMƴĶɖ͑ƨǊԜƩМîͿ˭ĎɓϞƠвōČƆ٦ȺǼǐ୴̒ƵʟȝNÂŇୀهᅂᐳπƞrȦʌĢͤđ±ȇˈWàǻࡸWɤƒԄĐӴȁ͆҉֖ƫȲϏߖĭдɸ£ǵגБ\"]],\"encodeOffsets\":[[[51389,45932]],[[89419,50264]]]},\"properties\":{\"name\":\"Kazakhstan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Κi²ƿk§mŽNţɒ˷ݒ³ȾƁڒяŢćŜ}Ȑ[ƀIݘťƎĸŐƪªĆޢΠɌǹǚħŶDĠdɌ`ŬAɩ͙ɭ͛̓͗^ᶻɪ̋ƬȕĂĻVĹɟȿ̓áPȷɇɧΟůęҿɉ˛̵ݵɥǷഩ৐Ϟḭ႘নǾδɀɚÒƦˈǞƬЌBŤYǚå̘nÀϩָǎO°ǌGŁďäj´­hſ˦ǜǘǠǜɔɊȨȠǦǞƸƲ¶Ņ\"],\"encodeOffsets\":[[36174,5494]]},\"properties\":{\"name\":\"Kenya\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@·ƭé¬¿¨ɛ×Ūȓ²\\\\Ú[zl֝ǫʡǊৡ¿«ʪúz¨¸kÈTIÒE~мƴՐȓ͢ɾ˂͜œςʌɐWZŴǞ©ѺʬЉʛƤÍGåsuXKþa°£\\\\ÁmÿnãPiĮÅĒ^³tôwO}Hŕ»¹AáWǥ_Yʁ|ȿÔŃƨҫƞ֨ϬƦ ǒîHpgjçā³ec­ų̈ͦƔ¤ü_ȸ°Ͷ½ĪEɤãǬĒÝά³Ą¡æUÑƺzĠĚʦˤŊ˖Ğ۴˯Ք×ĜĒ¨HüQӞSŘV˼ᅜǓÜġþ»Ôµ¼ÁвÏŲġŜħŉWaeUʳcÍg×ą࡯˵Ǘččãa÷ȇǥƕsšJăřԁ á_ëīƏ¡icãíćŅë¹Ý»â͗ŅǍFĹˎDɽŭŉuęGśÃÅ|ċΙǇƙƁcÿ«Ã¯ďy£iyH£ěOy¥ěuë[ƉXéc§}ďŁYϿr\",\"@@ćXÍ`]@LgÐÓ¬Gø|\",\"@@nƀů³ÎeFÁìăAaå¬SüC¨R\"],\"encodeOffsets\":[[74384,40332],[72361,40812],[72916,40850]]},\"properties\":{\"name\":\"Kyrgyzstan\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ұȲʃđĮƴȆǃɎƭȍǛOwҠƩ˂]ÉǓ͐f˲ɋȴƍݞǮt̨ҪʒǐೢĄʜǛ¬®²\\\\TFwl¹·ĖùƴǪÏüĝÖ«ƌE¶ņyàûŖsä|\\\\Ƃ`t`ôSòWü¼°Â|{uÈÔ««iĀ^rC°ÂS BƸƨôPĖŢƿӟɰׁŉ΁֓ħĕƱљ˙ʉ}]ɗͣÒŽĻJ˹ʰɍFȱʻÎćł̋ùęɧÈBǭǑƕΣĻ\"],\"encodeOffsets\":[[106933,10662]]},\"properties\":{\"name\":\"Cambodia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƔĭͷƌŤ¯ÒĊÝâĶ³iĥ\"],[\"@@ÄŃőÞÎ¦\"]],\"encodeOffsets\":[[[-161118,1901]],[[-163163,4018]]]},\"properties\":{\"name\":\"Kiribati\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƉöƠŰӂ°yƣҝı\"],[\"@@ģÖȆĎġƣ\"],[\"@@ƑŘÒ ĀƷ\"],[\"@@UćƳvŞȞË\"],[\"@@ÿ½ƁňƮŤÔǭ\"],[\"@@IōýfWǘĠï\"],[\"@@࢚ೃ]ࡍƚCŹҫ˽̿ӅkÉȗ΁Ŷ˓ÉBȝʽĐÚǓŻƋŵêÖǬ̋ˇţÖȇǕɣ̠ɖrÌńơAŇˤ˔ΖĿÜɞȌǳʜ«ѸʳCiä˜Ȣʢ·òĽĘĪȗɊĥӴϦфߖr˰ˆ\"]],\"encodeOffsets\":[[[129359,34021]],[[129264,35196]],[[129201,35565]],[[131140,35642]],[[131831,35634]],[[129558,38643]],[[131456,39551]]]},\"properties\":{\"name\":\"Korea\",\"childNum\":7}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@āYĉǀĔưƎǑÕƃ\"],[\"@@٫SȧϨݵĚƌƎÚôŘǆȰϴиĆĠiȎÿvŭŚəƣȹȉˢ͢ڿ\"]],\"encodeOffsets\":[[[49434,30336]],[[49606,29228]]]},\"properties\":{\"name\":\"Kuwait\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ϤЋâȓÞDxödRŒŁĉΑÁȄʻĚ©Ɇ»ƠéϺȾĀżýȠƣ§û­sÑrcĖUĺJ`ÁlgŲEñAÃħĩYÉ·çŽŕOʉØǓMEe{çXå¿ă¯sI੊ջAµĵxù̀Ɂ¼ÝÎÿĒȷˆ˓ɚǕÄÕþšÜ£pÝP±ZƛĢƃêªfUıϸʹGû}ƟéoĪƷ¸·Ȏƙ¶å¯gÅÑ½ÙÝrÃjU­Jĥ­§ďOóƷƧAT­ÁqDÿ]j¬Ó¬Çv{|ɵđós_Ɓ_{[tãþŕxßµŅƋFÕ¬ûĞǩÐƳĕú¸mºCx¼lĊ¤ä°®¸l¼tɆpöYĠð@ňŀȚpĈDÒeȉŊNƄÙ¦Ƴ²ďÊȓʲËƴMȤ`Ǌ´ȊÛƊʽȦėİŃƢŭȒĉĒ§oęlƍÆšķJß]EauÁg§µëğȳé÷­JygK`eĀÿhę¾ǡƂNÇñóÓ³fóŧĻËQQšÿȷȁ¿eǑĔȢҺMŦñĶEȪ҈õ̎pƆQ¾חJīǠĺΠǝǪċßÿsXPºN²°ǼÆŠÜÆèzƂB¶IhËJw^ÐƔɒ͆Ǽ¸Č¶kĩÅQÃZ­pu[ƌ ĊFƌëpN²¢bPÝĒrʔGƠM¤ǱΪnªªªŔrRlIæđƸ¨Èu\"],\"encodeOffsets\":[[104579,22917]]},\"properties\":{\"name\":\"Lao PDR\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ϧ̙ʫPҐ঒ˠ͌΄z¯ƃƦÉäǯʳʝòï͇ñ¤ƕƓŹ\"],\"encodeOffsets\":[[36730,34235]]},\"properties\":{\"name\":\"Lebanon\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@àūìЭɛίʨƟʲĀ§òǑÒĳĀWƴÇ°ʓƻՑV˿|ȅ׵Ȫܻ϶१ࡰ࡝ԢǹȀȪ˜͞ʲȘȄÞʾ®°ƂÀÜʠ¨Hðê÷ʂĜɜǇŰգÿʍ̄ǗȒȘΨƢŉ\"],\"encodeOffsets\":[[-8690,7740]]},\"properties\":{\"name\":\"Liberia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʡˏĞտɏБɶࡥ@᳿@᳽Aေ࠽M@нủཤ↏Ⴒࡉϕٛ̓؟Ҽౙ˴ϯڞۑȦʑÅşĘɉخҫؠɢ͢ʠŕךƘϤġୢе߀ǬĪ͂ƄņżƀǠďֲƈȆǜ¨ŐǌǾŶƮüƎìǄöŮÌ~ºCªãİ@ŞLĬPÌǼŸÁƀsϼȟЊµѾĨཤѯѼ߷ᅀн۶їϢűӸȈͰЌƻܖǐʹо̦ࡠ̚Ҩeݺʥ`ʋƲı۾ǡؾsɮˡ\"],\"encodeOffsets\":[[25755,32415]]},\"properties\":{\"name\":\"Libya\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@³ĕķŰƒȒZɫ\"],\"encodeOffsets\":[[-62356,14154]]},\"properties\":{\"name\":\"Saint Lucia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@|ÙſŊń¯\"],[\"@@ɪaϬίѠܣŪ×¦ʃϞܟY͙ȋЍލϑϧ~ƟŦȣ֪ũ଒ĦɵŪ݌ƜʾY̰˼ą͏ƚÁƎ\"]],\"encodeOffsets\":[[[81792,9268]],[[81902,10049]]]},\"properties\":{\"name\":\"Sri Lanka\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ɉkɛ̓Ñęʭ͝˒ƛ˴ŗˆȦĚψӢȊÈŀĀŰàȪðĤlZ֨ёîȕĹ±Ŀŵőǿϛǧ\"],\"encodeOffsets\":[[29335,-30849]]},\"properties\":{\"name\":\"Lesotho\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@µPǸˤƁ˳\"],[\"@@Ù~m¦xʁßÉ¹ÅkƩXuĵkoϙçåx~Ս×jǠë¶ñĥédJwfépÏLµïŖHÐŠʸɏǀгJ۱ǚDǆƧ̞OǮO ɦĲ˶ńβüڔUþ_Ú³ÜNÜަđڂŒƖǓԀăްοCqÛ¡ĉ¥ÛW{qƼWâY`iƥţʹR]ÙķçŇ_ėwŗǛTŅMuyÃÙ«éiTiŪeÀĥǉ\"]],\"encodeOffsets\":[[[21461,56606]],[[26187,55440]]]},\"properties\":{\"name\":\"Lithuania\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ţ̃ƍ½[}¿Q©R}nyZÝ`YĐɼ|¨¦ÐĠîĨYjNEMïz»È·ÊyǸõ\"],\"encodeOffsets\":[[6643,50994]]},\"properties\":{\"name\":\"Luxembourg\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ӑ́ѱϫƍޯπӿĄƕǔځőʵÆԯÛÝMƕÔړV̓åÝU˵Ńɥırوքغۚź؞Փ̢ıؠɼ¹ԶIĄոžƌ­͘õ՜ˍȠÏθàȄÏŞYŤCÎÿɐħoTO«Ǉ̋Ɩl[ĥĬşĄ¯P¸ĻnÑT±­į\"],\"encodeOffsets\":[[28824,57491]]},\"properties\":{\"name\":\"Latvia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@řŰƒ࢖Ɨ˲ϩ̦Տۄ̥ĘlǨþ®_˞@˒Ěڔ˫êFמƵTЋːǓĮ˟ŮåƄ¯ÆĕOċUïǨī±ǓcS͇ĔŹZå÷gFGł]fFƿËF¿\\\\ÕÀĥ£qÝĉÑġSí½·ėµÏÏNŭǁg]«\"],\"encodeOffsets\":[[28890,46542]]},\"properties\":{\"name\":\"Moldova\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĥƷǘ͠ñǧ\"],[\"@@ŉkkŀĲÀƓ\"],[\"@@Ͱ՝ʢඇȼչɱәǁƄŃ̂ȓÃƦ߷Ó˟ˉΧzփīο஭₵́గ͋ލϗ̥Ӎãճ˩ʫOছӚ̫אª٪ϧ६tϜǰӜʤƪԖ੎дǭ̔KˬǋϞ»ݬϊׄ°Тζ˄ȊĴïɌĐƮϪÜȰƽËǰŦǚϼʚƂǷMʆɔ͒Ħ¬\\\\ʝʞ̺ǆǇʬȈΆĥź¶ŨĊÈǺĻҔϞļάŏ̲Ūɲ̠˨̑\"]],\"encodeOffsets\":[[[51135,-17308]],[[49503,-13684]],[[50728,-12730]]]},\"properties\":{\"name\":\"Madagascar\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ōAɼìŭé\"],[\"@@ƾǸöƩɳ\"],[\"@@ĕ¥ŘŘñ\"],[\"@@zĥƉǆŐß\"],[\"@@ȩȴŘиύŚʝ\"],[\"@@ĿƻǤêg\"],[\"@@ƵĴɞÂʣ\"],[\"@@Ûȣȡàú̚Ŝèȡ\"],[\"@@˹Ɋùɠ͖ɩȿ\"],[\"@@ѫ೑ƥཉâͻϖҕÿʓtʚ̵Ϯӊહؘ܇Ɣѵјҍţ^ʚŇÿÞҎÉ͒ƽ˶̇ނɜ֘όǨϼ¼ƿ͊ÓɒƘËɶÿUזϲ͆ǜǼŜࣀ҄ɠଔʜϬَƁÀČƱxˬfǰƝªɩŻ̩еұi̳ȷȋéȄ|ȟșFÿż|ɕۻĵƟƣɂr˄ɛ̯ȑuʃЗ˝LyſໝBGӁǟDǵBθ͙ɠƅ¨ÝtÇ@¯¸Ėy®£@÷SĉZ÷ÙCƳ@ɵ@ϡ@ʫAȃ̭ĿǩĕƥĦȹqs]ÛΗඳ౐ϩȚ©·ΦǧևƶØĪǟyËŎƋšȆË˭࣡Пԁ̓ƸӍ¶ٟ˴ȯȖޭƺঁКْ࣏ٿĔدɚЃцࡵИҗ֖ƿΆΆǌÇƦƹ²ɲʼz̸ȇņǽ̴H˶ūʨ॥ੈۣӺȨĥ^ňρłˣϼȖ]թˈùżȭ³ŤɆʻšǁŔʲȎɮê«ƅʀǧƪɫOǃ̈́ηźǷʾÀˎӻĔ࢑ࢪݫൎXѺӝƖŕǲǁÒǛĹڅͦŦɇýЫ˨॓ڜջɌχʚŅĦʉȈóŘԉͼʩϼ܃ƎćăʤȎƟɺޗԖޟxѵʖȭÂȪʀƑ̆љɌƳÙˏѕɟ̙װ૏ߜĳ[ɩʢF؜ʵբե̴œ̦ĭŽ˛ÍȱȶԓɄāǴϡʰĚϼ·ɨöCąȜčõȴě^Ǿаݛިإͼ͙ࢢȟƔȜˡ̦¹ƜĐĮȑŬɽҊ፺ƴġǧẘষᛠJFϚ๠WʢˉচگЌ߿ͦʓߊ͙ɶǾɸҊ̄ĴۢāּԁϪܕڔٻ¤Э̊ԡผәȖø\"]],\"encodeOffsets\":[[[-93884,19126]],[[-89026,20791]],[[-109058,22130]],[[-113220,25604]],[[-114746,25135]],[[-113766,26646]],[[-117934,28744]],[[-114895,29702]],[[-115871,29750]],[[-99477,26585]]]},\"properties\":{\"name\":\"Mexico\",\"childNum\":10}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@аˏƖɇó͹ōI·ŹķġkʹǅwǵƱŷ¯©wԣeɉàȃ̂ÞԎƆ@¬ǔʂĎȐÑĒĶƠxB@Ɇ²ѼV\"],\"encodeOffsets\":[[22881,43330]]},\"properties\":{\"name\":\"Macedonia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Nᅫħ՛ɹտ˕ǿ_ŃύÒ·ïෛÍ̑ʑؗÏϟŮѱWʏȑޣ̧ŝʍЉºʋɷÝʫʡV­ͅȍćΛȀǟăƫƿĐ˙ɇķª˭ɩɗӵȻϝȫ˩ԭ\\\\řMų©W¡ŃĥéNķºEd¤úD~¹ˌțƁçtõÐmoS±KÅnĵoɏMÇǗ̱ǔɵòˡɝaƆɓƐÏъˡfɤ̜ΡʴHȾȍЖ̏Àǫͫȍѩƶιˁȉʴ̹ǅǓƸĨǦAҌȵάǑ­ȇˊĀȰ·˦ǫɄ«̎ƨÁpjºɘԶìòƤŀ WюЋɄɬي£жîAĮl¢Ú°`ŵoẀKŸڊűƆĳńyȬyȾyȾyȼíظǙฮ̵᨜íظ³к{ȾuȒʴ@ˠ@ˌBی@ᝀ༷᣾ၭjʅϐəØƩௐѹŀσŕʵȤĭܺƀ\"],\"encodeOffsets\":[[4330,19603]]},\"properties\":{\"name\":\"Mali\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŉíƀǸĿ\"],\"encodeOffsets\":[[14916,36714]]},\"properties\":{\"name\":\"Malta\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ã±ƤƤğı\"],[\"@@¾ǳǅŬňÈ\"],[\"@@sǥÿz·ȌƬ\"],[\"@@¥ưŦŅÿ©\"],[\"@@ÁģÁÊń\"],[\"@@ĽũřC˼Đã\"],[\"@@KƏɤ¦ē\"],[\"@@ÑHĀĢmĩ\"],[\"@@ÅćoŪǴǲĽɓ\"],[\"@@ā¬¾ǘɃ\"],[\"@@ǟƸɎC­Ƴ\"],[\"@@ȚŉąũKĥƚÐÂ\"],[\"@@lřčǒâ·\"],[\"@@ZăĝɐĄƋ\"],[\"@@·ċͅǻõǉi}]ÏxÌIJgµƁAçyÛÅÅş¯ǻM±ĳÀ£ÃRƛĉɗxǳΉ§ƃ˛қë̙¼ǕʏÑܹ̹ÏɒȑØб؜ۑȆթƦò¬ÅÏƝȍŋֵ̭ƏVȑ̲ԭӊե[ֻʀЛǮ٣Υ֧εύ¯ЃŝŽćբǮʼÈԖŔňȫf¼ФąjàĒđۂ̿ی§˧ÆUϖǅЮĠ@ǧǦďࡢŁŨŢҤ̍ƧӔ̉ʲ¶̵ťˏ˫ǣȯɚŖ˕ҽɳ̽ϑó˺ƛɫȟO¥̬șɹԜɗΗǽß̬ಬΙ঎ÚRƧŸqͨĭ͙ȉńǳ˾˨ŋƤǞ͗ˮĄŘϩƂĵǱŅǼÆʬȧǙÀƎŽȈYɣͱиŧфŶŬʨőƊUЈOĪźB¦wǌďĚǦúŴé̞ŀˌŪ¤b ޴łÛȘf͢œȀϚìŸĮƎǮϰųİĪȲ˘ʾpŤàØ°E|kjČQʄŢƖࠪԶԚƀƍŰcD¢ǝɶeÚâƸò¾ʚȆĖjŎÚČĚƀ¾Nϴ˥ȤՕżĚǖëôڋ­ԅķĭüǫ˓ɷǅ_ŏɹǅç͍Żā©ʃƪəťˋծǚԼVƃǻžɽηҰĹöğ˃۫،ćpɧǨɷϨQЌʄºƿ\"]],\"encodeOffsets\":[[[100539,10172]],[[100567,11216]],[[100920,12027]],[[100881,12191]],[[100420,12688]],[[100776,12901]],[[100675,13414]],[[97081,16199]],[[96745,16329]],[[99917,16644]],[[95940,19133]],[[95964,20028]],[[95736,20370]],[[95243,20403]],[[103567,22086]]]},\"properties\":{\"name\":\"Myanmar\",\"childNum\":15}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ϡʉ֢˯ʑÉTǳɳÑőŸ̽ϥ¾ʭݿ׈ĠæáŖmǈb|z^Ŕ`CĆ¬ĚÚ¬ĐÀìM­¢NTÄąŞV~p`®Sª]TªP|Crë\"],\"encodeOffsets\":[[19680,44493]]},\"properties\":{\"name\":\"Montenegro\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ܷ˵ԛӉߧˋēcշkџ୵ƅݷʛҭȇįå×Å¡ËiНÂ@Ȁǋʵ£ʉ՛ɊлðΗÆƷ¸ˁʆåpé^͹ZӕÆε®đNџğ቙ȆۏÍѳҲ˫֬ǙðrȨՙÖ৑ԀؓúǫqŽCɁvţϏP҅Šơkǹˢ˸іIÎ£ÔĀØВÙŔÒÏ~ëfǿʀÑȂßþa¶clĹtóÙŎÍR¡ái­FǻƬçrγuÛ¢­áZſÌę¦QĈ¥ÈēhēÌˣêäŸȓìõøŊĴ³äRUĸD¬nòÞǐφǖâXroUĐzÐ~nÂŸ_â¤ĖØdSƼΆǆԐňº ɘĠǲÈVNØC®̜ƠʦCôRƎƎÒ»ǚī°I¶xÌÞVîWƌƣ॰¡Ĕ˫ɔǕ¼H`ǲ@ƴĝΊoҘòȾć֞eȈŵŶVȖƜΐĒȺʎ|ȚœÇ£ǡ˸ɸоҌˊɆˈࡺ̥ĨeǐMȪGÊY܂ɕǄ^ɀʔËH«cTĝµjȃĐģyŏࡠ͓ˢ¿ø`ânɶmરːۮƛŴ\\\\ǦVŘ_ȖĭČġĒ­øĪEʆGʈ¤ʙψɏĬ¯üeԼXǼÚu֞ċȔ¦ʀÝĲp̈́ŚŎªþ[մèΒĞǠsĞbĞŠ¢ÜÔĖżÞńÊņÆ؊ɢϐɖăɬǃøÄ_ƆSňKàtŌǪºèCŔǚµŎąܥ਷{ĹJğUćū¿ĩ±üɋʀƿĄræàƀÌðD¾_ŔIŜtĞJŠa¨aĲ}ǺŝÆ]Ζ˰ؘGÎļķÎÃĶŘÄՊчƾʕƻĳkïCūnţYƛrǡĆħt­[É¯×TËSƧXă\\\\ŷïWˣůǍÐĝC_[čBo{Ћvʝĉ̋ͷ`X¥³ѡɿѥËȱWƱƭ{şƿɃŷñáǟÙȋŏÅcҍÄ˽ÖğćĀó ʣJãfœcзבѾҫ­œ\"],\"encodeOffsets\":[[114564,44729]]},\"properties\":{\"name\":\"Mongolia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@èĞ¦Ïō\"],\"encodeOffsets\":[[149250,15497]]},\"properties\":{\"name\":\"N. Mariana Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@MˎÃȨfɜĥ¼఺ƽӌɇΈɏࣤŢĒࡂࡄÛƊŜАр֦ǷԄÔʈųƎʘӦĭఐÒƞࡏʄס;ڡz̒Əո᠂ࠒκүبŤŌơחʛҁʂЩ;χƮśƯº£ÞGÒZdlSʐ§ƚ©ÆU\\\\ÚƺĮǸȬĠ| ČĐࣈuzgǊƁǦǛɞħŢŅƌȝɈͷǤÇȆEĜƹߎȼЌ®ĐƖZŐEȈHȤQðkºFÊhżŊłCƞéþÑ`½Ī֤ŞͦťƚƸĂǐʊӒĳиȸۢɊƠüЌ̚ŰǓĿēĢÅǍуň֟ЧĀţť̇ŎCvख़ĶûÍ˗ňİÎʟȏͭũ֕ߵǋÍ®šٓҋ߃ɧݳйʱɇ҇ٵş¨wţ͍ōݿۍʣĤĚĵ§յɸ˩ʊ܁¢طÊµÖ˶Öŏ׷ǣۭƞu©ȭлӭၽ۷̷ћɒɛĘƺkƙӟEe҃YŹzñK\"],\"encodeOffsets\":[[32884,-27483]]},\"properties\":{\"name\":\"Mozambique\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÃćĐŒƀ}Ƈ\"],[\"@@ŷډṿL³ƦSk£Bĭгíً¤ɃɫэЌʯǙËƱȽűǅ¹oiʭŦ˛Ȱ̵φʯЦ̅ĨĥqγζׅĆٷǉЃ ǝ˝ěmƯá@ϖÔ˄ζઌƵबʧ̞ǬŴŝȠيȁΦǉeɇϞĹ¥ȝ_þČβพD६BϪBȖ@Ȗ@Ŷ@QŐOĘQŢSŢՠ·˚ĸưŖöƀĔĴà¾hƾx̌ŲNц@΄@Ҝ@Ŗ@ɮ@΄@Ɍ൞@޴@̼@ƾ@Ǡ@@Ī@Ǝ@ȌAȎ@ǖ@̪ἢኑۋ@ˋA˟@ʳ@ǔก̶ᨛǚอîطzȻzȽ´ЩĴŃŲƅ\"]],\"encodeOffsets\":[[[-16766,20180]],[[-5488,16674]]]},\"properties\":{\"name\":\"Mauritania\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ó~ĖÁ\"],\"encodeOffsets\":[[-63640,17143]]},\"properties\":{\"name\":\"Montserrat\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˩¶ĈȲȮǎŔȇşɭ\"],\"encodeOffsets\":[[59035,-20976]]},\"properties\":{\"name\":\"Mauritius\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŏFƕYYÍȻЋƺߍFěÈȅ͸ǣȞɇņƋĨšǜɝƂǥȃďࣇċğ{ȫĭǷÙƹV[ªÅ¨ƙTʏckÑYÝH¹¤ ưƭŜͽψʁЪʜ҂טŋƢاţЧՄƕËƷːŃĊʠ̬PѰҌ̔ƟóǐªΠÑɰ\\\\Ĥȸñʲ̴ʤĝƌ_QĮǻǔtì\\\\üďĒďžŷeÙǸࠀəĚƦ˚ȣȾёĈҩ¹ʍƔɕĮ« Ínī\"],\"encodeOffsets\":[[35799,-11856]]},\"properties\":{\"name\":\"Malawi\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ßnnˤ²̑\"],[\"@@û²Ėŝ\"],[\"@@ȡa¸þƪÛ\"],[\"@@ćW°ƺþµ¥ī\"],[\"@@ÐęƥăćžǞ \"],[\"@@ȪÏǎʹӀϡˌҷpྕ̼̑΀ܛ˭ŕrŏǰTƙʟIǷĵĻǼՉʺளࡼJ̲ӭ״ä´Ʊ̎ɫഢȋϪŤȮìŏΆ÷ĴǷưEÑЅŎőϊɪĺŇǐ ȒΖ\"],[\"@@ЉƖӯջmƳŽȋঃǩQŇŋɕĊģͣɭɩˋѹԟcɽǕԭǖÁŐϻOʑĵěʝɧōשԃǁ܏نīʀúŎȢɛРܾ˕ǍƌȪӨ¹ȪȢDÌ̤ఎΚ޾ࣨŞ̊Ӹүƾ̘ÿ˚ɾƴäѓƸųҠȠưƈœːƺǄŘÏŘæܺନĎų¿ȃ˺̨Đ{ÄəˆƑìƋ¥̉ţįфƚĦǅƱÙå͊ČȰǵՆƯĕůʳŗշÙƇ̈́˛[ĻґŇʽþĹơ\"],[\"@@½«aŨǚüFŋĿ«\"]],\"encodeOffsets\":[[[114063,2474]],[[106723,2798]],[[120714,4287]],[[102696,5422]],[[102245,6621]],[[104552,6393]],[[120397,4271]],[[119954,7341]]]},\"properties\":{\"name\":\"Malaysia\",\"childNum\":8}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݨƈϪɦ§Ɏȋ̋yͅșʋ|եν͋ϰስˍJᵥࡃFᙵ@ᲃ@šυĻȏƃÉƙë܍¬ܧǂċǒVȜƝŘōĐĻµ·ùmŋµŇŝíؓնͅӤǝ݆Ɵǆŉઆ˯ۨๆࡗಂʁؚ׭੐ֵިɀRфƈnĤ¸ǘĘEPǄMՌȬʠËҔ̱ᅌfሼSҺ͹ਨ»Ҫſೠƶࢴǒ\"],\"encodeOffsets\":[[23942,-18064]]},\"properties\":{\"name\":\"Namibia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@č_@ĈĎç\"],[\"@@ņ]eƝŹsŷȼƤ²ný\"],[\"@@˟ƎÚƂĴőêȰYĒΫ\"],[\"@@ȞٌХЄл੾ەxțǑ­ʱĶಓ߼ُںğ˶Ťĕ\"]],\"encodeOffsets\":[[[171566,-23166]],[[172044,-21944]],[[171419,-21668]],[[168144,-20731]]]},\"properties\":{\"name\":\"New Caledonia\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǠఉΦӋgȅ͂͗ȓωɕᠵङঃޛଵ¶ȷĎίƭEēϝȅǻĹǇȝ౉ɺЛȷ¥UӍϫΏVϛðʛŸ̡Țŝƕ^ؙ˱ɅĜщҨīJ̃Đ̅ĜÛ[­mĵáӝqѡɳǙֵʧȵ©۫ڑׂσƋp˙ˇΌźƂķȢґÇӟ΀D˖ǲMө̄ǁɦɰǿɄ®ΐؘÐ̒ʒොÎ¸ðώÑ`ń˖ȀɺրĨ՜Mᅬഞ˰൪୨␤ᕨౚ˳ؠһٜ̈́\"],\"encodeOffsets\":[[15339,23549]]},\"properties\":{\"name\":\"Niger\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƇoòŎÖĝ\"],[\"@@Ɇěؚ˲Ɩ]Şվ͑ϜïΐUӎϬVȸ¦МొɹǈȞٮ̀ƮF˜ϑŎƯĄϹtƓô÷ȸ·Ďŭ¹փ̛ȋ¹gïGÙ÷ÑǉɡƏɥķηŧœÑЇɧř­ĻÍΕqËŉųȻÓýƧßŗǻ׋ǧȳÕĂŽǡƑÝ¿{ǉͭɑ¡hÕȬßẩʊǉƻĵAó^ilc oėÙƏı­go¯ġÅıƛħЯсʁܷǙˑɿƶº̋ձħŊȷěǩƚàǝșĻŽˬþ̏ȑ­ŖsœʓPļćŻǟ¼͏ʸŝʤÃƸþręCŤƴŘƍÓƽŎɎàŇĄǷÇɃ͔ί˔ࠗâɢƞʋÕāŅՇw|ȎdÈl¦k¼kæUńôK˞`xdlBçݨÔ֪ɨɾאɸȎͼŀRÀǄßƌʼk±´ŵǾFĖÂŐÄÎÆc٤ʨȶǚֶѢɴӞrĶâ®nÜ\\\\ڶǵъҧ\"]],\"encodeOffsets\":[[[7476,4525]],[[6968,13423]]]},\"properties\":{\"name\":\"Nigeria\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ñōǥ§׷ʼɳč֥ȴƇŃྦྷེîàƊĹò¶ɺZ¦`úǺæ\\\\ÂJfz«˔OÂX¢tbľXȜg^ĀŊòĂ¾¤Z´íǔķPhNLdE²¤¨ЊˢŲɪǖȒǸűĞwݸȲĊĎĸɐ_wqÁĳÃöÍÛĪÝĤ΃ȋ˿Ż֩²ރĭ¢ɈƉǱØБñ½Ǖľ¬Ƶǹ˻Ȏ͏\"],\"encodeOffsets\":[[-85649,11180]]},\"properties\":{\"name\":\"Nicaragua\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ũVĪĚį\"],\"encodeOffsets\":[[-173878,-19541]]},\"properties\":{\"name\":\"Niue\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@£ħīɪƐƁ\"],[\"@@˗ƭЁçŎ݂R\"],[\"@@łù́¼ɀ~\"],[\"@@ƩƪŮ@ĥ\"],[\"@@ٷżʜ²ѾĿɧŀƮ\\\\ȣǚҊоʊՎʖhЄʸѾŚو͎ƃƑՍ˓ŹʌëʽʥÜħ܏Ƒɀ̑ËʫɭįǆĿ¯ŻʥrĒ͆ӧłƷǆگé\"],[\"@@ŕLͤɍ©\"]],\"encodeOffsets\":[[[-69842,12437]],[[4328,52620]],[[4044,52982]],[[5004,54345]],[[4328,52620]],[[5454,54668]]]},\"properties\":{\"name\":\"Netherlands\",\"childNum\":6,\"cp\":[5.0752777,52.358465]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Hıōɒņş\"],[\"@@ƅCÀĤĆğ\"],[\"@@ʣÜɨ¶|ő\"],[\"@@ƷhВİlč˅\"],[\"@@ЭJʀĞǮħ\"],[\"@@ů­ȴɂăǓ\"],[\"@@ȌܱȇÒƒӔĖ\"],[\"@@^˛ۉ Ր˲Ɯµ\"],[\"@@ӌˆǆȱҙȗ෽ǱॾΦÐάӆɒʍح\"],[\"@@тù­ʵϳAͽƷɭ¶ǈʔ̠hŤǸ\"],[\"@@ǅ{ÎŜĸğ\"],[\"@@˃Yzńʘ`Mŉ\"],[\"@@̒¡ɯǗҥȭջiȀǮ˚\\\\Ϫϴļƫ\"],[\"@@Ȫŝ΁ǄƘ¥\"],[\"@@ϥɡǿƌԘƠÎÉ\"],[\"@@ʩIÀƼȪƱ\"],[\"@@ԥɱЁu̩Ţ௒Ɔ\"],[\"@@QȵֱĈýǟחœΟɵĵžЦʞǇǖ୧ͦԵƃԏRϟȉ˗םڳͫࣳǴѽƁލÒۉҮѷ¹@ơϋIы_ȚƟͅбඕǘ͗ӷӻŜғǫտϿɶ̷ࠗӅ¼Ʒ߅ƩÁۣ۟؁άįÂʓƱƅٍ¼ΉÙԯ͹ƧʯʮࡋŭӃ،̳ƣʕ΋µʚҩđ˿گѝİʫŽ̧ƟaéńҭŮȩӤΓى˱§ʇżČšఫۛঋķŃńʋ­ÎƔߟɖŵϜҚĕɞŊɝ£ǭŬÀǜ϶ȼਯ͓ÌͶȘŲʦ«ώƂУԴЬȌPǩЀ̠۽ƓࡍקºϘО͹èůȬіȰͻıŅÈě͸๨ĔɖǃDŜӄĴɑøĆŔɧɧӕľǻŽ޳́ðĕȶ˰¬·ȌDƘࣰù׸è௵ÈĽȊ٠ɎƦÉк¸Ħ¼ҳ»ǼǠદĩĞюĊ઻¥ǦǬՌƚѼOѮȵϹˆВƲɱƀǺĒҺOhőҔƒ˘ȝتÐƎժƲǏĀʂĖųͣŅjŵ݉ɏЧǎ࠾ײߪ˜ĠÎ˱¹ǌȆ֜Ǡ̊ã΂ȬлŽʃĂҰԼ̀°ȽŦੂǔޓÇþΈؼźʵĦϨǴ઴êࠉÌѪʮՎȏĈƢϋæ²Ǝϗď±ŪˮƐЦqʱĶ׊ƈʮ̇ĝμଌĠ࢏ĚೲԾƄ˂րœʧžӪɎѲåָ̛ѪɩԥζǮɆkįͤҔqɨľҖƭԳͰߺ̨Ģ֚͟sȊࣼдƁŀͨƦԜƃцT؋سലۦÛѽͼĐǎȜ̦¼ʽȚ̌Ũڜĭгʟ̾SáΛ՜Ԭހǻ˞²݈έֱű௫ڠīǈȽʞUŲŨǆŝψ¾\"],[\"@@ҢūҩɣÖɬĞ\"],[\"@@ߞ˴Aŕߛǝ\"],[\"@@̝ļ˔HŃ\"],[\"@@μeɌ̉ॸß˭ƃຈȡጇЩŌʊํÿ،϶஥Ұ୊İ\"],[\"@@ܮͅ࠵ȘӁτ׊ʕ\"],[\"@@ղMີ«ԺĬҊ±\"],[\"@@ࢢęƓΏؔȀʀ˽৺ǥ׼¨ٺ̭෱ŋ᠏ၽይվ̵ɰטbȎƐᄨĞĳĎᛗŃ·ɎՄmఐ˒ਂүŒˬƈଫǅʢ̱ş˝ú§ʳѷť߯຅״ߪȩ̒щb̷ŻЃ͠Èɺ̄åҬĔӮěOĒஎîũਇũٺJגȗӂϢเۓѷצΰ̰Ҕţ\"],[\"@@࢙UᅮĠओĉ\"],[\"@@ୢǙƊ̒ҶÔĚʋশƤᓂǛ˴Ʌವч෋ǫ࢙Ʋ၉[؛üϡĐठƂႷXЁƚԎĜ߃Ěபṳ͞঒ȓ\"]],\"encodeOffsets\":[[[5208,61755]],[[5078,62551]],[[8298,64858]],[[8675,65196]],[[11501,66423]],[[13284,69504]],[[14206,69904]],[[15573,70598]],[[16139,70207]],[[17924,71267]],[[30676,71472]],[[21278,71772]],[[19718,71749]],[[20242,71902]],[[24183,72243]],[[24595,72261]],[[24004,72516]],[[31611,71459]],[[26201,72850]],[[-9168,72540]],[[19681,76177]],[[22127,80482]],[[11521,80498]],[[29745,80806]],[[17190,81825]],[[33307,82042]],[[21400,82176]]]},\"properties\":{\"name\":\"Norway\",\"childNum\":27}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@R¡ĲƃķJç¥ś³ſyYקmɫǐ˃ĵ׍ǶǳµõǂáVɵĉčtэɲ¨BĦ[¤Ň¦ɁäśÂəĩçfǏ¼ĕR¿i]ãҳŰmÞÞ¡\\\\ƫ_ƏîƧĞÙ£Z]¡qOֹЀӥ˄Í`m{a»Nÿ°ĉ´ŽĜgľĘrÂÐpļCĘÀŰîƄŮƜɪȂzjº¸Pǰşà®ƌȴȌ¦Ǵqǂƪə޼ϛάί̒ĆðuâvÁ¢ĵ®Ŀӊ̏¸MǶ´¶MUBióģ³øoǖaɤDæµæíæũ½cÎr^Ű¸æýĢ¿äĞĺ¼dÜOzq£Ƹ­ðĸ÷Ųa˨MȨÒȾ_Łأ\"],\"encodeOffsets\":[[90096,27786]]},\"properties\":{\"name\":\"Nepal\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@§ÓėØƀC\"],[\"@@lë̓ǲɨƔiǝ\"],[\"@@ďÑǔŗ׿ǁɼ̐cǨƠJǄƕ\"],[\"@@ĳŉ¸ð¼\"],[\"@@ǡŁuĘĝoƶȫƳûĩäØƺʗzʂĚ͜o\"],[\"@@őµƸǪ¥ų\"],[\"@@ۦ̖ů̇ǜɺʬsɛȇ˨Śʧ˙\\\\ȭǘÏࢽਡԇʝĤéǩğƖjĨƩɢ±OǕӁmĮƷşɕƔŨǍ߃̱āկūBĪŅ΍էÚƽ̙Ï؛ԡ́Í߭`ǋȲ̅GʫǼƝý՗ƺȬɡëÌŸȍÙIŐѠĴǥÈǌĪɍWRÚƪ¼¥ĆʊċØĶǡƖȞÃĴǺŖ²ŋfǀʪƨĺÍ©ƐԎЂ؆İSŘ֐Ȭ΀̼ƀeýØʸ`óêŢ¢ÎËȢʾƕ`ǄʈȢƢ֔ϲɌǈӺтΰʮAǯqyĽʆƱńα\"],[\"@@Ǔ¾ŞżǛ\"],[\"@@ƮútđՌǑƁƬ®ɔҏƹW΀їãҁӞŷðǳƂJç؎ʾɑ˰އঔ̉آςѸŗɥܟʕƝÉѣ͕Ɣϑůř˩ƞıɣПܟࢱ֡ͭŧǌʅM_ǜȗÇѸ֘ü˨ĉƦūƎࣙϊƝǆæưҮƪǘƬǢݜńü˽צŰįǐŌŭŠʱDʋϘǴğQ̦ĿÜ]ïǻńĹǶFğȾʹĥաۊǶȊȿƳ¿¶ǓȦØǄСҼ˴vãęʲͱ\"]],\"encodeOffsets\":[[[173239,-53757]],[[170211,-51979]],[[172181,-47986]],[[170987,-46264]],[[-180405,-44790]],[[178089,-41844]],[[177271,-42269]],[[179757,-37149]],[[177428,-35773]]]},\"properties\":{\"name\":\"New Zealand\",\"childNum\":9}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@åO@ńȲ˾ÈƏȓʡ\"],[\"@@ɄёОЩ൲ϵրܙͦŵmʏέ؅Ѝ͕ΟץɝdƦÙSʵ́ŭӇĈ։ࠣɛωٟݻŧȉɏhɝǯʁ࠷ϩȵѱĥछጊᠾ࠾֐၌ϣמ\\\\˦˨چÁĺѢĺ³ŸƕxՀǤðÂǷ˘Ȭ\"],[\"@@Źn̚ñ`˨ʎĩי\"]],\"encodeOffsets\":[[[60132,20704]],[[57742,25579]],[[57650,26267]]]},\"properties\":{\"name\":\"Oman\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@MΥ٫֕ۖߕÄ޽ںՓe˂ȕDƳ¦Ȟ_d[iűĩĒǖJ̆ƷáśīÉ_˧şĕ·ãÑ{­_©ÒǃZ·¹ǡaÙüÕ`NĻÙŇÇ@ˣ̻ġíaéÏR¹»ÝËΫƅГݽһɷ§¯ƍ̍Ʊƙ·ŉeí˟ý̛ʻįÛIęº¿Ƙȍôƅù§¥āŻŹȅ˟ʣć̵ըɋǛ£οƐǟ¼iľI´HÄjàHȱȎ̡ÖƟÐővÍuKÚšA}½¯Dgååa§O³Pão¬R°eɏ¿ǅËʗĹõNç¬Ù¢īDǫMīBËdÇ[ëhuC¡¦kMg_WuGʧȡFěaĉmıÑ£ēɋŲǇų̟̂řӨϿĖG̬̿͂ǉĝ˰£ළřıĻԋȀх¥ÃţྥqjbzêrʤĜSºNdÎªbnvŸ|Ɯ¼ʄŤĪWÔŒܚƦdƠ²xR^QǖÂ Gx²»{RΏZ~҈iͶܹ̂ا࠸ıĸǅǐ͌ğٶǿЎĹࣼöҀėʜŸל^ॖʴĮ߀МϮԼyʈĠƅƌӨʠξ@ɬƙΈʬиɔӲٔɦ̹؀ٞ¯ͮĆːŉƊվո£̨͗и¢âࡢԨ۸Ŋ\"],\"encodeOffsets\":[[74844,37750]]},\"properties\":{\"name\":\"Pakistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȽĸŜê|łʏ\"],[\"@@¿ƌÞr]ƽ\"],[\"@@ēƇʂѵ˽ͿȉŐśЁѩۨŒ~Ūʜ͎Ʌ˵̨ĽċƧĞUųĕɰӓ̴ΝwƯĳŇǱÆ׫͍Bŗϔӛսɱȟ¨ƍԼǡɱȣĄȉΔγ¶ÛĮϋVƽÙ[ƧůɢƔĮbUŪ½ĘÄżĤ¯ØĉÆ·H@͜^jX|~`ºlƂïäÐÂ­ŊāǿŶc³ƇƖąʢnĩƶҐ̟ѢĚװ˔Ҧ͜శ̥תӝ\"]],\"encodeOffsets\":[[[-83561,7509]],[[-80791,8473]],[[-79231,8867]]]},\"properties\":{\"name\":\"Panama\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ԷσȕŗȳÏLŃo{iij{sªÖë°] {WýƶЃŶħgRI«°ñĊÅŐƏĆġHŃĵũĳũۤĉǖбۼ^ȊŘØͼ˺|^Èty©m­MÝଢ଼À~êß¸¦OªFÐbżÄĘ¬ĸEƒkĄFݦಧʙͅāګǠУЩՁ]ƗǞɯȽͻǢя̾ǃǃřXƓԓҷk¡ľşVÑ@@AÙÉĉÛƕ­¦ʋĽǹЯśޙ֎Ǐ͚޹Ӱ੕юୁڒίњͳɠω٪İºδԝ࡮ˏʐÉͬ΍͂đϜϙغӛఈԫڀԯࣈ७ײmƴȞ¤Ǧϡߺ¬̆پۜƮĞæǁ¦ˡeq³őv«i¹b¥JĎEùŃ·T°Cø ĄĘ¸^ÚĎ¿Ĳ±¢}ðRÖZ¼¾^ŋă²×ÎóÀ{æAĢl¾j²^Môf´¤ƨĔ˂ʬܐĖÙ͊Ь঴ΚӸΰѦԐŴӎZƄwS̤ƑƴÇƈÏ¤ÑLʊgǞü˰űlt­ÂÚ¾»¤¡¢¿êɩ¨ÝǊ·ÊÍºwÄÑǖ©Ƙύʦřϓƒ½¤¯؈MȠØªÄ¼Ä¾¨\\\\ǌÑƌġǚlêÊòh¸hɚŕ¶ÁÔYʀő¦¯äÌe՛ऻǤíEÄhJ}¶ÖƗŴģ¨×KÅu£KÙ ġ]ß°u¬½ŁcǅRß]ƥƩܷŻΉȳąĭīśĝùµŏw±yýљƵʡăuÍĊ̱\"],\"encodeOffsets\":[[-74892,-6621]]},\"properties\":{\"name\":\"Peru\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@έƽ̀ɚîÛ\"],[\"@@ɂŕĭÏΗêʄļ\"],[\"@@őYŃȼȎÞɠśȗƣ\"],[\"@@ōýbĦĬg\"],[\"@@©Û·ôržêfFƻ\"],[\"@@ËoKľØč\"],[\"@@šUWĀźé\"],[\"@@éœķöǢ\"],[\"@@ƾĤ˙Ƒ̙Ȑģþɿo̵ŔŽXίͧ͝Eҗ̩ࡰŕÏʷӕǪȋâУˑ͉ĩЄʯǍ׷̜œƠýӶȆ͸ғΠơSďͳʛʘɅƝ©ǊƧЉہƫfȚˎض֘ǲŜɸ͒ɨΒɩ¥͑ͰƲǨ̶˜ŚΆɮēÌƄʐWwخ҈λ\"],[\"@@ÉÔèȄĊɑħ\"],[\"@@Ѕǁƽrĳǌ̚ˌƌrȮŏdȩ\"],[\"@@ǏǢƠ˒pѳ\"],[\"@@Ļ}¸ƺƀÏûë\"],[\"@@ģ¡AƶƐŐ©ɣ\"],[\"@@ŗIŅɖʯƎƋ˸ÒŜ͔ŀΖƔ͐ɰĜɈÏ¶ţͿޓWɑƞ˩ǃǫ\"],[\"@@`Ѥո઴ܽʯɫˣ֭\"],[\"@@¸ŏáBjŎ\"],[\"@@ýÓŎ̄༾๜èиȺ˺u̡ƈϟˉơƫɡ·ŧ̅ևऽۇ\"],[\"@@űč´Ŏþ\"],[\"@@̘|ĆƉ[ΧɊБŁıŻƬ˭ȷŖLԨĽƲǻīԦȴǉ\"],[\"@@ĿMĻưŴlĈǍ\"],[\"@@˼g´ŻɜĂȽˇʟƓۇ͇Ų৖ƿǰĨϾɽ\"],[\"@@ÿYëɚƦFǵ\"],[\"@@ņ¬òǩʯGĿʖǸŏ\"],[\"@@șŪƲ¨Ƶ\"],[\"@@äǥǺŉԇè̙ƌǁхĄǕǒįǼÞǨң͚ŵΖߐ\"],[\"@@˘ˑJǵӑ϶ˇʓâքЖʝ\"],[\"@@ãȽùȎàɢŦ°§ʡ\"],[\"@@HñƁʸźȅ\"],[\"@@ðŷ·΀˘ɇ\"],[\"@@мːʧdбū˳Ɓå˃ʖɫքʿȲÀĖʮ\"],[\"@@ǚÝġɑƥľîǲ\"],[\"@@ƭčŗŎƾΐǊǧÁȧ\"],[\"@@č̋ÿ͐ǎ\"],[\"@@شˏǌĞƆĲyħڙ̰ґ͑߃ґɃXɛǷ́ʮӳËŽŜ΍ϐȧÜÈóŶάƜʴŉƘοǐðnȎиȋSīɍÛɨ̓ƃ̜ÙéϿƵļÒȐՙņŭͮӋϺŃkǘЭÉǛȉ˞ԉΖɵăƁǋȽ~ɉǤǟãi͒ʲʰfŸ̛ȤJͯű{ǁ˸Ɨ¶ʹ୼¶ÒˢɻǬÀU౺ȰܶтĜ\"],[\"@@ă«ĲƘmī\"],[\"@@TùſîŬL\"]],\"encodeOffsets\":[[[123137,5383]],[[124068,6222]],[[125024,6583]],[[125888,7587]],[[119890,8073]],[[120172,8412]],[[127803,9363]],[[126667,9460]],[[129031,9545]],[[129085,10001]],[[127585,10023]],[[128707,10153]],[[122795,10738]],[[125594,10725]],[[126087,9282]],[[126332,9677]],[[126728,11555]],[[120127,8643]],[[122739,11802]],[[127565,11616]],[[127600,11769]],[[125437,11894]],[[122920,11985]],[[122983,12460]],[[125599,12605]],[[128246,12829]],[[126686,12583]],[[125025,12652]],[[126746,12753]],[[126241,13162]],[[123602,13803]],[[124841,13866]],[[127339,13960]],[[124963,15366]],[[124008,19063]],[[124848,19349]],[[124438,19827]]]},\"properties\":{\"name\":\"Philippines\",\"childNum\":37}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@áŦŔƾ±ˣ\"],\"encodeOffsets\":[[137826,7560]]},\"properties\":{\"name\":\"Palau\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȌġǧɡĨéǌ˨ŷ\"],[\"@@ƅÁćÞɎ[\"],[\"@@]ßĉĨ\"],[\"@@ǺÂÅȧɫĒƷ͐ʰʻ\"],[\"@@ɔÑĘȿϩÔöÑƨü\\\\\"],[\"@@ȡŎĊžĤµtȕ\"],[\"@@˒ġ^ŝϝǘĮ¨\"],[\"@@dÑĳʀĦĘU˅\"],[\"@@ɝĪɔoJù\"],[\"@@ȵǘ\\\\Ŕɖĳ{Ƿ\"],[\"@@ȧƧ̿ŢšΎϋ̈́}Ф̬Ƨ̼ѱ̘ȡŔʳ\"],[\"@@ƝŀłĮȭ\"],[\"@@ę˔üĆĂǡãǷ\"],[\"@@ŕ¸Ħņpƽ\"],[\"@@ǜìʐŅ¯Й̯ɅƆʁÇďǯę̍Zʉً̯˿ۏwɩǲʃٗϔĂǔުĥЈ¼ŌÜņμä·ćȧĢǷ׼ÞΪФ̂Þßֶ˔ă\"],[\"@@qóđłĄ¬ù\"],[\"@@AᇴħƔĨͦCᲘ@ǌྴׯԖġҶ̽ΊiԠѯȺζοkӣ໒ջȢɏ̇؏·ƑħȤҙ޾؍ĶϙǢşŐ̙ԬhÄϹؼǅȿıĨǧࠌȇ͹Ñǜǯ˝ŗʫÞəȌအʄكִ­ˢ˩Ğԇܾࢷɲġƞ̓Ä̯ǅЧʠʌНĝí˅zĄǙࣷķƩżşyɦƣ˖r˂ŇɠʍUǗ؁̭ΕƄअ©ƁĒ\"],[\"@@ÕÛŷǒÑш͛Ҧ৳وˑøäƔ২֭ࠠܕĬȷƕͻ\"],[\"@@ɫBǡƾɠøǞïPǇ\"],[\"@@̶ĉșĻևuĠȠΌ\\\\\"],[\"@@ȁèĲƺǙ\"]],\"encodeOffsets\":[[[157221,-11751]],[[157984,-11634]],[[154521,-10818]],[[154707,-10260]],[[154142,-9570]],[[153954,-9721]],[[156295,-9174]],[[154734,-8943]],[[147033,-8685]],[[151579,-5966]],[[159701,-6847]],[[150709,-5562]],[[158359,-5563]],[[149524,-4839]],[[155562,-4399]],[[156335,-3208]],[[144360,-9337]],[[156637,-4870]],[[154048,-2725]],[[150598,-2007]],[[153360,-1590]]]},\"properties\":{\"name\":\"Papua New Guinea\",\"childNum\":21}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@βছثНВȷ¡ѭºǩδοċÁĀɹıķɕ֥ГˣʗµÉX¯ºŉX·uĽŢ÷ʷQÅRϟņ͋ǞҹNǯēыÐʱǡʧpdƘ˧ȎʗǕˇĤɩ̲҅ƀŹÁȹŨÚǆʋ«҇ƢĠǅ̍œέ˒ǬŴřèɱ࡛͸UŅñqñEJZĔŘòy˸{zƱ¼]jzêŗǤŴȾÓƘÃzg`Ò¦ĈėİɕŘĿĄV°żĀÚâþDdDÊŽϒ˘ùsƸ̅ņဌ˸̾ɜ๜ʆμŻ˕¼ʹ̿٤øԖ࿮»ӂSN¶ÐKêoexIêcĦòìµǟ\"],\"encodeOffsets\":[[24049,55235]]},\"properties\":{\"name\":\"Poland\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ūɸGŋw\"],[\"@@тÁPś̍ɥ਍jÉ̶ĘŔࡼ¯\"]],\"encodeOffsets\":[[[-66995,18541]],[[-67716,18888]]]},\"properties\":{\"name\":\"Puerto Rico\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ƈȝϛĳЕЃ¡ܗ̯ŋۣԃߋ̉ơӗ͢ĻӴϯ˯˅ߕqϥуɝĆɅŕ̇ȲΉɕĲ˓ôǾŴџ¢̈́άФň͕ĴȮО£ȨӯȚŗťɵ͞ѸϤऌϐوېǲȎȥࠀťŠȂȳ݆͊῭͒͠ǚҨ˾ęLŭɾǫ\"],\"encodeOffsets\":[[133660,43557]]},\"properties\":{\"name\":\"Dem. Rep. Korea\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@мġ˙ăǩĖĐ\"],[\"@@ϼGQÕҙAģŌǔ«\"],[\"@@è͝GÿĢͶÇ\"],[\"@@ǛÖŨ´ħ\"],[\"@@ʻļɒpªū\"],[\"@@ũYlĒľ÷\"],[\"@@έƣٙĮͳõƸͰÉࡠǴmŋĀΏÏǬȖøȖ˨́˯ȃĻĎĘҒҌٸŸ՘ÏߒōÆĢƪіǒĨ˙ؾlɎŮѺÜɧˤş׹ѭĲ֓ȇƧŘũáȉţĭΗiҎԗ̃ԉȦɵŰNУϭң\"]],\"encodeOffsets\":[[[-17603,33658]],[[-26264,38750]],[[-28822,39376]],[[-29328,39450]],[[-27725,39571]],[[-31884,40353]],[[-7583,38072]]]},\"properties\":{\"name\":\"Portugal\",\"childNum\":7,\"cp\":[-8.7440694,39.9251454]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@lÕ\\\\±«{p¥pǉÂîʵĥڧYʻলŷ˞ƺ¬_ïĚñ²_ǖ@ŤwĄđNđňƃâޅjº¹`ė@Õxï¤ä[üYĨhĊp̜ƊƼõÎÍňÛɑŽۅĉřǳIţaίʭɋͥǝȓʑßq¹ËµFåËåµÙCƋúǳHɭțนɾνĲpÂͬМ˾ȨɈ͊Ӣɑ˴ଫӘףЀߕȢȳǜ׵ЌΓӎƃƤƙöíºB|sx̾ঘBцѦޘเ̈ޖVވѿj̅\"],\"encodeOffsets\":[[-59555,-20648]]},\"properties\":{\"name\":\"Paraguay\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@đëì]~ɼɘ D_ƫȝ\"],[\"@@ÐȠɆŮÛÊ×lÏkkNOdÔȺ°Ƭ°ĺņØĤkêi`æ£ÊKjƃķّӏģ\"]],\"encodeOffsets\":[[[35173,32044]],[[35718,32121]]]},\"properties\":{\"name\":\"Palestine\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŨIĿƅŊȥE³ƞɌ¶Ɨ\"],[\"@@°£Ə¢ĠB\"],[\"@@ǒʳóĢŔ\"],[\"@@ËÈÖIć\"],[\"@@ŧemŎƴG]ğ\"]],\"encodeOffsets\":[[[-152905,-18114]],[[-146883,-17018]],[[-142360,-9927]],[[-143437,-9652]],[[-143434,-9124]]]},\"properties\":{\"name\":\"Fr. Polynesia\",\"childNum\":5}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@÷iíkÏ@³RlÓì©Ģ¼XýіȾӨɒƠʀȿ·ͅľЅƱ͓Ƈ½\"],\"encodeOffsets\":[[52499,25198]]},\"properties\":{\"name\":\"Qatar\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĘēŒ¯˲©MÎĦiˢĨƲbƐ£ŚġůΕёï Ǿǡ³ʱধ̧~˳Ǹϫ˵ŮܷƇ׿˱ᓝƐ§ĨƈŊ˗ƈaVǋƾºĘÆlæM^Yáŧ²ū}ųīěgƷŀɯħäƍCvP¶HàNZjƧøĞƲl՗ɴgʀ]R[SeUeE³ÑøȇĘįŒrȒĘŬĨ̤݆ਈ݄ψƮºìæÂEǤāȄLߚÃʹǧТƾȌlȂɈtÖÒ¤zúŘvƪ~̦ėՐۃϪ̥Ƙ˱Ƒ࢕Śů\"],\"encodeOffsets\":[[28890,46542]]},\"properties\":{\"name\":\"Romania\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ýÎɚbƛï\"],[\"@@̢µջ˯˝ɑ}ƱāǦظՄ\"],[\"@@ֻ˝ɋ[ٓӕ̊Ϟ՜̶ƂŎķɤjШȒtŭȧ\"],[\"@@ȭ£ѠήӺƾܫӇ\"],[\"@@ɻËӆ˂ʉȵ\"],[\"@@ǗcǶ̒]˭\"],[\"@@ѱɕŻ¬qǢϲĒΖ̸ƧЁ\"],[\"@@ȥØǬŊĤeéƻ\"],[\"@@ӂறƙ݉ŦϛѢଋݮൣ֑ԠˇÀՃħѿृa˫ֈߋɦĂ͡ů˧űѾףŢсڃȷ҄Ǫׄ×ϔǾΨ˅ئɴیÛࢾŠӼПќ½ҌǐѪҞˌƀ͒¡ưϖ̷͔ΪĨ\"],[\"@@Ļƣ˹~϶Ŧ\"],[\"@@ɠ·С̵ɑǮȕé̂΀̨ĕ\"],[\"@@۲ǙдIɐƿşʷGÏðŕԇFࡹಉÊ̶ϲҞÖ͊ʖ¶O̥ʟʹáǌ ˢ\"],[\"@@IũݥԎѲdyū͸˛\"],[\"@@ĵǒĚÛš\"],[\"@@ƏÿʒьھǦ˯ࠗʁ\"],[\"@@ǣȿƤʌ\"],[\"@@̳ÀűƾӘ±±ǋ\"],[\"@@ަƻƲǩԄĹƅɔÖӝȒ܆ɫ¿Ïሴҝ{ˑ̺äŸóÙ؍ΠïĠǋʺňhȱʔǤϩǔŪʼϵŮܶ°ѮÛƓĩÄĩÈź֢ХĦ৲ŏઊӵāāʬ¶ĿϺu­ŧ׫ŏŁȳىǂˆʣڧ_݃ƼҨȍÛƯ̑w͂ÔƁܹșʆuċƋоǷ˱AƏĨµǕ˅©ɀͷƥ۹̒ۗîϫǬȩϮ߳ŤεġޣOѵҌǊeȂ͚˹Ƿɳǂƹǳ̗lęʃπ͑կϙ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶBȶǜ\"],[\"@@՛˛׹įЅÀĳ϶ѴȎ͊b࢒˙\"],[\"@@͓ъ΢Ȟا\"],[\"@@ܑìНȤвĬࡢőƣʩ\"],[\"@@UǫګIœŪҥvεΦѺŤ୸ѳ\"],[\"@@ʐűƛȹٯˈռä\"],[\"@@ƫɼ૆δ@қख़Ɠ\"],[\"@@ȻëխĚن¸Ťå\"],[\"@@ذģԢʣཡȹӫÖ@Ҝ़\"],[\"@@ٗt݆˄Ԯů؛Ǉ\"],[\"@@ܱňҀȲ˲̹\"],[\"@@ЕĐdŒٚʧǁ\"],[\"@@ϿŷâԸ\"],[\"@@ठěʵͧ׿ɍėԩং۟ঞͅЕŝٕŨĪƕڿŀ࣯W৽ǌʌǶТطǸDǄఉ¯ΩƢÒ΢֜¸ΆǨɊ˨˱ļڒŀıɢಬǢѠá\"],[\"@@Ցµ˒ߎž־˷ߝá\"],[\"@@঄˝Ğ˳༕ä޹Š݃ąતіऎ~\"],[\"@@ؙh˨¼Ͳã\"],[\"@@ԍßǹˆ܂Lyȱ\"],[\"@@ԕʱ੻ɐ͂VǤƼબů\"],[\"@@ͲDĿŷ֙Àͨô\"],[\"@@ǍƟ˕¶ƎϠÂNă\"],[\"@@൘ƄƩሜãƩǱࢣƟધxᅭͰ͐͜ɐǯ\"],[\"@@йiȺϦЂȩȁǑ\"],[\"@@٤Ǖ֜юসɯࡢ@ඤ˩૷У܋ÔχȄǴ͂ՑkğʣޮΡջűСƞกŧӱİӧʵࡍŠ१Ѻ˼niͶπTūǒծƆײèै̱\"],[\"@@țſࠩþÎØॸU\"],[\"@@®ƝҿƪђK\"],[\"@@فWࡐŒɍĹ\"],[\"@@㎅ޡ࣡ʵȌđ۝ʛιêǗǧыZêɫ܍ǳUȵϋÎȖƯӟʕ҅Í஡ƀקđҋΒ݊ǌזϮڞÞүŌޔˤׁƖȎÎ҈ăɰɆٚSϜ˒ۖǊ୮Ȯ֎qɔǮ๨రŢᧂՐ۬ÝϦȏ঩Ё\"],[\"@@࡟O੒ƾȱƭ\"],[\"@@̹ЊìďĹ\"],[\"@@ƇȞđǈըƦǂАC׌ɯٮϸŞ;˾࣬ʟƬĎÔ̪ɀĢΨդʲࢰӮΎƽʶČȘ̹Ķۙɵ˗RνƃșțౝKȓʺÒ˔ɃɖBɒ̛דкη]̣ȎסϗȞ΂ɅŠ}̜͏ͤө੘׉ֲӗƊəÍৡΌᔹɗݡйuŻӴÇĀЃֵеݹ৏ƶŃïǱڷȇӟ˥৅ʼōĆǙ¶őéDǩ·ŋÝsŉLƅTÃ`÷ɫǄɕĄϏ؉ɣŅÅŃÉŻÝÓĕÛş¡ĝĝaǟtΑĝճçý\\\\ō©̓řıoɿÞęGĹ֝ČÙvǻԻWùfĭ°χɐ£ʚʇʅHĩF÷đ®ċĢȕĮŗ`ǥUų[ۭƜયˏϏ_ŗvÙnį\\\\࡟͔zŐďĤiȄ¶SĞdG¬ŏ|ƃȿǃ]܁ɖÉZȩHǏNħfǝĮۛȸɅˇҋˉɷнńŉÞǭ¤ÈÚWºo{șȷʍէɭŵUȇŸ֝dȽĈҗñΉpƳĞĳJýI_»G¥ÄǭŒēˬ९¢ƋƤëXÝUËµw¯J¡ŷàÑ¼¹[ēű͙M̛Ɵ­×DMÇUǱƷûßc¹ԍŇ·ǅTƻ×cĕá£ŷ`mÁÏ}ďyVqpWáǕυµÏgĿñ«mķC©FȷċÿRבВ¤ǶгɷߕĮȱϐ֕ƬͅҊӳȂԃďɣƑࡷXßǼˇX²ȈͣĒʋġqȥοƝᅁᐴିوÁňȞMƶʠ୳̑ǻǏ٥ȹċƅбŎϝƟčɔ΀ˮЛíԛƪƧǉɕ͒ƳĵމNþ͘ϕצұţৣȐ٩ȓ§Ʒᖭ̓͛ʃՃᒁοוÔɃͭҲĉʱÝ}ƃϰ¹΢ȇࢇɯʟȄ˵߷͹κʁࣺ˛ƓϵϓƑѣa̭ƞȷɥʏõÏņӍØѱ̴ѧxͭǝαƨѧڱν࢙ήñЍΑъکψ٣@̏ȒܿȟƱƠ̵èҟσػǥƥșוȩŒֹΣÏՉѪɵiґ։ñˣȖǻˡ́ͣͼƯȒЯǄÂּăږ޷͵caŵ׆ɥҡɁǃȱܓ̍ƛĄÈųƭʿե׵ԌͳžҡƺˢƷ܋ठ৅ځէЇêӋѾˍàǽĊӗǺG|þȬkpţȁKƵŪõfŇÓviSáŉáþ¡tř\\\\ƩȏñĉkyōJÅnknVYƅ¾ÅϿŨõ¼Qșàয¦ĵ´đ¶ɱšş¾Ź®Ӂh»ËųWॿۆ҉Ōˣɼ̗GʓɸӝƮ˂ŜȃèŪ²̈ŽθĘǀːξæÆĥĔƈʺIӡˈŭȖؠx½ŲܖʘćƎƟFăą́sǮĤҡƛżѦҀȶ݈Ʈ͎Ĺɰǅ¤ŮǼǰ\\\\ˉƾ΢Ȳy˚ʥIԗʆɍևȒǱōԽЮګǝхǘѳɻ֦Ȼƈ܋ªýΤɶĐ֍ӄથʿɍ̟¨IrÉĂ¡nqxPȄiȐ}ûÂ÷Òµ´xĚĺp|Vζ÷ʖ]˞ƮĞÈb¼Pɇˈȿņǩ`ƟIÇfÒŀXÆW~tƍ°ȋîĕĄĩƊġäĴE^}př ƻôOn\\\\°t®ŰŖ@g¦åðÁ²GzVpäÈLƢɿĆ͡ƮǇQėR±YµãsħeůÉÍ¹ºlżࣷİŗò®İS²mÒ·ļOǯǐUê|\\\\ƕkǈ̌P¬SpɏĨwà`ıH¢ŜŤŐȤÒɵ̎Ëӈ׼ӲśĠʢɶõƸƀΰiǘƞࠎŁ¦ìϛȦշEΧƸŉʪ׹şཤࡔ఺޺̆ͼ̑˖ৃѶњʊTƮЇȲ˔ϿǠȈƪǿĔĞ͂͘Đࢋঔޠٶեͦօņǵʤʪ̝̐ÂҪĲΠɶטŔþǠֲćRȶ֬ñϚĨYŦ࡮șýĵإÔǚǏԺQiđЎ¼ˁ̟ҘȮᆤı༼пט˯ड़ʅɊ[]þӒˍӰıͤчƛ͏࣯ѵௗșᥟ˞ׁǸ˻»Ď઩ǌȁȰࢇÚ๖׿ʛħلĕӢɯîƷ̵̹Ոߥ٢ĕӀ˩ࣞǃѶŖĀŤĝȔ٧öҹ˼÷ǂ̈Ȟᝂԃʦǎ͘PիӒfȼආѴؠͬ࡮ĕΜƑģŃʪfɖő˚ްիˈΠ࠾ܷΜ׸ĿༀËڤՋঋûՃ˿ֈȑ˖ʛԜù঎ƨȀԞ߬ĆáǸͶsᛶ֘͸ƽ˚Ŏͅľ௪͚ׄE׍íŒЇ֝Ɨ৺x͖ýҴ̮Հæ࣪āࢠ˰ݒĮ˂ɣɫʛՄûƜ̖ӾnώɐٙԖبɌ᪂ʿפʋᄚ̽଴ҹ٦՘ԇbҋњ͋ĖҹĠƗŝ͚঺šĊυeÁɚൊԐ૾તłą๚zાȇȧ֭ץү۲гŅဵ࡞УϝʧÓΏਁٓЙƤɹۃƏ˽êʸŦ΁¹ͿƆևaǡƲǭ४ȣࡦdҸħ;ðĄȔୀκʂΚ׎̐ͅռǂ˦౺Ȍ̐DټёÃׅԈǫॴh૫ƌÜςˤÎ˿զ൳˨ӣHԗůࠓ¬ɑֈ٠ٴ੍ܮӮʹૐʦǣ֖̮ӶҳϽ˳¸ԯആǵֈؚȥԸHŢÌзQ̿ɮ๻ʊͳ̞۶ĺހǑϤĮǻŞѯikĶوƼ৔F૸ʓݲ̻आ¢Ўăމ΃ƅ֋¶ǝծҸƊ̧̽̇ͰĽMƸ֌ɨӭҶ͒Ӥ˫ǆұ¨ҩ˸੡Ȉ^ϰΕʂƆ˴┰Ÿ්Ɣऍϗݔ˥ا̌঴ƄϚǒ࠿ζӍÔͨŒфĽ˨௃ʀΊƞϚő͞ĆΨȠѹ°ÊĐ֒ᑜϲ὞˒হE̴Ǆዎк±ΟǃܖĨWĩᆒ̐ञǵȕȗʼŎsǦࡧ̂ႌيï֛Ĳ¾θശѤ୼Ȇႜ˷༙ʍᘪÉШĝࡡΏસTϮǺ᧮§מǧŵċ֪Fˣ԰ǖʔ̟ʘ|ʏ̑फɘцɑʌОƉڧλᣭ׋}ŷഡЍޭÕӻʑЫm࢛ѿӄº٨ʬ੮೤˄Ѳ_࡚ɒউZҰɰڜßÚĪΚq˓»ƢşظĳհǼǒ£͒ɟɓǁˬħ̧џҌǑϗƠ֞Ғ́ƆໞǔᲄƑΏÕuǽૐɣᑔĉаvřĸҞÕϲȨōЊࢨîࢴʭրĎʢǵЖǴ׬Åଢ̳уǽΘmȞƕۧƛܨćňɫЍñ्̖Ł࣐ҫʤƊɀƩԯÛޚҙٴȑȂÐɞǻ࡜мԲֶ࢈Я࡜ܚȈҀT༌УăĀЂĊͩ¸ˆǲҞΰƹٲ ɕ̩ͦÈۢȪࡗwƔϮƔఔúɫʰ੆ƛ⇈ɻcû௫ԙĻŀÇᒌĒ׽̍ĮǊЅöCʇ׉]ŀȗݒĦৄѨሪƍѠɥ߿čãĕൎƝхʙܶżԬÿєɛˣغů↨ɒଐ­ૄȽվЗɷσ঴ɝŀяɲĭϡϋ׮̮{ЌՈȜࢊĒᴴǷࢊȔϒϥࡐǉʤʙެϪȂ΍ҎΟ˜КᚔʅƊļᐜ©ᬐՕؐɳ@ᾕకϵ٫Īܱ̪ҏג¡ƼřŻÙࡏƤ౗ɵ౎ȄʜǗǭĵઊƬLˋɈŝ̜ïƺŪŸē̎ӿʓ½ʬǯ¤ŪԄͥŇśʾˑϙ̭ໟɺ ƶ˅IŖǹᕩإݟěЯʹɱÀ¨ƁїŧEėງՃɍЁ̱ĐًѼࣷmއƕߡҧŗļǺь੣͗ŋɉέǾΉƍlð͡͇ȷûЕ्ܕƱ̷β̟ɚȚӔƃϑεXЛŌŷˬâϣʍǁǧlǱƔΈʒ̯ťȕϋƝ̡ӽ͎سЙȣ܏tו̑șͽƴջρĞ۹ˡɯľŘƅĭЫ͛ӕ੍ڭċȏΊſैɇ̚ЫှÅОάଆܮԄņƨŭ˂ԸhǺȄԞU޼є՘Ԟྀࡲ˄˄ൢϚſĠϞˌǛİͺۦ͠ƬԢąǬÖ࠽ɐࣱŹˁևȪǇƟŇȕŒϳൃރӽīǦ͚ӵÍѦ߀ٍƥ̧ǮळƧԍ͓Ľ଱࠱صʱ֫җťʯےáǄɓםvϓşˇŲ˫UҗʍлĖțĵٕǣǨड़Šދ˴ܩÇƸ¾ࡳǶӝŝŞţ΁­ƅȄIȥġЁƀرūࠏǂЧʉеȲጥԣŉຑ޽˿Щ຅܉ࠃۛᎯ৑IǯԀůߒßۇξd]̢ѴĐ˝ƷжŹӥͳה¶Ӟ̘şˍʛǜZȾ˪ή֎ė͚ìֱּ࠘ʭǉɷ˻ÔΔȹĻͻ̒ɏıɏηʧ΋ۍĔ׽ƋƝ°˅࣓̅೫௻Ƚћշ؋ಗૣɣīر܇षӟ܍ɁϙƮͽPJβωǿÔǨٽ֧ϗ~ŀőŭȃ\"],[\"@@ǵÕࣇè੾Q\"],[\"@@ЅΙ୚˂նɥ׎½ƖˍӑƇ࿏ŵ೽Hෟǹჸା֊ÿźƪЖƭ\"],[\"@@ૺű߃O͵Ƃ\"],[\"@@ળŴŭǐᓘŁवȁ\"],[\"@@ો܂ĨЊų\"],[\"@@٧|ՀŒŨƍ\"],[\"@@mͯߎʖ௸ɳ͉ϟ՝}ݚ˧ౣƣᝋʼѕک̌७ĀྔԐʜÇ፤ņ\"],[\"@@зì˞ÒƚŽ\"],[\"@@ûɻথ`ǴɈࢮT\"],[\"@@ফzіǄ࠼œ˥é\"],[\"@@Խɏ˰ᆲųܛqχǏ\"],[\"@@ԓFÆňҎō\"],[\"@@ࡈ¡ȨơࠓŎೃˋƟļࣃᒌȲ\"],[\"@@ûǽࡱǕٯÜՅÁµ͖ᓚd\"],[\"@@நȩᝣ˫ƖǇਭåƀƂݷ±̅İ੄ȔৈYƂʲࢄĘ\"],[\"@@ޭĴŰࣀUɅď\"],[\"@@ࢿ¤ୈĖˇŹ\"],[\"@@ๆįञȱීŃ৷ĢԻŐ֤ȴ\"],[\"@@ʶǭէÇࣙɄ۶ĐӖÝ\"],[\"@@ٿźᇮ̀ՔɟჁș\"],[\"@@˿Ý૓Ěඔ{\"],[\"@@૾ʿ܁ȑɰəᵥɛᅋ̌ศζ֛UĲüᏘͰՠTؐǣ\"],[\"@@وŅף§õǕႭfȿļጀȢ\"],[\"@@ಛÐഔP·ß\"],[\"@@ƉĦॆvĂāࢽ\"]],\"encodeOffsets\":[[[150236,44794]],[[149717,45566]],[[152166,46406]],[[153281,46738]],[[155651,48023]],[[158526,50496]],[[159664,51510]],[[160159,51874]],[[146188,55700]],[[140471,56423]],[[141252,56415]],[[21746,56591]],[[170650,56156]],[[154205,60436]],[[167563,60010]],[[36676,66747]],[[71702,68099]],[[-184113,70595]],[[51472,70847]],[[165343,70555]],[[173262,71251]],[[61902,71614]],[[54174,73078]],[[183155,72527]],[[141271,73224]],[[-183169,73295]],[[79496,74027]],[[81410,74468]],[[76453,74623]],[[123148,74844]],[[56648,75068]],[[72371,74850]],[[145598,75670]],[[85555,75850]],[[144395,75776]],[[116109,76187]],[[88733,76781]],[[84145,77230]],[[150319,77180]],[[139212,77220]],[[143410,77649]],[[98850,78109]],[[115178,78460]],[[152730,78500]],[[69392,78068]],[[98597,78876]],[[91663,79042]],[[133824,43318]],[[110281,80007]],[[105354,81157]],[[78079,81563]],[[94908,81598]],[[52644,81863]],[[61122,81875]],[[100019,82083]],[[51254,81997]],[[58449,82280]],[[54806,82110]],[[59348,82047]],[[55722,82405]],[[48581,82795]],[[63660,82775]],[[51485,82870]],[[81948,82789]],[[62609,82894]],[[56033,83063]],[[60030,82987]],[[64895,82637]],[[93765,83089]],[[98844,83022]],[[59198,83504]],[[65179,83568]],[[59695,83677]]]},\"properties\":{\"name\":\"Russia\",\"childNum\":73}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@aM¡Ýľƅà{ª½¨ĕÂӣkĹuÕÇ¡PµSÁoEŧòʓēƿÞ¿̓ƛßʵ]ʍǴóĽĵîcȢɊǤÆЌ͊˨Ⱦ¬Ėœΰͪ¬X¶EA\"],\"encodeOffsets\":[[31243,-1092]]},\"properties\":{\"name\":\"Rwanda\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÔôĈț̙ǪºȊńʋ\"],[\"@@ݶęȨϧ٬T̮իWƟφș¿¯Ȗɍضѥš`Ǧ̵·ǩĽVѶࡱĞĻ¸ÿâãľǍk´QÐ@îløjÐÖNďȗɒ­pǩߴ३ᒤʽèèϤם֏။ᠽ࠽ុΑܵΥӽשř˱ʣƑƕNȻʾ৉͙ŀਙđлǈȑƁu֛̫ˉыࣂҙϚѧژЃ֭ࣞі̑ľϝӬƵ˰®Ǭƅ̦ØװԇऴқЊ́Ě̥ѺîŠį˦࿿ᘲϩĄćÅ˜઎लŷǶżǌŞĮƠĤƒª׶ňlbÀŒäƘbdhdǌĂİ´сѐ̽̈ūŘɎÄɺÎԲžɜÈӲŮZŰİȊ˰£˖¡˼±ĠഄڿෘਙߊսൠŉƦ\"]],\"encodeOffsets\":[[[42996,17117]],[[47649,29795]]]},\"properties\":{\"name\":\"Saudi Arabia\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@²·˦БAÍęÄSĹªܣɺધड़ۃƿƳsWwWuµmi[ЃŃȡőµƯƋIá_ĝh©C[gŻFÇùƧt˟̇޹ŝȕlǉpǟ¬ЗͯఽϣőҷڳƱߝƇıǗŒȑȅϽȝؕǥü̘³ˎٵӄ³ܢłԤБL^ǵ֑EɢʝèԷ৏ઑЁËكҠͯǳōʝбƥŕɥڛFƙɰڳXΑŉةּ½ȦիÝŧɿѥɇݙ͓ȅԟŴÍʤżȎpМډआÀΨ˥ȠUΈĝàĵӾΣdđĦ͸ҐĹЂζ̦Ɓ͜ʐƠɘτD̸ƞƜܮfRṴ@о࠾NBဲᢴ@ᢲAƘPŞǚð¯©ŷ⯀B\"],\"encodeOffsets\":[[37757,22525]]},\"properties\":{\"name\":\"Sudan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Iޓĳď֡Mʁҋݼ͟ƊʃլӅɰګʆ̫ƷƱǥǝȧȟɓɉǟǛǛǗȟȡơơá³Яŀ֋ƣǗƽ˳ʂɁĿͩĞˁʛåŒƝ@ßǰˁŬѣԖǩtȳȁлĨʥƳȡvͻʜ͓϶ɑԪՉ̄ǥ͘®ưࣩږćŊhɂ̇ˢҽżŧ͔̾ȆɈݚʀѦŨլÞ¾ȥتֻΒŊڴWƚɯڜEŖɦвƦŎʞͰǴلҟЂÌ৐઒çԸɡʞ֒F]ǶВKŁԣ´ܡٶӃ´ˍû̗Ǧ\"],\"encodeOffsets\":[[34896,9689]]},\"properties\":{\"name\":\"S. Sudan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¬̍ǬɃ¸˥ÿȯȈˉǒ®ȶΫBҋࡓÃҁǊŉkŦի˯BʅB܅HƵùǑĉɝ«ʯhć]ƥÙĕgŕb¯S£ƞˊìŽĘũŉgДĪøۄFjƘѸÒŖƈݼˏΜƠųŖέםʸˍíçşࢫBǣˊŲŖƣ̓ՖƫöĉÝùĔ͜Ɩʮ̺ɮφĔânưĜǞ˞ЄٸǊ׆ąδεĦr̆ħʰХ̶υ˜ȯņã\"],\"encodeOffsets\":[[-12575,15165]]},\"properties\":{\"name\":\"Senegal\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ˍKƘĸŶī\"],\"encodeOffsets\":[[106465,1364]]},\"properties\":{\"name\":\"Singapore\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ͳ´ŻːVѺїʋēڧѸصƠZŀͯސµ\"],\"encodeOffsets\":[[-37993,-55363]]},\"properties\":{\"name\":\"S. Geo. and S. Sandw. Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ùMÚĊ`û\"],\"encodeOffsets\":[[-5828,-16381]]},\"properties\":{\"name\":\"Saint Helena\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@őaϧːӺʭ\"],[\"@@ȕÿĥÈȜļĠă\"],[\"@@͞Çɦ̳ӱĘȽŶ§ǢǉVĺΈƵ\"],[\"@@NŧŧôˢƸɭ\"],[\"@@ȂƇ͔X϶χƛÅ܅ƒǅʘ\\\\Ɔŀ\"],[\"@@ȪŧʫºÂî\"],[\"@@ŷ¤þèĊÿ\"],[\"@@ƛ«yƞǐ|Fŭ\"],[\"@@ƩŰƖŨTʗ\"],[\"@@ȼʡ«ƿǶƋǬձԃծµΤĽƖƆ¸\"],[\"@@ŔɝßėșƔ}ƨɋÁíÐɰʢɮɵ\"],[\"@@ǳĀÆŬƌÕ]ƕ\"],[\"@@ƩǺ¦ŒȼűķǙ\"],[\"@@޻дУиɶ¹הΥΌʡǩ\"],[\"@@ƋP¾ĮĎĽ\"],[\"@@ā˷ĐկּӠɇƌɥʚƛ\"]],\"encodeOffsets\":[[[164431,-12081]],[[170121,-11015]],[[165597,-10636]],[[165425,-9856]],[[163585,-9495]],[[164013,-9211]],[[163010,-9342]],[[161903,-8892]],[[161167,-8922]],[[164608,-8513]],[[161550,-8439]],[[160944,-8302]],[[160449,-8113]],[[163717,-8739]],[[159580,-7267]],[[161267,-7506]]]},\"properties\":{\"name\":\"Solomon Is.\",\"childNum\":16}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ΧŔ˲ÈĒ¯[ū\"],[\"@@ÚăIy½śFwh[ĤmĬ̷ƩʋÅt[R¤UG¾ĒĴ^ÞUE{ţĻǯįÝʽȗȃ͝ʱȩ˛ࠓЖL̰ǽŹĒė˜ǉÎĽǺǀKǈǤʍ«qɢŮȝƘǸjĴǌǠĢǔ˦ŊǌʊmȚİ՘HÌer«Œśʐ͵\"]],\"encodeOffsets\":[[[-12826,7615]],[[-11016,9611]]]},\"properties\":{\"name\":\"Sierra Leone\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȰԞ͡P]N¹^§ErŐÊŀƈĝĊ`øIÐ£byÇʕű˹ىĐƤćક͂ʓƪ Ɩт˴uŰǰt\"],\"encodeOffsets\":[[-91507,14762]]},\"properties\":{\"name\":\"El Salvador\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@įehɼĈɕ\"],\"encodeOffsets\":[[-57617,47963]]},\"properties\":{\"name\":\"St. Pierre and Miquelon\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŝ¯©ƊȀƬÀƉ÷Ļ\"],[\"@@ýìĄRŋ\"]],\"encodeOffsets\":[[[6820,124]],[[7602,1606]]]},\"properties\":{\"name\":\"São Tomé and Principe\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@tƱ­ăĿƣ_ŧcĳO³»ĕũɃőıAMWQBqèŻR¥ ¨U¤uGÅQ×Pć¡·U¡̃ȏĪmuĕsyoQÄm®á¶¿ ±K¿O÷ùϳČȅĂбۈėѲ˿b΁תǪӈÑŸǦƜ͌|ĸƨğŞľǴȌώؠě˴ƻWǌɘþۄFټƱuʱͱ֓ňځˈΥ\"],\"encodeOffsets\":[[-55331,3717]]},\"properties\":{\"name\":\"Suriname\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@]œƃÿƿŷįWƍ̩É˅Ƕ߱sſș͏ů˙Ü۫ȇÉǳ߱cԫȤɿ͌òǲƶȰԼ ˞ƪÚǊ֠Ɉˈģʘǖ˨ȍcƗʨoʲǢьÏǰĔҺM͌ǝϠŅÆQ\"],\"encodeOffsets\":[[23080,50251]]},\"properties\":{\"name\":\"Slovakia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@õręVǷŷйǭaJàĿoĹ̿ŇÞÕÏãPZćuŋTſ¤ƉkťĀ·âmLiyãíµqЭ«ʧöɢÜYòƗĤÁǂùKkZOnN~¾¦ÌfrEhǯkĘƎĈØ\\\\j¶܌ĵ̀ǦࣄÒŖƼǆKȜ̛\"],\"encodeOffsets\":[[16913,47616]]},\"properties\":{\"name\":\"Slovenia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@će˚Ԧٶзࢯ\"],[\"@@əŇĀʷٗБŞƎűЊͶɰ̨îƨã\"],[\"@@Ïµ¤Įǒeƥ\"],[\"@@ࢭÍכłūɝׁǃūǕ´Ǝǉλˇٍ͎̃ԃᅿ׃ʙƳŴčʗęɛĈŌʋǟćΣLȈɳɑ̭úƵɥÇůĸܿΆƑʜ®ݮӁİɥࡋͯԄɱʇવϣٛc׬ťɫ·@޷ʫړѭӭ࢛wŇ̑±ƽŧłʯƗŋઋ^ô˲хҖˤuŧƪǜXtƒϱʐࠅ৲eȆƵzďԶ¤øǊêŃƠbž̨įʬڰўḔʙҪΌ¶Ƥʖ؋̴Ůӄʭࡌƨʰ԰ͺΊÚَ»ƲƆÁʔΫİۤ؂Â۠߆ƪ»Ƹ࠘ӆɵ̸րЀҔǬӼś͘ӸඖǗ͆вșƠь`ୀџܚŹڈ΍ƹгɼýʙ̈ˋʍҷϤϓ\"]],\"encodeOffsets\":[[[16926,57642]],[[19535,59224]],[[19617,59313]],[[24736,67385]]]},\"properties\":{\"name\":\"Sweden\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ħ»eɛÄȧNˍóz}MwţkǳZŏǹGɯ^Ǐ´ǯłĿǔ¯ļÛNYlR̎ʈζĴŚņô ZGьȇvX\"],\"encodeOffsets\":[[32715,-26580]]},\"properties\":{\"name\":\"Swaziland\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@DýƅƪÔ¦îő\"],\"encodeOffsets\":[[56874,-4805]]},\"properties\":{\"name\":\"Seychelles\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ӏї̹éĵŋ¶رƅܷǩ˷ᇳࢳ࿥ࢱϑÐӫ̈łǸМƔź£Ɩ͈òñðʴʞãǰƥÊ°Ƅ΃yÕڔśŶÚɸ®ÊØMƈßvDǌƜzƘɖÀJ|ēǎR¤¨ǐÜ~rĲSƒ±æ¥̶SôǒÆƾ¨ʈĜӘǫŠDǜ]ȾBŨlƺˤòׄɮ঴¸Ƣ¤ĜêR_jIķ\"],\"encodeOffsets\":[[43376,38000]]},\"properties\":{\"name\":\"Syria\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǂ·ǇFþ\"],\"encodeOffsets\":[[-74068,22376]]},\"properties\":{\"name\":\"Turks and Caicos Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@QṳܭeƝƛC̷ɗσʏƟƂ͛ε̥ĺЁͷҏĒĥΤcĶӽĞßV·˦ȟ¿Χ̭Þ؇̓ó̓އݑαɹ୕ǁÏđȈƱқԡޑ½ܩεȩ˄ƕƵΝƧБbÎɜη٨ڃլ̗Шɢʎஊx͇̌ťʖđϸªؚȟւ͕Ѩǻ²ƱBōư˛ϒčΰµȸޜଶच঄ɖᠶȔΐ͘hȆΥӌǟఊࡊϖ←ႱỨལ\"],\"encodeOffsets\":[[24556,19965]]},\"properties\":{\"name\":\"Chad\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@řԛӈ͝²ՓǸʽrႫÿIȺוŽßλŃϙ̨ǯͰĞцœǊƾڸˁͼĮüҢʗÄĠŠßĮլϻ͎Ą̈ßĂҾƉ΄\"],\"encodeOffsets\":[[923,11258]]},\"properties\":{\"name\":\"Togo\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĥŁt͠ĨåuƷ\"],[\"@@ĝƑmŜŌv\"],[\"@@ĿOqƞŲƍ\"],[\"@@O¹tWƬŠǞǩĹΟĬǟזIT½oƅö̍ȩ҇FòĵNťȡҹ Ų½ÀfȸȂŢĀRRļÌôŨ´eÔòôÈ MǢƁĚ½ĀgÄō_hL̸ǤĠ¶ì¨ÂhbvFà^ĸIŢƎÅĚk¨pĊđŮȑńơĘįʾȥÜƉ³ȉ_ǉNȣÎƳȒʱĐÉƴ±Ú¥MƃȊŉfCÏoćĿț@ŇïZğoõsɅk»­·ã¯ĉ£»k[S±«­ʛǜೡăʑǏ̧ҩǭsƎݝɌȳe˱ǔ͏˷и­ÿףҀ޿\\\\Äٺ̟Ŗ̯éȵȭČǕŁ̗rѧە།öࢯӦpżחŞƉäĮȫɠ࢓ę®·ɖąTwȊăƧɚΉԂ˝ЖJԔԻȑΕǏĹňωɩōŒÒІƯFĳǸ΅øëŐţȭΡκrȖƕĨŘȧbăȸƻČuƜəƠíǒĽôƃƓĭ¢ÁҖϰ஠°ЄζώΦ֨ǭ٤ɿМ\\\\ּӉզ̱ԮUȒ̮ƐֶȎŌÐƞ«Æƥñȅժ؛ے×вɑȒ̺ÐÒܺǖʐ̚»ҜìƄ˜Ί¨wǴɘƜĊÄQ¤Ĵ¿\"]],\"encodeOffsets\":[[[100771,8092]],[[102473,9817]],[[104886,12277]],[[102526,20805]]]},\"properties\":{\"name\":\"Thailand\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĕÃÏÔMh^@Î_ĈW\"],[\"@@̟ɝՏȔлƳF}åÇ·ly§ù¬ʩৢÀʢǉ֞Ǭk\\\\yWCȔ± ũɜØÀ§ê«ΈƮЀqłZĐ¨~êdƊWJ©{ƗǖɕğĩĘȹȌÉɄĶ҆ǗèܟȌǹȑŹ_TċÒÑʻr÷E±ΗćăPuløÌb[ÁX©`ĽtćQƟ­˅šȧȧ࠯˧œŰćʂŲڂ}pÃAćsÏIb®ɄÝŘѧĬˋ̅ǟŵ]²ķGč¿çÍœnƏǏ_őÑÇkó~ĝ]é»µ¥Qí¨ȁƔ£RuK}Ua[]Y·T­Sʁķó£]©oo£RŧÓġnĻüÙĞÔ`ȰҊ،əɘϢοÊŘʑîÌȾʘƀشíƨʪȖÎÁŤƖ˻Þը~Ë̴Ŵǚ̚ġׂ͆̌ʿ͉˳ʀƷʲ\"]],\"encodeOffsets\":[[[72361,40812]],[[72662,41205]]]},\"properties\":{\"name\":\"Tajikistan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¥GקȌǭˉɃIǵQřŕ½ÕƯщŃ¯ñ˝Ǉˑŗ؛ƓƗĥțÝĹ¹ƛā͉íǿǬϿ¬ɵǔçSSȼċĠºǶýϞٹKɹ˚ԝʒŹɐСƢүcށʶƇȲمƙƙݟ{ЙɯǙʵڇŃചƏɔ̱ŎƯÛầ̰½ŋĸ^Ȯнà¢ǵșɾÏ̂Ǯ՞ǜǵЄKɈƛѐµŢ̬fǖԝϖʓԊ՝oǍıŽɝѕ̙ӤӀ̰ࣄǀ؞̵Ӥ֙Ҙt࢔·ĎòŻю˜ɢѰÈǸʢϐǁ˓ˢ˚ĦĮٞϣՌĥȧɒƛĿ\\\\̟̬ƭڎɈò΀ƵӤय઀ۅҞƷબا̞LՔɏãǛ]ƽAşXġ\"],\"encodeOffsets\":[[68119,38245]]},\"properties\":{\"name\":\"Turkmenistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@΄ŶƋȧȷò\"],[\"@@ěʤŞp¤ŮǱU]ĢɌʜǠÔਨĮ̆Ŧˤĝ͋ʓ౏һ˷ȣ\"],[\"@@ÇƟÓŜŔ\"]],\"encodeOffsets\":[[[127014,-9565]],[[128070,-9740]],[[128662,-8335]]]},\"properties\":{\"name\":\"Timor-Leste\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@êßőǥƀǜ¿\"],[\"@@īAĎÚ^×\"]],\"encodeOffsets\":[[[-179365,-21677]],[[-178128,-19086]]]},\"properties\":{\"name\":\"Tonga\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݥÅ΀ǘlˮơĬ؞ĺĭƝl҇\"],\"encodeOffsets\":[[-62476,10378]]},\"properties\":{\"name\":\"Trinidad and Tobago\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȡbpŴɮÅ»ď\"],[\"@@ŻÑŎŜnÉ\"],[\"@@ƇȅĐ֯ſǟŅŽ́ƃʛ२ÁȼĭϜׯЄȃјȡİ˽Ҟiؚ̦պȶĘèĴÛϜ״šŶͦ˄qĔतͺŴOƣĴ˒£ĆΣĴ¥բ˺ÔǕձחĪʍΎɅĮͥίҿӓͯÍȉɌ˟΄TƥȢĦʤˉ¯¹ʪÉCuǅOËKɇäıD©}¹ŭËǃõƍëƭû¯¹ƍûŏǋǛ§\"]],\"encodeOffsets\":[[[11221,34532]],[[11549,35588]],[[10522,32446]]]},\"properties\":{\"name\":\"Tunisia\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʩ@ɀĐªď\"],[\"@@N£ʂ͙ŷȥĆ̗ԼïД˱¤«ȕĲṶ̈̄̅ȾғvϙŶ©ȧΩ͈ǓaɳȄŧ{ůp½PÁFǡıÛ¡JÎNŴa hďXƩùƇHӫŠŽƋ SėĥƯķągĸ iL^Qěéơ£঳·ɉõιƷˣñƹŧkȽAǛ^şCӗǬʇěƽ§ǑÅóğHŝRķEã¦²ƑıT}qÛ§ǏQ£Ċȉɕ¿yƗũÅ¡ĕuCƇà×Nçͦ͆̊ŝɄտ˯׃ȰࡑՓݳūΕŰ̗֛̐ɠשÄǕԃٍħϹƘɇ֑͠ĆʇƫÆİՋҪĴȦǔࠕ©ŲȠϻдƀÊRɈ߉ʢŴ̪ȞʱЂĮȥ~ťȒɂƬǗØżƟƪǼɎډçWĐäΞҴΈҠ²ǆŕɆRĶ¬ĭĎŤĬowĵ࢜jȁŦƞĆݠŊءƬʄᄚħǠǲ܊Έࣚʎ଴½ɌĚŰŗƦƋɖāв¢̖΁̺öʎƯ૆ɓ࢜ƶ۶ũیʦ˦ƌĄĀǈà}QĒÂҒ±ĎĴpXbPÚNÔM]ÑîsŴĩüng}mXy¬Ȓ\"],[\"@@ҐnƸΑܠ˗čȅڅÔ֡ěȭʉУǃӍΟ¨ȪҐʾֽ_ÉĮʘȒAʆʚƎǘɕĬîŶtÐ~¨dɨvêƶd¨b¨[ưŏ\"]],\"encodeOffsets\":[[[26594,41100]],[[44476,42144]],[[28135,42954]]]},\"properties\":{\"name\":\"Turkey\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĝʮʌǏ˟\"],[\"@@ÜǳûÇʣʀńϚǀϝ\"],[\"@@īҍđÚvψǈl\"],[\"@@Ḯ႗ϝപ৏ΕୃÎɗ֠׉ɏгCɧŢsZǕŗεŮнǄȿìڵبϵЋ̙ƟûۡɉзȷӑĴǏʉƷāƙͥŦ֡ŝī_¾ýÒƝêŁDŻŉÉgũfȡRȉGmĬÎĭ¬ƓɖºʎćҪȽђ˙Ȥęƥ߿ɚƏîہɦqĦhËjŧMįĔěŶć ɱIĝ¼ÛÞ½öğʀ˃զÿɎčƔęĺŧĦƍĤõÚĳȈ¥äŢuŮVºĘǄV¬YÔ©ŶǙѢeìDÂà˶A ˆKȔŰϠպ͈͠jƄ}ŎÑPėõd¹rmfQ¨¤ň£¬dzüǀhvFÂp¸T OÈvÖlĺWĊÞKͼ§Ė©¾ß|ĽƆÞN¢bTHŸXÎÊZ^GlG౶@ಀ@\"]],\"encodeOffsets\":[[[40665,-8168]],[[40445,-6322]],[[40822,-5023]],[[34717,-1026]]]},\"properties\":{\"name\":\"Tanzania\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@BµF«WίͩĕŔȽ«ŠతǼʹRː઺਎ÛȎϓƼİ͢ûǎŸ̰Ëè˂ʜͪĝɂŀ˴ʁǘƾ֌ƤаĿâ´ƢƢȠȢƀ˥®gk³ĒãłHǋP¯ǍϪַm¿æ̗ZǙAţƫЋˇǝÑƥȿəǽγধ౿@౷@iF]JÉYÍÕeáNSG\"],\"encodeOffsets\":[[31243,-1092]]},\"properties\":{\"name\":\"Uganda\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ś£ӯĒ¯Įцƛ\"],[\"@@֝aؽ̡ȡ¤؛śڿѥɠƤ¥Ɗ͉ɁƢЩκ͓״Řͼ¹Ƴ˟ѭ¹ͯþ͓ʝԯåһ˫ϫƔĖҜ࢟ʲঀҘÏŲƏȑİ؍ûթǖƪŰϟľڲáǼŠ҃vʇӐĨҿ˹^ĦƇůԙÛӝֻӹŧÞϱřĢƏ¤Ʊaˡħĥj]ol˱ªő°ėĔ¬^Ǆh^°mþÐÐĘ¶¾¸TîĢĊÒrÞ¤¿Ħ[ÖEÀǀÌE^eHŁhEȠÞ͈ēTǔd²ǧĬVðPČq¸ʱŖĭˠˏǔSЌםƶéEړˬˏę˟@­`ǧýkƩ}ɻȥɇsȁȋkСƽͳǨߙÄȁKǥĂÁFəŝěƌƽrˡɰķCVƎŸİĀǀŔƄ^ʸRšø³̰¶Êˤʘ֦ДɖĲĸHðćǊČÂγπ§ǸþĮîGÖ[ðxLŰÖźĢèþத²ࠨŷƮaĸNÌQżŽͦqTāƆĪ֢}Êg¤ïcKĲĜàl¨Tx¢vDȴȵۄĄʐǡƶæiªSÄ¼yÄ¨þìŀôæú¶ŔĀȦHņ°ȒFǄM̠§ˀɎદ֎ӃɵďþΣ܌©ȼƇɼ֥ѴцǗڬǞԾЭǲŎֈȑɎԘʅʦJz˙Ρȱˊƽǯ[ŭǻǆ£ĺɯƭ͍݇ѿȵŻѥ\"]],\"encodeOffsets\":[[[32781,47313]],[[39132,48222]]]},\"properties\":{\"name\":\"Ukraine\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@½ɤĄĴĤ¾öJÌ´Õ˴mxfÈĸʎΦ˹Ά͝gŻ\\\\óŌTȸǲrNs͒͹è²ϖǥ̵̰Ϫǝƈ̃А˫õëăęíéó·{g¿@ПƊñ£«Ï¿Ɨǩțŋ͏ʑ؝ə٫ƂӛĿޝϖօqӏӄؘʀʎŘǆĂàŴHÖÂYÈjÊGÄyÀlªŀĔìǆjàŠȄrücƖÚà\"],\"encodeOffsets\":[[-59198,-31599]]},\"properties\":{\"name\":\"Uruguay\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʥ¸ƕ֮ȔɞWɘՐɿͨЁٷљ\"],[\"@@Ľ_ÝžƜOō\"],[\"@@ǬhʎǍΙŷÑǒǽŮĦðĊđ\"],[\"@@т»ŭĉα´ÞĒ\"],[\"@@ƐűЋXƍɢʼĮƎȵ\"],[\"@@ȣmƱŎǮƴȒGiʋ\"],[\"@@ýMǨ¤ĩ\"],[\"@@Ǖƿ˖ͤĿǣ\"],[\"@@ș֊`͂Ǻࢋ\"],[\"@@b×ɡժɀӑ\"],[\"@@ǳĠŌèş\"],[\"@@ǫU͊ČƝõ\"],[\"@@ıkƂĘë\"],[\"@@¨ÕůJĽŮȆá\"],[\"@@ǩĄưZzĝ\"],[\"@@˪©ɓ»ÕĦ\"],[\"@@ũeź¶Ьˏãǫ\"],[\"@@įŵŦǼuÅ\"],[\"@@ÏÃ֬Şઓ΁ۑÓŖǮʲņߖÔ̐Ɗȣƕ\"],[\"@@ɉlǈĢÂō\"],[\"@@ˍcǶĊĘå\"],[\"@@ĕmĪƺSƋ\"],[\"@@ȋĦƌĦĽ\"],[\"@@ĭpŌþÿ\"],[\"@@Ǆȝ̝ʪĨƆð÷ŻÅľÓ\"],[\"@@úśüķ٦ŕŨåˤúĴXΠ»˰ŏðƃÈ@˾tԲȳ̀ŖǠNÍૼœࣞʴՔȯҊǳ҈ǱࡪΓӨȫǎãǮ̙ȌˊHŪΗ̦ŬĹĻƫ֢ʣ̲ƝÈɛ̆ౙ©ą̗܋Ӄ̽ɱϞʧɂ@ϸǶϼǶЖŨپĲࣘ͐ɐƈÅÔöę̢Ɯ¼Ƃ´ŀɘNܦEٶ@ՒԪ̰ȎΘʮͼǖȠ|ĊJᥬFǄʄϴgӌՔʐڬٞيǊĨǷלŔήɛJଗ̴ĽÈίȰGŚ˻ǡŷկĉǽǉāĲʣJçȽɻæ¦Țϵӫʛ÷ðÇđ{ĨŽȅƁêǵõҭבăȳǺǝηʕʶđˀЅΦÎȩɞŎYŌį|ʅשţưϽȋhɌĹÃĳĪŏΓ୵ÿࢿ҅Ĭʮĉǎ˭˱͕ʖŇěԣ^Ǣؕ࠭Ƈ©¶ǐՃ̂Đʦ̊ǎ˝ŷƽǅǐҡʮ˅ĉƽŰƑݩੱȸˆҲǇdO͠ǉçǵƀBƐȺtǑŐŅ£ƢŦƉČǎŊčĠêļɸ¼ŅŌĎïØˋə­æ÷ƭųŦţŋ½ƐבʃȲR×˞ϙѵʬmćģŸșǞКȕʏYȻȐJڂϵãǽůNԱОҾзȴćǷř|«ĥʭȚЊϟį»ȗȘԳĜӠſƺɵШ`Ϻࣿ΍۸ƹƢ̣˟ƔCŏķ×˧čƥǶPɫրZ[ɻȖɨĂį]ǑͱʗˇóŖƏďʡĆѶɏɟɻʓƐĂŉȘëʎ¤Ă­ßýܙȫĭņǡ̷ȯƫ́sȖ¹ɏͣLλǋ̑Еƈ¥ɧѻ̇ŅnOţΟƕɫXƈ÷ėœȇƈĞțΙ˱ ùǋȽìMǥƭþõŹÃ×ͭɢࡑ؎વ½ǵň̷ŹɶF̄ñƫJȞűƮǿזೕÛࠋ̝ԓՁûsƠǐơĔɁ϶̍ŶȱюŊǔǯœvΆȕĥǕǰɯτʸ̨ɧĎÄƽōÉčŘǈ࢔ࢗ࢐̋ƬɟÕƁ޻ȑāò@ÚĊëİ˓ȸÔƒŵĵחȜ˦NőòߍŹǺüWŜơġǗǏxČƣŇ͑Ǻ¼ȃ͸Ľ˝٧¤ΓÏɣƯҋǠǥùåřȦģπŦÖ±ųğƸēȘŤ ȏ̯ǙפΕŝƻãÄşčÇǴ׹̀ĘǛƅșƕǆ̹ƏҏƂŞ|ćȸɟQ͇ʀȯŗ¨ęƩޏȆյ­]Ɋ£ʓܳʯȞƐɃAǞɿŔ˧͕Ϳ߯ЍȊŦοǇĪȀɁɉĭćäÅȏˉ§`éĚĝ̝ůŤƕų˻ˡňÚƛǪ¥ÍɩĴЙʐѱȕ÷ปӚ̉Ԣ£ЮړټϩܖֻԂۡẴĳɷ҉ɵǽ߉͚ͥʔЋࠀঙڰʡˊ๟XEϙᛟIẗসĢǨ፹Ƴ˵٘ԧΪˣlăɰՙĂϱʴܿ¬ƏĞ[ҘǕòǺ͑ɂӿռÐѪӳ̚ĕˮ®Ɍ̀ˏ˃МÒ ڐ¤ܱöŅˋΉȔÇÇúǪڗװōܲѱԂʈࣶϽଔ݈͠Ȃཔ»դ٨ÅȵİԛRz˚Ċơ´ȒȉǠɨĎɥÔwåȥעʉˆ¡΀ؠǱࡄāǐÂĺɋĹţ°ˉ΁ǼlŧOfâѠφţʳĈˍǅÙ»ĲǗǓ˜ÿɖ¡ΎƈȐɳŰĞŒɕƠƢaƐ£ĞĽb¸ÇŞ୎@෤@Ϊ@Ψ@ܒ@੼@。@。@　@੼@ܒ@Ϊ@ܒ@ȤAN͆ʨÅM¶ɋ\"],[\"@@Á¹ÁĜń¡\"],[\"@@ƯnÔüƳŜѲÛȡƩ\"],[\"@@ѭ_ҼȔǳ\"],[\"@@Šŋёōɚ͎Ęĳ\"],[\"@@ȉØļ¨ĎĿ\"],[\"@@ƑjΚǚɇȃ\"],[\"@@Ѿ³ڿƁÚτZ\"],[\"@@ŽBŲĬƀ·ųµ\"],[\"@@ԱYࠪǎŇĎɢĔļ«Ùțҳč\"],[\"@@ˏ̼ú«ŕ\"],[\"@@ԾƉсċυƼˊÚ\"],[\"@@िћͲͪʺ´þǼϮPŗƍ\"],[\"@@ȲĈŢÅ˃ǧǆ«зȃޯŷըȐĶƠǨ«ÊÊ̩ČÌň̪Ä¶ė\"],[\"@@ǹa}Ĭǎǚęů{\"],[\"@@VŰŤóŹ»\"],[\"@@ŕìƜ¬ŗ\"],[\"@@ĆƑʞūɱÈ௹ˇÁǂ΄ʤ֠Ť˦Ë\"],[\"@@đāÔƚ~×\"],[\"@@TǇəŚvȨȐƹ\"],[\"@@̕ǥ°ǚʈŴ^ŧ\"],[\"@@ȴCóǩ؉Զ˨ùȢˍ\"],[\"@@[ßƣØǀH\"],[\"@@ŎÆÆǏʵÒɔ÷\"],[\"@@́ɱñȒδ \"],[\"@@ƟRŦĂzē\"],[\"@@ǫʁɓǞ˃ȱëɂȆΒ̘ľɬȑfȩ\"],[\"@@̨gĚȕоǏΦΏ˵ĨĵķǶTǰɑȘ_õеࢭԪƈÌÙǌիǐςŖŉĬ̷Ñǲƴǌ\"],[\"@@ɉĀŐĦɮųƏ\"],[\"@@iƓŻ[̹ŲɾΜˀɇŕ\"],[\"@@ħ²ǰćó\"],[\"@@ʀƃ£Ļø\"],[\"@@ǛĘȒɲǿƭ¥\"],[\"@@ɂǍǯѯȫ§Ę͊ʏ͎ȘĀźñ\"],[\"@@̶ÕɅÙ³ʙǬƞ˫˛еҶԦK\"],[\"@@̯ÓöŐ̈́ĉy\"],[\"@@̌Տ½уʣʬĈƈϓŤŌǤɉȈ̛ȫUɬ̾ɈДƷ\"],[\"@@ЀD­ĹɢŃǑĹѹɘŹԁĳϫƣøû͓ƵȠǲϙźăȇ˫ѴҶǤά̃ŹҶ̔ōɪÄ´ƪʼÙ¡Õ\"],[\"@@İɅɢŐ͢ğ_Ǖ̱¡̠¢ȱՏƼŅȷǿvփѴȺȺƬķ¦Č̪ \"],[\"@@φcΖџЁΔ͌׉ԕʹ|τνܼȲǋ\"],[\"@@ϊ¥āōǗÖįʏzˣƙϟĀ;ǮǢeÍŚΦ³\"],[\"@@ų´Ȭà÷œ\"],[\"@@ǱüΔńǡǿ\"],[\"@@ȿWǊĊ¶ñ\"],[\"@@ŌӲΐƊs׹ѧ\"],[\"@@;ÍŚͳҳűࠫȴʟǖԌV̢ƒ˺B\"],[\"@@ʖѡřëŔʸ\"],[\"@@ŇɭēĸȜŶ\"],[\"@@іƃͻ|ΉȪʰġ\"],[\"@@ή¯آĂضʳ۴¿ćԓʽǷţƔࡻ˔ڃÿī̐ʄ¿\"],[\"@@@݁@௯@݃@௯@݃@௯@݃@ӫȪȦÖæЖĭʠŪψVžH@Áµě¡õˈřҨ˭،͓ÔʻèYƊîŶ¬˂ĠȠDĦʶǂjŀԴľˮ^ˈƑĜʑɢõʆǅÂÍĤ÷֠̅ɬɽɰɱϜϗĜýŢŋÎÝ¡­·ÅƴŀkÕąȨÃǝ̒ۖʗƠÂĝˆ[ìƃǙޥ̣ɋɱǓ̌ʤƈ͇դĂņفǱǗ˻ơÄ©ż̨΀ʘ ˱ʙƮգՖաĮƵЂ҂ÛΙɢ˺̩ ƍãʷȒżϒ˧ʇӉȄӳߺśǻΌߧЙƔ˛WũΠǼÜǅqŏƦÛʃٙɨÏƉϐÃŊǇɒ_Ɛűҟǫ޽˴ࠃӬ੏̤ɔƞBɌȎ˽ÆǬȞ`ϋƪࠧʩࠩǊ@Ǹɗŭੳń৛åŔ׹ƺǮˬҵʏճĈȊƢݩàƮèȷðƀ˄ºങȇĩàɈɂӹƅCǥǱwʦŵ͑ƻѪîž÷ϻзۯTŅĜǟ˯ĭŲñƳǡ ǉǽ΅G˝ˁȽ¨үģǱÜÆĸРŊ̔Ɍ͹Ĺ͹ŎϨвϖޒʨମŭࠓʜԶˢҗȃՕl࠙ˑߓ׷П~̬ʡҩŽĲŏҹ¿ѳЭٔǑgǣ܍ϙŧٕť٩ϕփǩǋ̋ງӗřĻɶįȓőñĺǕǓ؝ƩŗƹģǺؓʭݏƓ½ŢȰ~˅ÚҳЕʿñȳǎȿǅɉĢWůǡÝ´ʂ̺Ø৬װМĪˈwęęǞŏĆĮΒÅȻǜȦʶ୒ӌȲó^ȶ˸ɒЌȖ͒kȟƢð̺ΖŤʛºƘҤ˄ƔͰ˩ɍࢣɛʿȤàŲ̂m˻ĦɋƇŋj҃Ƌ؁ьȿùωȚݑɃĩŉڅsΞŴäˆ˱ŸϊӽאϬΌ؇ΩĪɻटǁϳĄݑԔ˝Ҥ̎Фķ­ƭ̼ƤɨƧʸƖСĆː¤ƍÈȵĕवÌȸƮΉ¶LĘʕơʡȞfǜʵT_Ė̠ɧĜϺÈāȘњ̼ξpƚǴǟïMʜΒĦqƺϺ˜ĹķğȞøǼ¹֔Ȃ˶ɚʸÛܾĘ˒ɖǫζхƶҸŨÜƪɱƜՇğࢡχͫɸºȓӍƒ੟œএň˳ŪÆǖљȘ٬ňਹŘֹȢහФ٦Yũǀ૆ɨ۔[ɋBŝ̡˴ō๘ДȪΞýïŪڝÞՃͦƴŤ٪ЧଠŇǊх¶҅ıϫŰŘːຽèӿшᖉن΀ÆƞϮঔEনżဤજǉƛࣞŤ݊ʌɂʿ¨Ȁάx׍ĢʹŶ̮üÂŉૼĤ௄Ң@ĭݠƝӉǉƤïڴɎࠆʡ߲Ōذ§ɐÑƓǃՊ»Ƨĝᖨ¤ೂʃཐµՀŵဖĞіéદ͉;E@݃\"]],\"encodeOffsets\":[[[-159315,19469]],[[-160613,21272]],[[-160242,21435]],[[-160986,21725]],[[-161586,21972]],[[-163197,22459]],[[-82989,25311]],[[-82311,25746]],[[-99502,26788]],[[-82111,27934]],[[-93996,30209]],[[-86945,30355]],[[-91365,30807]],[[-121188,34187]],[[-122924,34733]],[[-122759,34898]],[[-77357,36086]],[[-75912,40634]],[[-74250,41970]],[[-71657,42256]],[[-72202,42370]],[[-72951,42488]],[[-69823,45397]],[[-125331,48533]],[[-125514,49313]],[[-97078,50179]],[[-180517,53036]],[[-182148,52890]],[[-181399,52958]],[[-180831,53112]],[[184042,53152]],[[181674,53128]],[[-177718,53388]],[[-176603,53527]],[[-178869,53284]],[[177893,53617]],[[176960,54286]],[[-171995,54626]],[[-170614,55195]],[[-169821,55369]],[[-169534,55436]],[[-166193,56164]],[[-167399,56301]],[[-163343,56476]],[[-134491,56402]],[[-163709,56452]],[[-136050,56212]],[[-164177,56666]],[[-164541,56643]],[[-136504,56877]],[[-159299,57161]],[[-134122,56821]],[[-136771,57692]],[[-135966,57598]],[[-135283,57456]],[[-157909,57872]],[[-173829,57995]],[[-135932,57883]],[[-137205,58210]],[[-136567,58372]],[[-156679,58496]],[[-138209,58728]],[[-156567,59212]],[[-138987,59643]],[[-137912,59558]],[[-156074,59761]],[[-156145,59889]],[[-164781,59983]],[[-151574,61507]],[[-151281,61249]],[[-170122,61833]],[[-149907,61901]],[[-151202,61902]],[[-176888,61909]],[[-175578,65168]],[[-144386,70425]]]},\"properties\":{\"name\":\"United States\",\"childNum\":76}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@§QûD«TæBbëĄÂfE´ÍŰmſ\"],[\"@@d´fĂèhiGo࢟ӹҬƝńƧɀÓǂ@Ā{`ZZǦƺt¸Ƥó´s]ÆđjĭäOĀmÂn¤[b¯LývWŴ|ʜƣЊѹʫǝªYųɏXρʋ͛Ŕˁ_ʱɿƸ͊˴̋ˀׁ̙ͅĢųǙÌ̳է}˼ÝƕÂţȕÍƧʩسîʗſËȽʒí ŗπÉϡɚɗ҉؋_ȯÓMx«xýI÷ÙQĹ£ĽtŃČȭʱoWĢBŠ^ƾäǜՓɐ̝KફبҝƸ੿ۆӣरͿƶɇñڍ̫Ʈ[̠ŀɑƜȨՋĦٝϤĥĭ˙˔ˡϏǂǷʡѯÇ˛ɡżэčñ࢓¸AᶢᓢҼᏠউࠜݷৼŘਢÝϴƎӺͻʴεʠĨùࠡЪUǰۅਐdƪƗÅȁȴŹʀXɈӎҤຘۖ\"]],\"encodeOffsets\":[[[72916,40850]],[[72650,43263]]]},\"properties\":{\"name\":\"Uzbekistan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÿŊňÒǛ\"],\"encodeOffsets\":[[-62642,13474]]},\"properties\":{\"name\":\"St. Vin. and Gren.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ñäźļ®ķŕç\"],[\"@@ķǦĈíÅ\"],[\"@@ËȳСĂǄĖƺíưŊ\"],[\"@@|SwÌǷͯΏɷeғˏ˧ĉɏ¸ʩśŧΥЙַ̎]Ɲǔ͑\\\\ǱŖĴɛϖΥƦ࣭ւùɋӛȋǑ͵ݱΟ̳ΕéEžƃŠ͇ǕʋeѻϦ˫খ΃ͺȫ@ҢԺ̍ϖǋզ~ٚ̎ֈOɀ̓ĠԧŏߣםۤԛŘ͡ē݅Ǜ˴ɝźèٚɳ˺ŋКɗŴʵÅ̠ԄŘמừψ̤ʒЂ՜ǐ՗ʕĸ͉ǌƩõeŘ˱ѥۻв٣͆Ħƀǀ̜ω۞tδਤ΄ŖŮʖWǖ́¡ÿɘìǲǖä̼וڮ¡ήɫĒЅƀǑཤŞͪ̿؈ƿɼz֌̠Ϧџ§þ᎚ĘсǍ҃]Ȓȯ¯ȝǆŨȖΗČČÊ»CƂâG˺˿}ƶƬäڞ҃ȗǥȋү̷E˄ƽцƴՒrŴÉƼȱcµĭ³s}ĝЗȫǣɷĤǷuğ¦±¼W¶nÖC ]h_H}÷³˕ƫΫÕµęnÙ~ÇA½pƝÅßãóġ^ǬțǶȥǲȡ\"]],\"encodeOffsets\":[[[-62461,9081]],[[-62280,9358]],[[-65381,11399]],[[-62199,5327]]]},\"properties\":{\"name\":\"Venezuela\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ƽʷ£ļþ\"],\"encodeOffsets\":[[-66320,18222]]},\"properties\":{\"name\":\"U.S. Virgin Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@̥ƙ˼Ǹj\"],[\"@@ĹmŸŊ}ě\"],[\"@@ǗĽÔƨń©\"],[\"@@ҿȉ±ȕǃęЙªÐɟǟǩnœӵϟ̥ࠇɢϵԢұgȑĝx௴ணǒRڔߟМ౫ӝŸ˗j̗ğŶĭėðɉĉrOׅƅŏ«ɋݡσÿƩث˓ɉɚ·ɕȃŖķÏŖi`űʗF˒Ƴǅɍϫ̦άэãſչψˠͿTǓ֗ʭ͕ϵ́łŲÝ²vڮȪ͞ʁǨśȥȮΤļǒƖAǮɨÇúĚ̌ĈŁʼÍEȲʯɎI˺žļͤÑ^ɘʊ~њ˚ƲĨĖ֔Ŋ΂ɯׂǀӠIĨV®iqÄÚÞ¾ÒhÆ°µæĕØķĂ·¸ĩƸpƠê~HüϹʺĲeV©éġƄYƜO²oÞțɜɛǖ˃˔ēȸÏĀ¹Ü˿Ʉwú¶ĶD੉ռHtĄ°ÀWæêfzFǔNʊ×PžŖ¶è\\\\ÊĨĪBÄòűFkh_ÂIĹĕVqbÒ®t¨üȟƤŻþÿϹȽƟêɅ¼ęªȁʼÂĊΒĕ®{ÔcQwõÝCáȔϣЌ¤¼ªƜȮÄіʫ̂˔ƔƳņǌ˒ȭǜɔȔąˆĲƬ˄ΊǬӊΡʰ¢Ōĥɚ¨ȨŉȕɷĨѭʶ¯͊˅΄Ǵū\"]],\"encodeOffsets\":[[[106562,10641]],[[110102,21429]],[[110186,21727]],[[110564,22025]]]},\"properties\":{\"name\":\"Vietnam\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŧéŉŮ~ŌȴǏ\"],[\"@@̇Ì|ȒņZǆʷ\"],[\"@@ŞŹ»đ̭ôĪƄƢT\"],[\"@@ɟsƖʾš\"],[\"@@̯ĜȠŮŐɉ\"],[\"@@Τ̓͗ėčʹǓØ¢ǐŖÞƯ\"],[\"@@ȥ_ˠƚùŹ\"],[\"@@Ä˥ɠȆŀэęř˯§ŃȎÁٜƬƹ\"],[\"@@ŻgĈĄ²àĳ\"],[\"@@ąĲöâPǓ\"]],\"encodeOffsets\":[[[173560,-20009]],[[173399,-19394]],[[172489,-17963]],[[172490,-17181]],[[172336,-16728]],[[171431,-16482]],[[171942,-15806]],[[170748,-15182]],[[171607,-14603]],[[171509,-14240]]]},\"properties\":{\"name\":\"Vanuatu\",\"childNum\":10}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ϧœŨϊmŲƕ\"],[\"@@ƀȁ¡ĳʻZȱɲϐª\"]],\"encodeOffsets\":[[[-175569,-14383]],[[-176469,-13788]]]},\"properties\":{\"name\":\"Samoa\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Τv˘ġ͍ǉ·͹ǶȀƶȔß\"],[\"@@ÇĖþ½\"],[\"@@ÿÌºtą\"],[\"@@ُ̕Ź˱ʧݧίဇӳֳӳ֭Cӧ͗ԳǑोŃԳѭΝBԥǫ̷Řūɋӌ¨ΨǋˌŹެãǎǕČŢĀçˠĺ̈́˸̬ˊv֜ȒƂмǇਚĒ͚Ŀ৊ȼʽƖMʤƒŚ˲ӾתܶΦូΒजጉ\"]],\"encodeOffsets\":[[[55054,12941]],[[43783,14034]],[[43815,14307]],[[54360,17048]]]},\"properties\":{\"name\":\"Yemen\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɡǘÐÊę\"],[\"@@ƾӋÃ౑ӯǶŅóĳřʇεH̹ÜM°ĻŀǓǰŁǐ³ɰ]ǺHYŐlǴxŤ~NôyòLźyΤVĠD̏଍ȽΟߙٍ଩࿋౫ફହݫկȧԻnșʣӑ¾ƩǏșIݭƴίõ׵Òʷ·ϧʭੑùё˓؇ƞĺțŤɡ[áʀɃuȧğƄæІӧݞĪĴƆǜȴīٚܧઢͭ࢔ǭͨʕ͢ʶƒ¶nŌü¶¶ļŎďƞŗöέܨǁ܎«ìÊƚȐƄφļ@Ţ@ᲄϜ̵̦٥ŷ۝ĊęߤP¨ĆȈØä²łǈɈƜÞ¦ɾ֦ɪƚȬEъʹÚsȊMŚğݐ[ʰĀͦޒĶČɠ¶°͒˼ɀ֎ֶήͮΐՊǴĘðÊĮİÆȠhZBʈ Ȭʎěɨɂ̦Uļú³ɐࣣɈ·\",\"@@Ɯ˳͞ˑʮÒĚɜ̈́ɊlϜǨȀŶŒ²ŀĺíȖ֧ђYģkȩïůßĿÿȉÇχӡȥęŘ˅\"]],\"encodeOffsets\":[[[38766,-48070]],[[32563,-24465],[27847,-30659]]]},\"properties\":{\"name\":\"South Africa\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĐŽĐđ[ûuëǾǓRį`ĞƋ̳ʣòʱģȷ[Mįàſ©ΟôǏƠҋ̓Oѯʟ̫ńĉƸˏƖÌ®Ó᠁ࠑƐշޅ­ӗʓŷҙ̩۟މࢿȭéϑĦ˳إƪɍȌɥ¨ϩݧƇঽ࡚ǵ֢A౞@˒@˒@ڠȘ@൒@ĶZåǄH²pĜØފcܔͲɑXʋފǤ¼Ή֪ɡڢÙˮ͖Βխ۶ʓŜˋƮõʆϋǀ{̒ŲȄǃjંʋÓmǅΟÎӥҌċȶɘࡢܸǟϢЀτzʦ༔ʖâǇ¾õÜÝĞ»ɰJĊð¹lûİēȶFÝlۂɥƎíÜǷŸf\"],\"encodeOffsets\":[[33944,-9834]]},\"properties\":{\"name\":\"Zambia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǵḀ̄TɁ}ɩʍĜȩʇYA¥ßàǍ¾aȄࡗȲ́ЬTҼͯrđ͆ࡓӀȕԌבࠂ`ƨئƩ˴ϒĥȮêފࣀ̪۠ŸҚӘʔކ®̑ڢyעͽࡐʃÑƝĮఏʗӥŴƍÓʇǸԃп֥śЏÜƉࡁࡃšđ\"],\"encodeOffsets\":[[32039,-22939]]},\"properties\":{\"name\":\"Zimbabwe\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ڽը¿ުەߖ٬֖NΦxHޠцǒŴ\\\\ǔéº`Ęfú[ǜ¹~}¢ũYĨĀcĖÌ£¢áfÁnÛ½˩ƄÇÞŻ~eÖBŒvİ¤RXĩÌĄ§a÷Îŕ÷ĸȣ¡ıǽûsmQ}«»ď§řjʅõōDđ³Û«ŷ³அɘŅĭāuƕɳ`«Ī¢§NÙéõʠ{ɩɥƤǵšɇ\"],\"encodeOffsets\":[[75785,34052]]},\"properties\":{\"name\":\"\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@͙̄͟ƹիԠύfʛϋӻýģлʫ@˭ƪǕIđmɜ\\\\cȝ`¥CƴˁȖƈʊƣǶɪɦʟ|öÜêO¡¨ĩ_¬ƖɴĂxĮņஆɗŸ´Ü¬Ĕ´ŌCʆöŚiĐ¨®¼P~tnǾü~Ðd¢̀ǊŰÜŀÄĒ¬Ȳ_́êǁƘ˹ҎǹÒĽȱǷ´ǡæͅìíƐĵn­ĵ§rчɃŝƑŢa¸ȵw\"]],\"encodeOffsets\":[[[80376,33312]]]},\"properties\":{\"name\":\"\",\"childNum\":1}}],\"UTF8Encoding\":true});}));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseSVG = _parseSVG.parseSVG;\nvar makeViewBoxTransform = _parseSVG.makeViewBoxTransform;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar createHashMap = _util.createHashMap;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {root, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var originRoot = inner(mapRecord).originRoot;\n\n    if (originRoot) {\n      return {\n        root: originRoot,\n        boundingRect: inner(mapRecord).boundingRect\n      };\n    }\n\n    var graphic = buildGraphic(mapRecord);\n    inner(mapRecord).originRoot = graphic.root;\n    inner(mapRecord).boundingRect = graphic.boundingRect;\n    return graphic;\n  },\n  makeGraphic: function (mapName, mapRecord, hostKey) {\n    // For performance consideration (in large SVG), graphic only maked\n    // when necessary and reuse them according to hostKey.\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap || (field.rootMap = createHashMap());\n    var root = rootMap.get(hostKey);\n\n    if (root) {\n      return root;\n    }\n\n    var originRoot = field.originRoot;\n    var boundingRect = field.boundingRect; // For performance, if originRoot is not used by a view,\n    // assign it to a view, but not reproduce graphic elements.\n\n    if (!field.originRootHostKey) {\n      field.originRootHostKey = hostKey;\n      root = originRoot;\n    } else {\n      root = buildGraphic(mapRecord, boundingRect).root;\n    }\n\n    return rootMap.set(hostKey, root);\n  },\n  removeGraphic: function (mapName, mapRecord, hostKey) {\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap;\n    rootMap && rootMap.removeKey(hostKey);\n\n    if (hostKey === field.originRootHostKey) {\n      field.originRootHostKey = null;\n    }\n  }\n};\n\nfunction buildGraphic(mapRecord, boundingRect) {\n  var svgXML = mapRecord.svgXML;\n  var result;\n  var root;\n\n  try {\n    result = svgXML && parseSVG(svgXML, {\n      ignoreViewBox: true,\n      ignoreRootClip: true\n    }) || {};\n    root = result.root;\n    assert(root != null);\n  } catch (e) {\n    throw new Error('Invalid svg format\\n' + e.message);\n  }\n\n  var svgWidth = result.width;\n  var svgHeight = result.height;\n  var viewBoxRect = result.viewBoxRect;\n\n  if (!boundingRect) {\n    boundingRect = svgWidth == null || svgHeight == null ? // If svg width / height not specified, calculate\n    // bounding rect as the width / height\n    root.getBoundingRect() : new BoundingRect(0, 0, 0, 0);\n\n    if (svgWidth != null) {\n      boundingRect.width = svgWidth;\n    }\n\n    if (svgHeight != null) {\n      boundingRect.height = svgHeight;\n    }\n  }\n\n  if (viewBoxRect) {\n    var viewBoxTransform = makeViewBoxTransform(viewBoxRect, boundingRect.width, boundingRect.height);\n    var elRoot = root;\n    root = new Group();\n    root.add(elRoot);\n    elRoot.scale = viewBoxTransform.scale;\n    elRoot.position = viewBoxTransform.position;\n  }\n\n  root.setClipPath(new Rect({\n    shape: boundingRect.plain()\n  }));\n  return {\n    root: root,\n    boundingRect: boundingRect\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction makeHighDownBatch(batch, visualMapModel) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batchItem.dataIndex != null) {\n      batchItem.dataIndexInside = batchItem.dataIndex;\n      batchItem.dataIndex = null;\n    }\n\n    batchItem.highlightKey = 'visualMap' + (visualMapModel ? visualMapModel.componentIndex : '');\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.makeHighDownBatch = makeHighDownBatch;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [];\n    var valueWindow = [];\n    var hasPropModeValue;\n    each(['start', 'end'], function (prop, idx) {\n      var boundPercent = opt[prop];\n      var boundValue = opt[prop + 'Value']; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). (They are based on the data extent\n      // but not min/max of axis, which will be calculated by data window then).\n      // The former one is suitable for cases that a dataZoom component controls multiple\n      // axes with different unit or extent, and the latter one is suitable for accurate\n      // zoom by pixel (e.g., in dataZoomSelect).\n      // we use `getRangePropMode()` to mark which prop is used. `rangePropMode` is updated\n      // only when setOption or dispatchAction, otherwise it remains its original value.\n      // (Why not only record `percentProp` and always map to `valueProp`? Because\n      // the map `valueProp` -> `percentProp` -> `valueProp` probably not the original\n      // `valueProp`. consider two axes constrolled by one dataZoom. They have different\n      // data extent. All of values that are overflow the `dataExtent` will be calculated\n      // to percent '100%').\n\n      if (rangePropMode[idx] === 'percent') {\n        boundPercent == null && (boundPercent = percentExtent[idx]); // Use scale.parse to math round for category or time axis.\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent));\n      } else {\n        hasPropModeValue = true;\n        boundValue = boundValue == null ? dataExtent[idx] : scale.parse(boundValue); // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    asc(valueWindow);\n    asc(percentWindow); // The windows from user calling of `dispatchAction` might be out of the extent,\n    // or do not obey the `min/maxSpan`, `min/maxValueSpan`. But we dont restrict window\n    // by `zoomLock` here, because we see `zoomLock` just as a interaction constraint,\n    // where API is able to initialize/modify the window size even though `zoomLock`\n    // specified.\n\n    var spans = this._minMaxSpan;\n    hasPropModeValue ? restrictSet(valueWindow, percentWindow, dataExtent, percentExtent, false) : restrictSet(percentWindow, valueWindow, percentExtent, dataExtent, true);\n\n    function restrictSet(fromWindow, toWindow, fromExtent, toExtent, toValue) {\n      var suffix = toValue ? 'Span' : 'ValueSpan';\n      sliderMove(0, fromWindow, fromExtent, 'all', spans['min' + suffix], spans['max' + suffix]);\n\n      for (var i = 0; i < 2; i++) {\n        toWindow[i] = numberUtil.linearMap(fromWindow[i], fromExtent, toExtent, true);\n        toValue && (toWindow[i] = scale.parse(toWindow[i]));\n      }\n    }\n\n    return {\n      valueWindow: valueWindow,\n      percentWindow: percentWindow\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n    // `calculateDataWindow` uses min/maxSpan.\n\n    setMinMaxSpan(this);\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow; // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (!dataDims.length) {\n        return;\n      }\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData = seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  var dataExtent = axisProxy._dataExtent;\n  each(['min', 'max'], function (minMax) {\n    var percentSpan = dataZoomModel.get(minMax + 'Span');\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n    valueSpan != null && (valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan)); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    if (valueSpan != null) {\n      percentSpan = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n    } else if (percentSpan != null) {\n      valueSpan = numberUtil.linearMap(percentSpan, [0, 100], dataExtent, true) - dataExtent[0];\n    }\n\n    minMaxSpan[minMax + 'Span'] = percentSpan;\n    minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8ClampedArray */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar Model = require(\"../../model/Model\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n  levelModels: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option, ecModel) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n    var levels = option.levels;\n    var levelModels = this.levelModels = {};\n\n    for (var i = 0; i < levels.length; i++) {\n      if (levels[i].depth != null && levels[i].depth >= 0) {\n        levelModels[levels[i].depth] = new Model(levels[i], this, ecModel);\n      } else {}\n    }\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true, beforeLink);\n      return graph.data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        model.customizeGetParent(function (path) {\n          var parentModel = this.parentModel;\n          var nodeDepth = parentModel.getData().getItemLayout(idx).depth;\n          var levelModel = parentModel.levelModels[nodeDepth];\n          return levelModel || this.parentModel;\n        });\n        return model;\n      });\n      edgeData.wrapMethod('getItemModel', function (model, idx) {\n        model.customizeGetParent(function (path) {\n          var parentModel = this.parentModel;\n          var edge = parentModel.getGraph().getEdgeByIndex(idx);\n          var depth = edge.node1.getLayout().depth;\n          var levelModel = parentModel.levelModels[depth];\n          return levelModel || this.parentModel;\n        });\n        return model;\n      });\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    } else if (dataType === 'node') {\n      var node = this.getGraph().getNodeByIndex(dataIndex);\n      var value = node.getLayout().value;\n      var name = this.getDataParams(dataIndex, dataType).data.name;\n\n      if (value) {\n        var html = name + ' : ' + value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n\n    if (option.focusNodeAdjacency === true) {\n      option.focusNodeAdjacency = 'allEdges';\n    }\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // The position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // Value can be 'vertical'\n    orient: 'horizontal',\n    // The dx of the node\n    nodeWidth: 20,\n    // The vertical distance between two nodes\n    nodeGap: 8,\n    // Control if the node can move or not\n    draggable: true,\n    // Value can be 'inEdges', 'outEdges', 'allEdges', true (the same as 'allEdges').\n    focusNodeAdjacency: false,\n    // The number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    levels: [],\n    // Value can be 'left' or 'right'\n    nodeAlign: 'justify',\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series:unfocusNodeAdjacency'\n}, function () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    /* eslint-disable */\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n    /* eslint-enable */\n\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar';\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\nrequire(\"../helper/focusNodeAdjacencyAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        var tooltipModel = toolboxModel.getModel('tooltip');\n\n        if (tooltipModel && tooltipModel.get('show')) {\n          path.attr('tooltip', zrUtil.extend({\n            content: titles[iconName],\n            formatter: tooltipModel.get('formatter', true) || function () {\n              return titles[iconName];\n            },\n            formatterParams: {\n              componentType: 'toolbox',\n              name: iconName,\n              title: titles[iconName],\n              $vars: ['name', 'title']\n            },\n            position: tooltipModel.get('position', true) || 'bottom'\n          }, tooltipModel.option));\n        }\n\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: iconStyleEmphasisModel.get('textPosition') || 'bottom',\n              textFill: iconStyleEmphasisModel.get('textFill') || hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: iconStyleEmphasisModel.get('textAlign') || 'center',\n              textBackgroundColor: iconStyleEmphasisModel.get('textBackgroundColor'),\n              textBorderRadius: iconStyleEmphasisModel.get('textBorderRadius'),\n              textPadding: iconStyleEmphasisModel.get('textPadding')\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null,\n              textBackgroundColor: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl && elOption.pointer) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n\n  /* eslint-disable */\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n\n  /* eslint-enable */\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar SeriesModel = require(\"../model/Series\");\n\nvar Model = require(\"../model/Model\");\n\nvar ChartView = require(\"../view/Chart\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CACHED_LABEL_STYLE_PROPERTIES = graphicUtil.CACHED_LABEL_STYLE_PROPERTIES;\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\nSeriesModel.extend({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    useTransform: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n\n  /**\n   * @override\n   */\n  getDataParams: function (dataIndex, dataType, el) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    el && (params.info = el.info);\n    return params;\n  }\n}); // -----\n// View\n// -----\n\nChartView.extend({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api, payload) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api); // By default, merge mode is applied. In most cases, custom series is\n    // used in the scenario that data amount is not large but graphic elements\n    // is complicated, where merge mode is probably necessary for optimization.\n    // For example, reuse graphic elements and only update the transform when\n    // roam or data zoom according to `actionType`.\n\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api, payload) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx, payload), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop,\n\n  /**\n   * @override\n   */\n  filterForExposedEvent: function (eventType, query, targetEl, packedEvent) {\n    var elementName = query.element;\n\n    if (elementName == null || targetEl.name === elementName) {\n      return true;\n    } // Enable to give a name on a group made by `renderItem`, and listen\n    // events that triggerd by its descendents.\n\n\n    while ((targetEl = targetEl.parent) && targetEl !== this.group) {\n      if (targetEl.name === elementName) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape; // Using pathRect brings convenience to users sacle svg path.\n\n    var pathRect = shape.width != null && shape.height != null ? {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width,\n      height: shape.height\n    } : null;\n    var pathData = getPathData(shape); // Path is also used for icon, so layout 'center' by default.\n\n    el = graphicUtil.makePath(pathData, null, pathRect, shape.layout || 'center');\n    el.__customPathData = pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot) {\n  var transitionProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (transitionProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (transitionProps.position = elOption.position.slice());\n  elOption.scale && (transitionProps.scale = elOption.scale.slice());\n  elOption.origin && (transitionProps.origin = elOption.origin.slice());\n  elOption.rotation && (transitionProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = transitionProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = transitionProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(transitionProps);\n  } else {\n    graphicUtil.updateProps(el, transitionProps, animatableModel, dataIndex);\n  } // Merge by default.\n  // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  elOption.hasOwnProperty('z2') && el.attr('z2', elOption.z2 || 0);\n  elOption.hasOwnProperty('silent') && el.attr('silent', elOption.silent);\n  elOption.hasOwnProperty('invisible') && el.attr('invisible', elOption.invisible);\n  elOption.hasOwnProperty('ignore') && el.attr('ignore', elOption.ignore); // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n  // Update them only when user specified, otherwise, remain.\n\n  elOption.hasOwnProperty('info') && el.attr('info', elOption.info); // If `elOption.styleEmphasis` is `false`, remove hover style. The\n  // logic is ensured by `graphicUtil.setElementHoverStyle`.\n\n  var styleEmphasis = elOption.styleEmphasis;\n  var disableStyleEmphasis = styleEmphasis === false;\n\n  if (!( // Try to escapse setting hover style for performance.\n  el.__cusHasEmphStl && styleEmphasis == null || !el.__cusHasEmphStl && disableStyleEmphasis)) {\n    // Should not use graphicUtil.setHoverStyle, since the styleEmphasis\n    // should not be share by group and its descendants.\n    graphicUtil.setElementHoverStyle(el, styleEmphasis);\n    el.__cusHasEmphStl = !disableStyleEmphasis;\n  }\n\n  if (isRoot) {\n    graphicUtil.setAsHighDownDispatcher(el, !disableStyleEmphasis);\n  }\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    // The life cycle of context: current round of rendering.\n    // The global life cycle is probably not necessary, because\n    // user can store global status by themselves.\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside, payload) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside),\n      // Can be used for optimization when zoom or roam.\n      actionType: payload ? payload.type : null\n    }, userParams), userAPI);\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    var labelModel = extra ? applyExtraBefore(extra, currLabelNormalModel) : currLabelNormalModel;\n    graphicUtil.setTextStyle(itemStyle, labelModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = labelModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && applyExtraAfter(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    var labelModel = extra ? applyExtraBefore(extra, currLabelEmphasisModel) : currLabelEmphasisModel;\n    graphicUtil.setTextStyle(itemStyle, labelModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = labelModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && applyExtraAfter(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, true);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, isRoot) {\n  // [Rule]\n  // By default, follow merge mode.\n  //     (It probably brings benifit for performance in some cases of large data, where\n  //     user program can be optimized to that only updated props needed to be re-calculated,\n  //     or according to `actionType` some calculation can be skipped.)\n  // If `renderItem` returns `null`/`undefined`/`false`, remove the previous el if existing.\n  //     (It seems that violate the \"merge\" principle, but most of users probably intuitively\n  //     regard \"return;\" as \"show nothing element whatever\", so make a exception to meet the\n  //     most cases.)\n  var simplyRemove = !elOption; // `null`/`undefined`/`false`\n\n  elOption = elOption || {};\n  var elOptionType = elOption.type;\n  var elOptionShape = elOption.shape;\n  var elOptionStyle = elOption.style;\n\n  if (el && (simplyRemove // || elOption.$merge === false\n  // If `elOptionType` is `null`, follow the merge principle.\n  || elOptionType != null && elOptionType !== el.__customGraphicType || elOptionType === 'path' && hasOwnPathData(elOptionShape) && getPathData(elOptionShape) !== el.__customPathData || elOptionType === 'image' && hasOwn(elOptionStyle, 'image') && elOptionStyle.image !== el.__customImagePath // FIXME test and remove this restriction?\n  || elOptionType === 'text' && hasOwn(elOptionShape, 'text') && elOptionStyle.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (simplyRemove) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot);\n\n  if (elOptionType === 'group') {\n    mergeChildren(el, dataIndex, elOption, animatableModel, data);\n  } // Always add whatever already added to ensure sequence.\n\n\n  group.add(el);\n  return el;\n} // Usage:\n// (1) By default, `elOption.$mergeChildren` is `'byIndex'`, which indicates that\n//     the existing children will not be removed, and enables the feature that\n//     update some of the props of some of the children simply by construct\n//     the returned children of `renderItem` like:\n//     `var children = group.children = []; children[3] = {opacity: 0.5};`\n// (2) If `elOption.$mergeChildren` is `'byName'`, add/update/remove children\n//     by child.name. But that might be lower performance.\n// (3) If `elOption.$mergeChildren` is `false`, the existing children will be\n//     replaced totally.\n// (4) If `!elOption.children`, following the \"merge\" principle, nothing will happen.\n//\n// For implementation simpleness, do not provide a direct way to remove sinlge\n// child (otherwise the total indicies of the children array have to be modified).\n// User can remove a single child by set its `ignore` as `true` or replace\n// it by another element, where its `$merge` can be set as `true` if necessary.\n\n\nfunction mergeChildren(el, dataIndex, elOption, animatableModel, data) {\n  var newChildren = elOption.children;\n  var newLen = newChildren ? newChildren.length : 0;\n  var mergeChildren = elOption.$mergeChildren; // `diffChildrenByName` has been deprecated.\n\n  var byName = mergeChildren === 'byName' || elOption.diffChildrenByName;\n  var notMerge = mergeChildren === false; // For better performance on roam update, only enter if necessary.\n\n  if (!newLen && !byName && !notMerge) {\n    return;\n  }\n\n  if (byName) {\n    diffGroupChildren({\n      oldChildren: el.children() || [],\n      newChildren: newChildren || [],\n      dataIndex: dataIndex,\n      animatableModel: animatableModel,\n      group: el,\n      data: data\n    });\n    return;\n  }\n\n  notMerge && el.removeAll(); // Mapping children of a group simply by index, which\n  // might be better performance.\n\n  var index = 0;\n\n  for (; index < newLen; index++) {\n    newChildren[index] && doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n  }\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n} // `graphic#applyDefaultTextStyle` will cache\n// textFill, textStroke, textStrokeWidth.\n// We have to do this trick.\n\n\nfunction applyExtraBefore(extra, model) {\n  var dummyModel = new Model({}, model);\n  zrUtil.each(CACHED_LABEL_STYLE_PROPERTIES, function (stylePropName, modelPropName) {\n    if (extra.hasOwnProperty(stylePropName)) {\n      dummyModel.option[modelPropName] = extra[stylePropName];\n    }\n  });\n  return dummyModel;\n}\n\nfunction applyExtraAfter(itemStyle, extra) {\n  for (var key in extra) {\n    if (extra.hasOwnProperty(key) || !CACHED_LABEL_STYLE_PROPERTIES.hasOwnProperty(key)) {\n      itemStyle[key] = extra[key];\n    }\n  }\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\nfunction getPathData(shape) {\n  // \"d\" follows the SVG convention.\n  return shape && (shape.pathData || shape.d);\n}\n\nfunction hasOwnPathData(shape) {\n  return shape && (shape.hasOwnProperty('pathData') || shape.hasOwnProperty('d'));\n}\n\nfunction hasOwn(host, prop) {\n  return host && host.hasOwnProperty(prop);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\nvar getOptionCategoryInterval = _axisHelper.getOptionCategoryInterval;\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showAllLabel = shouldShowAllLabels(axis);\n  var includeMinLabel = labelModel.get('showMinLabel') || showAllLabel;\n  var includeMaxLabel = labelModel.get('showMaxLabel') || showAllLabel;\n\n  if (includeMinLabel && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (includeMaxLabel && tickValue - step !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nfunction getTooltipRenderMode(renderModeOption) {\n  if (renderModeOption === 'auto') {\n    // Using html when `document` exists, use richText otherwise\n    return env.domSupported ? 'html' : 'richText';\n  } else {\n    return renderModeOption || 'html';\n  }\n}\n/**\n * Group a list by key.\n *\n * @param {Array} array\n * @param {Function} getKey\n *        param {*} Array item\n *        return {string} key\n * @return {Object} Result\n *        {Array}: keys,\n *        {module:zrender/core/util/HashMap} buckets: {key -> Array}\n */\n\n\nfunction groupData(array, getKey) {\n  var buckets = zrUtil.createHashMap();\n  var keys = [];\n  zrUtil.each(array, function (item) {\n    var key = getKey(item);\n    (buckets.get(key) || (keys.push(key), buckets.set(key, []))).push(item);\n  });\n  return {\n    keys: keys,\n    buckets: buckets\n  };\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\nexports.getTooltipRenderMode = getTooltipRenderMode;\nexports.groupData = groupData;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {Object} params See taskParams in `stream/task.js`\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null,\n\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param {module:zrender/Element} el\n * @param {string} state 'normal'|'emphasis'\n * @param {number} highlightDigit\n */\n\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el) {\n    el.trigger(state, highlightDigit);\n\n    if (el.isGroup // Simple optimize.\n    && !graphicUtil.isHighDownDispatcher(el)) {\n      for (var i = 0, len = el.childCount(); i < len; i++) {\n        elSetState(el.childAt(i), state, highlightDigit);\n      }\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload\n * @param {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? graphicUtil.getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseXML = _parseSVG.parseXML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function (record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Text from 'zrender/src/graphic/Text';\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n  var renderMode = opt.renderMode || 'html';\n  var markerId = opt.markerId || 'X';\n\n  if (!color) {\n    return '';\n  }\n\n  if (renderMode === 'html') {\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n  } else {\n    // Space for rich element marker\n    return {\n      renderMode: renderMode,\n      content: '{marker' + markerId + '|}  ',\n      style: {\n        color: color\n      }\n    };\n  }\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\n/**\n * @public\n * @param {Object} opt\n * @param {string} opt.text\n * @param {string} opt.font\n * @param {string} [opt.textAlign='left']\n * @param {string} [opt.textVerticalAlign='top']\n * @param {Array.<number>} [opt.textPadding]\n * @param {number} [opt.textLineHeight]\n * @param {Object} [opt.rich]\n * @param {Object} [opt.truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\nfunction getTextBoundingRect(opt) {\n  return textContain.getBoundingRect(opt.text, opt.font, opt.textAlign, opt.textVerticalAlign, opt.textPadding, opt.textLineHeight, opt.rich, opt.truncate);\n}\n/**\n * @deprecated\n * the `textLineHeight` was added later.\n * For backward compatiblility, put it as the last parameter.\n * But deprecated this interface. Please use `getTextBoundingRect` instead.\n */\n\n\nfunction getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate, textLineHeight) {\n  return textContain.getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate);\n}\n\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextBoundingRect = getTextBoundingRect;\nexports.getTextRect = getTextRect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var aspectScale = geoModel.get('aspectScale');\n      var invertLongitute = true;\n      var mapRecords = mapDataStorage.retrieveMap(name);\n\n      if (mapRecords && mapRecords[0] && mapRecords[0].type === 'svg') {\n        aspectScale == null && (aspectScale = 1);\n        invertLongitute = false;\n      } else {\n        aspectScale == null && (aspectScale = 0.75);\n      }\n\n      var geo = new Geo(name + idx, name, geoModel.get('nameMap'), invertLongitute);\n      geo.aspectScale = aspectScale;\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.aspectScale = mapSeries[0].get('aspectScale');\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    var source = geoSourceManager.load(mapName, nameMap);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      !dataNameMap.get(name) && regionsArr.push({\n        name: name\n      });\n    });\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* Some formulas were originally copied from \"d3.js\" with some\n* modifications made for this project.\n* (See more details in the comment of the method \"step\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]);\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n\n    /**\n     * Some formulas were originally copied from \"d3.js\"\n     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js\n     * with some modifications made for this project.\n     * See the license statement at the head of this file.\n     */\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    var handleSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleSpan = restrict(handleSpan, [0, extentSpan]);\n    minSpan = maxSpan = restrict(handleSpan, [minSpan, maxSpan]);\n    handleIndex = 0;\n  }\n\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbidden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1] != null ? extend[1] : Infinity, Math.max(extend[0] != null ? extend[0] : -Infinity, value));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string|Region} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  },\n  cloneShallow: function (name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    componentIndex: seriesModel.componentIndex,\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // If the angle of a sector less than `minShowLabelAngle`,\n    // the label will not be displayed.\n    minShowLabelAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line({\n      // Id for animation\n      anid: 'line',\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    }));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isLabelSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n};\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    });\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('lineHeight'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    /* eslint-disable */\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n    /* eslint-enable */\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\n/* eslint-disable */\n\nproto.render =\n/* eslint-enable */\nproto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      textPadding: paddings,\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      axisDimension: axis.dim,\n      axisIndex: axis.index,\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}