{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/coord/geo/geoJSONLoader.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/coord/geo/geoSourceManager.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/echarts/lib/util/nest.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipRichContent.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/theme/dark.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyAction.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/map/js/world.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/coord/geo/geoSVGLoader.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/chart/helper/focusNodeAdjacencyAction.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/geo/mapDataStorage.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/coord/single/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["_util","__webpack_require__","each","createHashMap","SeriesModel","createListFromArray","_default","extend","type","dependencies","visualColorAccessPath","getInitialData","option","ecModel","source","this","getSource","seriesModel","encodeDefine","parallelModel","getComponent","get","dimensions","axisDim","dataDimIndex","replace","set","setEncodeAndDimensions","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","data","getData","indices","eachActiveState","theActiveState","dataIndex","push","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","show","inactiveOpacity","activeOpacity","lineStyle","width","opacity","emphasis","progressive","smooth","animationEasing","module","exports","zrUtil","VisualMapView","graphic","createSymbol","layout","helper","doRender","thisGroup","group","removeAll","visualMapModel","textGap","textStyleModel","textFont","getFont","textFill","getTextColor","itemAlign","_getItemAlign","itemSize","viewData","_getViewData","endsText","showLabel","retrieve","_renderEndsText","viewPieceList","item","piece","itemGroup","Group","onclick","bind","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","getValueState","add","Text","style","x","y","text","textVerticalAlign","textAlign","box","renderBackground","positionGroup","pieceIndex","onHoverLink","method","hoverLink","api","dispatchAction","batch","convertDataIndex","findTargetDataIndices","on","modelOption","orient","getItemAlign","align","map","getPieceList","index","inverse","reverse","slice","shapeParam","getControllerVisual","selected","clone","newKey","getSelectedMapKey","selectedMode","o","key","from","uid","visualMapId","id","echarts","registerAction","event","update","createListSimply","defaultEmphasis","FunnelSeries","extendSeriesModel","init","superApply","arguments","legendDataProvider","getRawData","_defaultLabelLine","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","getDataParams","params","superCall","valueDim","mapDimension","sum","getSum","percent","toFixed","$vars","legendHoverLink","left","top","right","bottom","minSize","maxSize","sort","gap","funnelAlign","position","length","itemStyle","borderColor","borderWidth","dataToCoordSize","dataSize","dataItem","dimIdx","val","halfSize","p1","p2","Math","abs","dataToPoint","rect","getBoundingRect","height","zoom","getZoom","coord","size","BoundingRect","View","geoSourceManager","Geo","name","nameMap","invertLongitute","call","load","_nameCoordMap","nameCoordMap","_regionsMap","_invertLongitute","regions","_rect","boundingRect","doConvert","methodName","finder","value","geoModel","getReferringComponents","prototype","constructor","containCoord","i","contain","transformTo","rawTransformable","_rawTransformable","transform","calculateTransform","decomposeTransform","scale","updateTransform","_updateTransform","getRegion","getRegionByCoord","addGeoCoord","geoCoord","getGeoCoord","noRoam","out","convertToPixel","curry","convertFromPixel","mixin","gridModel","axisModel","opt","grid","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","axisPosition","dim","getRect","rectBound","idx","onZero","axisOffset","posBound","onZeroCoord","toGlobalCoord","dataToCoord","max","min","rotation","PI","labelDirection","tickDirection","nameDirection","labelOffset","labelInside","labelRotate","z2","extendComponentView","render","Rect","shape","defaults","fill","getItemStyle","silent","registerPreprocessor","xAxis","yAxis","updateViewOnPan","controllerHost","dx","dy","target","pos","dirty","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","newZoom","zoomMin","zoomMax","Infinity","zoomScale","ComponentModel","ComponentView","detectSourceFormat","SERIES_LAYOUT_BY_COLUMN","seriesLayoutBy","sourceHeader","optionUpdated","Model","linkList","List","createDimensions","TreeNode","hostTree","depth","parentNode","children","viewChildren","Tree","hostModel","levelOptions","leavesOption","root","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","options","cb","context","isString","order","suppressVisitSub","attr","updateDepthAndHeight","child","getNodeById","getId","len","res","contains","node","getAncestors","includeSelf","ancestors","getValue","dimension","getDimension","setLayout","merge","setItemLayout","getLayout","getItemLayout","getModel","path","itemModel","getItemModel","levelModel","getLevelModel","isExpand","getLeavesModel","setVisual","setItemVisual","getVisual","ignoreParent","getItemVisual","isAncestorOf","parent","isDescendantOf","getNodeByDataIndex","rawIndex","getNodeByName","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","tree","levels","leaves","listData","dimMax","buildHierarchy","dataNode","isArray","addChild","dimensionsInfo","coordDimensions","dimensionsCount","list","initData","mainData","struct","structAttr","__DEV__","VisualMapModel","VisualMapping","visualDefault","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemWidth","itemHeight","itemSymbol","pieceList","categories","splitNumber","itemGap","newOption","isInit","_pieceList","resetExtent","mode","_mode","_determineMode","resetMethods","_resetSelected","resetVisual","mappingOption","state","mappingMethod","dataExtent","getExtent","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","has","obj","visualType","isObject","hasOwnProperty","pieces","v","exists","stateList","apply","thisOption","hasSel","setSelected","findPieceIndex","result","eachTargetSeries","dataIndices","getDataDimension","seriesId","pieceInterval","interval","getVisualMeta","getColorVisual","stops","outerColors","edge","unshift","curr","setStop","valueState","color","precision","parseInt","splitStep","close","formatValueText","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","names","retrieveVisuals","edgeSymbols","zrColor","eventUtil","env","formatUtil","toCamelCase","vendors","assembleCssText","tooltipModel","duration","transitionText","cssText","transitionDuration","backgroundColor","padding","vendorPrefix","join","canvasSupported","toHex","borderName","camelCase","fontSize","round","assembleFont","normalizeCssArray","TooltipContent","container","wxa","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","self","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","e","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","pointerEvents","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","time","setTimeout","isShow","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","parallelVisual","registerVisual","preprocessor","candlestickVisual","candlestickLayout","registerLayout","Axis","TimelineAxis","coordExtent","axisType","model","getLabelModel","isHorizontal","inherits","subPixelOptimize","createRenderPlanner","parsePercent","retrieve2","LargeArr","Float32Array","Array","seriesType","plan","reset","candleWidth","extent","baseAxis","getBaseAxis","bandWidth","getBandWidth","barMaxWidth","barMinWidth","barWidth","calculateCandleWidth","cDimIdx","vDimIdx","coordDims","cDim","vDims","openDim","closeDim","lowestDim","highestDim","isSimpleBox","progress","pipelineContext","large","point","points","offset","tmpIn","tmpOut","next","axisDimVal","openVal","closeVal","lowestVal","highestVal","isNaN","NaN","getSign","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","ends","addBodyEnd","subPixelOptimizePoint","sign","initBaseline","brushRect","makeBrushRect","p","start","point1","point2","pmin","pmax","RoamController","roamHelper","onIrrelevantElement","getUID","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","regionsGroup","eachChild","otherRegionEl","__regions","region","trigger","isSelected","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","_mapName","_initialized","_regionsGroup","_backgroundGroup","draw","fromView","payload","isGeo","mainType","eachComponent","subType","mapSeries","getHostGeoModel","geo","_updateBackground","childAt","updateProps","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","compoundPath","CompoundPath","paths","dataIdx","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","hoverItemStyle","labelModel","hoverLabelModel","indexOfName","visualColor","geometries","geometry","Polygon","exterior","interiors","setStyle","strokeNoScale","culling","hoverShowLabel","isDataNaN","itemLayout","labelFetcher","query","textEl","center","setLabelStyle","hoverStyle","labelDataIndex","defaultText","useInsideStyle","setItemGraphicEl","eventData","componentType","componentIndex","geoIndex","setHoverStyle","hoverSilentOnTouch","_updateController","mapDraw","off","action","updateMapSelectHandler","remove","dispose","removeGraphic","mapName","makeGraphic","controller","enable","makeActionBase","originX","originY","traverse","setPointerChecker","getViewRectAfterRoam","eachSeriesByType","getGraph","minValue","maxValue","nodeValue","mapValueToColor","mapValueToVisual","customColor","layoutUtil","LegendView","WH","XY","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","removeClipPath","__rectSize","renderInner","legendModel","me","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","icon","createIcon","getOrient","_pageGo","font","layoutInner","contentGroup","containerGroup","orientIdx","wh","hw","yx","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","mainRect","clipShape","setClipPath","invisible","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","scrollDataIndex","legendId","canJump","childOfName","cursor","pageText","pageFormatter","current","total","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","xy","__legendDataIndex","ceil","itemRect","itemLoc","floor","startIdx","winRect","getItemRect","intersect","startRect","ParallelAxis","axisIndex","_model","makeInner","getDataItemValue","getCoordSysDefineBySeries","isTypedArray","isArrayLike","Source","assert","_sourceType","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","inner","normalizeDimensionsDefine","dimensionsDefine","displayName","exist","arrayRowsTravelFirst","maxLoop","value0","doGuessOrdinal","sourceFormat","startIndex","dimIndex","dimName","sample","detectValue","row","isFinite","datasetModel","Error","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","datasetIndex","getDatasetModel","datasetOption","completeResult","dimensionsDetectCount","findPotentialName","potentialNameDimIndex","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","encode","coordSysDefine","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","nameDimIndex","itemName","seriesName","makeDefaultEncode","guessOrdinal","Line","vec2","curveUtil","EffectLine","lineData","seriesScope","createLine","_updateEffectSymbol","effectLineProto","effectModel","symbolType","symbol","_symbolType","setColor","_updateEffectAnimation","period","loop","constantSpeed","delayExpr","isDelayFunc","ignore","updateAnimationPoints","getLineLength","_period","_loop","stopAnimation","delay","__t","animator","animate","when","during","updateSymbolPosition","done","dist","__p1","__cp1","__p2","updateData","cp1","t","quadraticAt","quadraticDerivativeAt","tx","ty","atan2","updateLayout","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","doDispatch","brushSelected","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","area","brushType","selectors","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","isFunction","bSelector","sel","brushModel","setBrushOption","brushOption","brushTargetManager","setInputRanges","areas","throttleType","throttleDelay","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","visualMappings","createVisualMappings","linkOthers","seriesIndex","brushed","eachSeries","hasAxisBrushed","stepAParallel","seriesIndices","indexOf","brushModelNotControll","controlSeries","stepAOthers","seriesBrushSelected","applyVisual","createOrUpdate","fn","lineX","noop","lineY","getBoundingRectFromMinMax","range","polygon","minMax","rg","visualSymbol","layoutPoints","modelUtil","getSeriesByIndex","queryDataIndex","getItemGraphicEl","getTooltipPosition","getValues","applyTransform","getDefaultLabel","SymbolClz","symbolProto","getSymbolSize","symbolSize","getScale","driftSymbol","drift","_createSymbol","keepAspect","symbolPath","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","draggable","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","onMouseOver","isInEmphasis","onEmphasis","onMouseOut","onNormal","incremental","useHoverLayer","__symbolOriginalScale","ratio","animateTo","useStyle","symbolRotate","symbolOffset","hoverAnimation","cursorStyle","hasItemOption","getShallow","elStyle","symbolInnerColor","liftZ","z2Origin","__z2Origin","useNameLabel","getName","isRectText","autoColor","isAnimationEnabled","fadeOut","keepLabel","symbolUtil","extendChartView","polar","oldData","_data","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","pt","cx","cy","diff","polyline","Polyline","newIdx","oldIdx","execute","eachItemGraphicEl","getLineStyle","stroke","areaStyleModel","hoverAreaStyleModel","polygonIgnore","isEmpty","parentModel","hoverPolygonIgnore","getAreaStyle","itemHoverStyle","labelHoverModel","labelDimIndex","AxisBuilder","AxisView","axisBuilderAttrs","selfBuilderAttrs","axisPointerClass","radiusAxisModel","radiusAxis","angleAxis","getAngleAxis","ticksCoords","getTicksCoords","axisAngle","radiusExtent","layoutAxis","axisBuilder","getGroup","isBlank","_splitLine","lineStyleModel","lineColors","lineCount","splitLines","colorIndex","Circle","r","mergePath","_splitArea","areaColors","splitAreas","prevRadius","Sector","r0","startAngle","endAngle","axisHelper","axisModelCommonMixin","_layout","getLayoutRect","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","_symbol","dataStack","createList","createScale","isInstance","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","axisDefault","valueAxisDefault","valueAxis","defaultsShow","extendComponentModel","boundaryGap","axisLine","axisTick","axisLabel","nameTextStyle","showName","nameFormatter","nameGap","triggerEvent","indicatorModels","indicatorOpt","iNameTextStyle","nameLocation","indName","getIndicatorModels","radius","splitLine","splitArea","indicator","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","mapType","coordFix","cp","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","onLeave","record","doEnter","currTrigger","register","records","useHandler","eventType","dis","pendings","showTip","hideTip","pendingList","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","Scale","OrdinalMeta","scaleProto","OrdinalScale","ordinalMeta","_ordinalMeta","_extent","parse","getOrdinal","rank","normalize","getTicks","ticks","getLabel","n","unionExtentFromData","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","niceExtent","create","tooltip","ChartView","Path","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","SKIP_PROPS","CandlestickView","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","hasValue","createNormalBox","setBoxCommon","createLarge","NormalBoxPath","buildPath","ctx","__simpleBox","lineTo","closePath","transInit","normalItemStyleModel","LargeBoxPath","__sign","largePoints","elP","elN","setLargeStyle","suffix","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","midAngle","cos","sin","PiePiece","sector","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","setShape","lineJoin","_updateLabel","labelText","labelLayout","linePoints","origin","labelLineModel","labelLineHoverModel","inside","verticalAlign","sectorGroup","_sectorGroup","isFirstRender","animationType","onSectorClick","piePiece","_createClipPath","clockwise","clipPath","containPoint","sqrt","simpleLayoutEdge","graph","eachEdge","curveness","node1","node2","simpleLayout","Polar","_axisHelper","CoordinateSystem","updatePolarScale","getRadiusAxis","onBand","setAxis","polarCreator","polarList","polarModel","findAxisModel","angleAxisModel","resizePolar","queryComponents","getSeriesStackId","getAxisKey","lastStackCoords","barWidthAndOffset","barSeries","columnsMap","axisExtent","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","maxWidth","barGap","barCategoryGap","coordSysName","barGapPercent","autoWidth","column","stack","lastColumn","widthSum","calRadialBar","filter","getSeriesByType","isSeriesFiltered","columnLayoutInfo","columnOffset","columnWidth","getOtherAxis","barMinHeight","barMinAngle","baseDim","stacked","valueAxisStart","baseValue","baseCoord","radiusSpan","dataToRadius","angle","dataToAngle","angleSpan","mathCos","mathSin","selectableMixin","geoCreator","GeoModel","layoutMode","getFilledRegions","_optionModelMap","reduce","optionModelMap","regionOpt","updateSelectedMap","aspectScale","boundingCoords","scaleLimit","getFormattedLabel","status","formatter","setZoom","setCenter","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","concat","getCoordinateSystems","coordinateSystemCreator","features","ctor","encodeHTML","layoutInfo","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","getRawDataItem","collapsed","formatTooltip","realRoot","roam","nodeScaleRatio","animationDuration","animationDurationUpdate","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","mathFloor","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","ONE_HOUR","d","getFullYear","getMonth","getDate","minInterval","maxInterval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","a","lo","hi","mid","bisect","level","yearSpan","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","clipOverflow","step","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","Component","parallelAxisIndex","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","mergeOption","_initDimensions","setAxisExpand","axisModels","dependentModels","parallelAxis","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","ancestor","moveSubtree","wl","wr","shift","change","modifier","prelim","defaultSeparation","defaultAncestor","pop","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","getViewRect","getBoxLayoutParams","pathTool","colorTool","matrix","vector","Transformable","ZImage","Image","Ring","BezierCurve","Arc","LinearGradient","RadialGradient","IncrementalDisplayable","mathMax","mathMin","EMPTY_OBJ","makePath","pathData","opts","createFromString","centerGraphic","resizePath","aspect","m","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftedColorMap","liftedColorCount","doSingleEnterHover","hoverStl","__hoverStl","__highlighted","__zr","elTarget","targetStyle","addHover","rollbackDefaultTextStyle","__hoverStlDirty","normalStyle","__normalStl","cacheElementStl","extendFrom","setDefaultHoverFillStroke","applyDefaultTextStyle","prop","liftedColor","lift","liftColor","doSingleLeaveHover","highlighted","removeHover","normalStl","doSingleRestoreHoverStyle","traverseCall","isGroup","setElementHoverStyle","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasisEntered","onElementMouseOut","enterEmphasis","leaveEmphasis","setAsHoverStyleTrigger","disable","__hoverStyleTrigger","setTextStyle","textStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","insideRawTextPosition","insideRollbackOpt","fontStyle","fontWeight","fontFamily","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","insideRollback","animateOrSetProps","isUpdate","props","animatableModel","postfix","animationDelay","getAnimationDelayParams","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","image","onload","img","subPixelOptimizeLine","param","x1","x2","y1","y2","subPixelOptimizeRect","originWidth","originHeight","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","showNormal","showEmphasis","normalStyleText","emphasisStyleText","setText","defaultColor","gTextStyleModel","trim","getTransform","mat","identity","mul","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap","elMap1","anid","oldEl","newProp","getAnimatableProps","clipPointsByRect","clipRectByRect","targetRect","iconStr","rectHover","eventTool","throttle","DataZoomView","sliderMove","linearMap","asc","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","dataZoomModel","_buildView","_updateView","clear","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","layoutParams","getLayoutParams","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","info","_prepareDataShadowInfo","series","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","eachTargetAxis","dimNames","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","stop","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","handleIndex","bRect","handleColor","getPercentRange","viewExtent","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","lastRange","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","barTransform","textPoint","labelFormatter","labelPrecision","getPixelPrecision","valueStr","showOrHide","changed","realtime","_dispatchZoomAction","localPoint","transformCoordToLocal","offsetX","offsetY","dataZoomId","getTargetCoordInfo","coordInfoList","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","link","addEdge","nodeData","coordSysCtor","dimensionNames","edgeData","datas","datasAttr","IndicatorAxis","getScaleExtent","Radar","radarModel","_indicatorAxes","indicatorModel","indicatorAxis","resize","getIndicatorAxes","indicatorIndex","coordToPoint","pointToData","closestAxis","radian","minRadianDiff","closestAxisIdx","coodToData","viewWidth","viewHeight","viewSize","indicatorAxes","radarSeries","increaseInterval","exp10","pow","log","LN10","f","rawExtent","fixedMin","fixedMax","getInterval","setInterval","halfSplitNumber","radarList","radar","categoryFilter","categoryVisual","edgeVisual","circularLayout","forceLayout","createView","registerProcessor","registerCoordinateSystem","dataFormatMixin","addCommas","fillLabel","MarkerModel","extraOpt","mergeDefaultAndTheme","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","getRawValue","formattedValue","html","setData","_number","viewRect","valueArr","mapArray","isAscending","b","getSortedIndices","sizeExtent","getLinePoints","offY","x0","nextIdx","textX","textY","labelPosition","isLabelInside","labelLineLen","DataDiffer","_layers","layerSeries","getLayerSeries","keyGetter","dataDiffer","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","points1","j","y0","textLayout","margin","layerGroup","stackedOnPoints","stackedOnSmooth","smoothConstraint","rectEl","createGridClipShape","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","propName","labelOptSingle","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","toArr","toObj","isTheme","seriesOpt","markPoint","markLine","markArea","links","mpData","mlData","breadcrumb","processSeries","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","calendar","calendarOpt","radarOpt","geoOpt","regionObj","timeline","timelineOpt","toolbox","toolboxOpt","feature","featureOpt","properties","excludes","includes","PI2","RADIAN","minAngle","validDataCount","unitRadian","roseType","stillShowZeroSum","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","paletteScope","categoriesData","getCategoriesData","categoryNameIdxMap","getColorFromPalette","category","brush","title","keep","dataView","lang","dataZoom","back","magicType","line","bar","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","treemap","boxplot","candlestick","k","heatmap","lines","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","isDataItemOption","DefaultDataProvider","dimSize","seriesDataToSource","_source","_offset","_dimSize","methods","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","dims","newData","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","dimInfo","dimType","parseAndCollect","retrieveRawValue","getProvider","getDimensionInfo","retrieveRawAttr","hasKeys","supplementVisualOption","Creater","mappings","__hidden","visualData","isValidType","__alphaForOpacity","replaceVisualOption","keys","scope","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","prepareVisualTypes","incrementalApplyVisual","getTargetSeries","seriesModelMap","modifyOutputEnd","overallReset","filterData","percentRange","getDataPercentWindow","valueRange","setRawRange","startValue","endValue","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","coordDimIndex","isExtraCoord","defaultTooltip","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","getDimensionTypeByAxis","barPolar","borderColorQuery","globalColors","eachRawSeriesByType","defaulColor","legendSymbol","getMarkerPosition","clampData","progressiveChunkMode","DEFAULT_BAR_BOUND","ContinuousModel","calculable","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","resetItemSize","auto","getSelected","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","getAxis","markerHelper","LineDraw","MarkerView","markLineTransform","mlModel","mlType","valueDataDim","axisInfo","getAxisInfo","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","dataTransform","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","containData","markLineFilter","dataFilter","updateSingleMarkerEndLayout","isFrom","xPx","yPx","markLineModel","fromData","__from","toData","__to","markerGroupMap","renderSeries","seriesData","lineDrawMap","lineDraw","coordDimsInfos","optData","dimValueGetter","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","dataModel","__keep","sankeyLayout","sankeyVisual","_echarts","_export","DATAS","MAIN_DATA","transferInjection","dataType","linkAll","linkSingle","changeInjection","cloneShallowInjection","cloneShallow","getLinkedData","main","TRANSFERABLE_METHODS","wrapMethod","CHANGABLE_METHODS","Region","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","coordModel","getRange","eventName","roamHandlers","coordId","containsPoint","directionInfo","getDirectionInfo","percentPoint","signal","pixelStart","pixelLength","pixel","pan","makeMover","oldX","oldY","newX","newY","scrollMove","scrollDelta","getPercentDelta","percentDelta","oldPoint","newPoint","ret","angleExtent","pointToCoord","singleAxis","coordSysDimDefs","registeredCoordSys","axisMap","getDimensionsInfo","hasNameEncode","dimInfoList","generateCoord","categoryAxisModel","stackCalculationInfo","setCalculationInfo","sampleItem","firstDataNotNull","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","isNumeric","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolMeta","symbolRepeatDirection","animationModel","output","boundingLength","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","getLineScale","prepareLineWidth","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","updateCommon","barRectHoverStyle","barPositionOutside","times","roundedTimes","cartesian","coordSysRect","newIndex","oldIndex","pictorialShapeStr","updateBar","SunburstPiece","that","virtualRoot","newRoot","getViewRoot","renderLabelForZeroData","newChildren","oldChildren","_oldChildren","getKey","processNode","newId","oldId","newNode","oldNode","removeNode","doRenderNode","dualTravel","viewRoot","virtualPiece","_onclickEvent","_rootToNode","renderRollUp","highlightPolicy","unhighlight","_initEvents","targetFound","nodeClick","linkTarget","open","targetNode","TimelineView","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","timelineModel","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","horizontal","vertical","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","labelRotation","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","translate","rotate","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","fromPos","boundIdx","newGroup","_renderAxisLine","lineCap","_renderAxisTick","tickCoord","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","labels","getViewLabels","labelItem","tickValue","normalLabelModel","formattedLabel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","callback","onCreate","pointer","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","trans","axisCoord","nextIndex","noAnimation","dragging","dataBackground","areaStyle","fillerColor","handleIcon","handleSize","handleStyle","showDetail","zoomLock","RADIAN_EPSILON","TIME_REG","quantityExponent","domain","clamp","subDomain","subRange","all","str","match","parseFloat","returnStr","arr","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","pi2","isRadianAroundZero","exec","hour","toUpperCase","UTC","quantity","exponent","quantile","ascArr","H","h","littleThan","currClose","splice","_format","getTooltipMarker","formatTpl","getTooltipRenderMode","DIMENSION_LABEL_REG","rawValue","rawDataIndex","renderModeOption","renderMode","isSeries","componentSubType","marker","labelProp","charAt","makeStyleMapper","lineDash","getLineDash","lineType","dotSize","dashSize","setCurrentIndex","isIndexMax","setPlayState","resetOption","preventIncremental","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","firstAxisModel","ignoreUpdateRangeUsg","getValueRange","axisDimName","hostedBy","getRangePropMode","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","shapes","useHandle","_createBarGroup","outOfRange","createPolygon","inRange","_dragHandle","textRect","getTextRect","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","isEnd","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","forceState","convertOpacityToAlpha","colorStops","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","textValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","isTargetSeries","element","global","zrender","timsort","Eventful","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","mapDataStorage","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PROCESSOR","FILTER","STATISTIC","LAYOUT","GLOBAL","CHART","COMPONENT","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","toLowerCase","MessageCenter","ECharts","dom","theme","themeStorage","_dom","renderer","devicePixelRatio","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","_api","getComponentByElement","modelInfo","__ecComponentInfo","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_ecEventProcessor","EventProcessor","_messageCenter","_pendingActions","_onframe","ecIns","isFinished","unfinished","bindRenderedEvent","setAsPrimitive","one","echartsProto","doConvertPixel","coordSysList","parseFinder","_disposed","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","error","getOption","getDevicePixelRatio","dpr","getRenderedCanvas","pixelRatio","getSvgDataUrl","svgSupported","storage","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","component","view","__viewId","url","getType","toDataURL","getConnectedDataURL","groupId","connectedGroups","canvasList","instances","chart","canvas","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","containPixel","models","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","clearColorPalette","setBackgroundColor","colorArr","stringify","performPostUpdateFuncs","componentDirtyList","componentView","__alive","seriesDirtyMap","chartView","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","restorePipelines","prepareStageTasks","prepareView","updateDirectly","condition","excludeSeriesId","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","payloads","batched","eventObj","eventObjBatch","isHighDown","batchItem","sub","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","renderTask","dirtyList","updateZ","renderComponents","updatePayload","perform","getPerformArgs","blendMode","blend","eachPendingDisplayable","displayable","updateBlend","elCount","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","browser","weChat","MOUSE_EVENT_NAMES","eventInfo","eveName","targetEl","packedEvent","actionType","setAttribute","DOM_ATTRIBUTE_KEY","normalizeQuery","cptQuery","dataQuery","otherQuery","condCptType","suffixes","dataKeys","reserved","propSuffix","suffixPos","args","check","filterForExposedEvent","host","propOnHost","afterTrigger","idBase","groupIdBase","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","preprocessorFunc","priority","processor","normalizeRegister","test","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","getCoordinateSystemDimensions","layoutTask","setCanvasCreator","creator","$override","registerMap","geoJson","specialAreas","getMap","retrieveMap","geoJSON","dataTool","___ec_export","TooltipRichContent","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_renderMode","_newLine","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","triggerOn","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","newLine","markers","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","getAxisRawValue","axisValueLabel","seriesTooltip","newMarkers","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","undefined","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","cbTicket","contentSize","vAlign","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","parsePath","thisParentModel","Ctor","setReadOnly","customizeGetParent","Single","singles","actionTypes","targetInfo","retrieveTargetInfo","originViewRoot","aboveViewRoot","resetViewRoot","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","_createPolyline","polylineProto","_updateCommonStl","hoverLineStyle","legendSelectActionHandler","selectedMap","isToggleSelect","legendData","isItemSelected","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","SymbolDraw","EffectSymbol","pointsLayout","_symbolDraw","effectSymbolDraw","_updateGroupTransform","getRoamTransform","HeatmapLayer","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","coordSysType","dataDims","dataToRect","contentShape","inRangeVisuals","targetVisuals","outOfRangeVisuals","hmLayer","_hmLayer","roamTransform","lng","lat","isInRange","dataSpan","getIsInContinuousRange","lastIndex","getIsInPiecewiseRange","getNormalizer","getColorMapper","curveTool","v1","v2","v3","v2DistSquare","distSquare","mathAbs","intersectCurveCircle","curvePoints","p0","radiusSquare","_t","nextDiff","tmp0","quadraticSubdivide","pts","pts2","__original","originalPoints","copy","scaleAndAdd","snap","triggerTooltip","shadowStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","axisModelCreator","AxisModel","gridIndex","gridId","getAxisType","extraOption","updateCenterAndZoom","seriesGroup","interactionMutex","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","controlType","zoomOnMouseWheel","moveOnMouseMove","moveOnMouseWheel","preventDefaultMouseMove","isDragging","isPinching","_pinching","notLeftMouse","isAvailableBehavior","gestureEvent","isTaken","shouldZoom","shouldMove","wheelDelta","absWheelDeltaDelta","factor","checkPointerAndTrigger","absDelta","pinchScale","pinchX","pinchY","behaviorToCheck","contollerEvent","settings","setting","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","targetShape","makeLineShape","getAxisDimIndex","shadow","makeRectShape","registerAxisPointerClass","SingleAxis","_init","axisPointerEnabled","_adjustAxis","_updateAxisTransform","coordBase","extentSum","toLocalCoord","getAxes","getTooltipAxes","baseAxes","coordToData","parseGeoJson","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","mapRecord","parsed","message","regionName","specialArea","regionRect","union","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","performRawSeries","isLargeRender","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","FunnelPiece","funnelPieceProto","opacityAccessPath","funnelPiece","dataOpt","distance","offsetCenter","detail","dev","dataSelectableMixin","MapSeries","needsDrawMap","_createSelectableList","getMapType","_fillOption","seriesNames","otherIndex","originalData","showLegendSymbol","dataRangeHoverLink","NodeHighlightPolicy","NONE","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","visualMetaList","getRootId","getNodeColor","stateStyle","activeNode","policy","onHighlight","onDownplay","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","featureManager","saveAsImageLang","SaveAsImage","unusable","$a","download","href","MouseEvent","ie","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","write","evt","bubbles","cancelable","dispatchEvent","colorPaletteMixin","mergeLayoutParam","createTask","_sourceHelper","dataTask","dataTaskCount","dataTaskReset","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","newSeriesOption","task","getCurrentTask","setOutputEnd","outputData","multipleSeries","isRichText","markerId","formatSingleValue","tooltipDims","tooltipDimLen","isValueArr","vertially","setEachItem","markName","dimHead","dimHeadStr","valStr","formatArrayValue","colorEl","isNameSpecified","colorStr","animationEnabled","requestColorNum","coordDimToDataDim","getAxisTooltipData","pipeTask","nameArr","getSeriesAutoName","dataTaskProgress","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","themeRiverLayout","baseY0","timeDim","layerPoints","singleLayer","base","layerNum","pointNum","sums","temp","l","computeBaseline","baseLine","ky","layerIndex","colorList","getBorderLineDash","ATTR","giveStore","cleanStore","store","dataZoomInfo","theDataZoomId","theCoordId","dataZoomInfos","newRecord","createController","typePriority","controllerParams","type_true","type_move","type_false","type_undefined","oneType","getPathToRoot","validPayloadTypes","targetNodeId","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","rep","w","fixed","getEdgeByIndex","n1","n2","forceInstance","gravity","oldStep","getNodeByIndex","stopped","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","onZeroRecords","otherAxes","onZeroAxisIndex","canOnZeroToAxis","getOnZeroRecordKey","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","axisExtentSum","updateAxisTransform","labelUnionRect","axesMapOnDim","coordList","getCartesians","_findConvertTarget","xAxisModel","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","addAxis","isCartesian2D","axesModels","findAxesModels","otherAxis","axesTypes","grids","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","fadeInItem","SankeyShape","cpx1","cpy1","cpx2","cpy2","bezierCurveTo","_focusAdjacencyDisabled","sankeyView","curve","curvature","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","sy","dragX","dragY","localX","localY","edgeDataIndex","focusNodeAdjacency","focusNodeAdj","outEdges","inEdges","unfocusNodeAdjacency","geoJSONLoader","geoSVGLoader","loaders","svg","regionsMap","mapRecords","singleSource","makeInvoker","hostKey","results","makeBackground","_contentGroup","_backgroundEl","viewportSize","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","newline","inactiveColor","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","hitRect","formatterParams","legendIndex","dataName","CATEGORY_DEFAULT_VISUAL_INDEX","_normalizeData","normalizers","visualHandler","visualHandlers","_doMap","normalizeVisualRange","hasSpecialVisual","originIndex","preprocessForPiecewise","categoryMap","visualArr","setVisualToOption","preprocessForSpecifiedCategory","normalized","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","fastLerp","parsedVisual","linear","piecewise","getSpecifiedVisual","doMapFixed","colorHue","makePartialColorVisualHandler","modifyHSL","colorSaturation","colorLightness","colorAlpha","modifyAlpha","makeDoMap","getter","setter","symbolCfg","doMapToArray","applyValue","sourceExtent","addVisualHandler","eachVisual","mapVisual","isPrimary","newVisual","newVal","hasVisual","types","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","makeSeriesScope","updateElCommon","_dataGroup","newDataIndex","oldDataIndex","taskParams","active","inactive","_dataProvider","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","getRawValueFromStore","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","originalChunk","newDimStore","getDimensionsOnCoord","dimensionsSummary","nameList","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","invertedIndices","getIndices","thisCount","buffer","getByRawIndex","rawIdx","dimStore","_getFast","values","dimData","initialExtent","dimExtent","currEnd","setApproximateExtent","getCalculationInfo","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","otherList","thisList","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","dimensionInfoList","injectFunction","originalMethod","keysFunction","sortKeysFunction","sortKeys","entries","array","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","TYPE_DELIMITER","IS_CONTAINER","classBase","superClass","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","Clz","classAttr","enableClassManagement","entity","registerClass","Clazz","checkClassType","makeContainer","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","hasSubTypes","registerWhenExtend","originalExtend","ignoreSize","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textBaseline","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","hasParallelSeries","createParallelIfNeeded","axisOption","parallelOption","mergeAxisOptionFromParallel","isPolyline","isLarge","lineCoords","segCount","totalCoordsCount","getLineCoordsCount","getLineCoords","axisPointerModelHelper","_axisPointer","fixValue","updateAxisPointer","force","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","ec2Types","controlStyle","compatibleEC2","legendModels","findComponents","categoryNames","mapSymbolLayout","mapDataStatistic","createDataSelectAction","effectType","showEffectOn","rippleEffect","barItemStyle","coordinateSystemType","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","cartesian2d","animateProperty","animateTarget","isRadial","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","labelPositionOutside","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","registerSubTypeDefaulter","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","axisDataLen","scaleType","originalExtent","getCategories","setBlank","isBaseAxisAndHasBarSeries","barSeriesModels","adjustedScale","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","makeLabelFormatter","tpl","categoryTickStart","tick","realNumberScaleTicks","tickCount","categoryScaleExtent","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","axisLabelModel","unrotatedSingleRect","singleRect","plain","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","taskRecord","_pipelineMap","pCtx","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","modDataCount","modBy","dataLen","threshold","pipelineMap","head","tail","pipe","stageTaskMap","createOnAllSeries","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","removeKey","createSeriesStageTask","overallTaskReset","overallProgress","createStub","getSeries","stubReset","onDirty","stubOnDirty","agent","__block","createOverallStageTask","getUpstream","upstreamContext","stubProgress","getDownstream","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","dataEach","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","lastFrame","frame","lerp","PolarAxisPointer","animationThreshold","coordValue","labelPos","innerTextLayout","getLabelPosition","buildLabelElOption","makeSectorShape","geoCoordMap","Russia","United States","United States of America","_buildAxes","_buildSplitLineAndArea","axisBuilders","splitLineModel","splitAreaModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","themeRiverVisual","componentUtil","boxLayoutMixin","themeModel","newCptOption","fields","optList","Class","enableSubTypeDefaulter","enableTopologicalTravel","deps","v2ApplyTransform","TransformDummy","_roamTransformable","_center","_zoom","setBoundingRect","setViewRect","rawTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","rawTransformMatrix","defaultCenter","roamTransformable","_rawTransform","invTransform","bbox","_oldTree","_updateViewCoordSys","symbolNeedsDraw","updateNode","symbolEl","_nodeScaleRatio","_updateNodeAndLinkScale","fromPoints","viewCoordSys","_viewCoordSys","nodeScale","_getNodeGlobalScale","invScale","groupScale","groupZoom","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","rad","isLeft","rootLayout","textOrigin","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","eachAfter","eachBefore","newSnapshot","snapshot","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","nameRotate","nameTruncate","ellipsis","placeholder","showMinLabel","showMaxLabel","categoryAxis","deduplication","alignWithLabel","timeAxis","logAxis","logBase","idxMap","concatArray","mergeAll","Uint32Arr","Float64Arr","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","effect","trailLength","autoPositionValues","targetValue","visualCluster","visualObj","controllerVisuals","visualMapping","positionElement","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","LineGroup","_ctor","lineDrawProto","isPointNaN","lineNeedsDraw","isPersistent","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","updateIncrementalAndHover","_clearIncremental","_incremental","clearDisplaybles","_mapDraw","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","assembleOtherSeries","vals","argLen","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","headers","header","items","parseTSVContents","blockMeta","axisKey","hasName","parseListContents","DataView","tryMergeDataOption","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","removeChild","viewMain","textarea","tables","seriesGroupByCategoryAxis","otherSeries","meta","other","groupSeries","valueAxisDim","columns","getContentFromModel","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","addEventListener","keyCode","which","selectionStart","selectionEnd","substring","newSeriesOptList","actionInfos","polarOptArr","polarNotRadar","polarOpt","polarIndex","radarIndex","foundAxisModel","layoutBox","boxLayoutParams","positions","bbWidth","bbHeight","BrushController","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","mount","_isZoomActive","featureModel","zoomActive","dataZoomSelectActive","setIconStatus","retrieveAxisSetting","include","setPanels","makePanelOpts","xAxisDeclared","yAxisDeclared","enableBrush","brushStyle","updateZoomBtnStatus","updateBackBtnStatus","handlers","unmount","nextActive","updateCovers","matchOutputRanges","coordRange","setBatch","found","dzModel","findDataZoom","dataZoomOpts","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","coordSysLists","coordIndex","save","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","__dirty","pointAt","toPos","tangent","tangentAt","__position","halfPercent","__verticalAlign","__textAlign","visualOpacity","retrieve3","defaultLabelColor","rawVal","normalText","emphasisText","labelStyle","linePath","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","topologicalTravel","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","existComponent","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","q","indexAttr","idAttr","nameAttr","queryCond","components","queryResult","oneSeries","getSeriesCount","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","graphicUtil","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","newList","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","copyLayoutParams","mergeNewElOptionToExist","existItem","hv","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","elOptionStyle","elOptionCleaned","LOCATION_PARAMS","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","setEventData","elOptions","parentEl","containerInfo","boundingMode","bounding","straightLineProto","bezierCurveProto","isLine","defaultSymbolType","hasCallback","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","existence","_add","_update","_remove","newDataIndexMap","oldDataKeyArr","newDataKeyArr","nest","resolveCollisions","nodesByBreadth","nodeGap","nodeY","relaxRightToLeft","alpha","weightedTarget","getEdgeValue","weightedSource","relaxLeftToRight","nodeWidth","value1","value2","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextNode","oidx","indexEdge","nodeIndex","moveSinksRight","kx","scaleNodeBreadths","computeNodeBreadths","getKeyFunction","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","markerRich","startId","endId","substr","updateMarkerLayout","markPointModel","mpModel","symbolDrawMap","symbolDraw","sizeCalculable","CalendarModel","cellSize","dayLabel","firstDay","monthLabel","yearLabel","mergeAndNormalizeLayoutParams","raw","hvIdx","echartsAPIList","chartInstance","parallelAxisModel","setActiveIntervals","intervals","Parallel","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","fixExtentWithBands","nTick","tickModel","getTickModel","tickCategoryInterval","ticksLen","last","ticksItem","fixOnBandTicksCoords","getRotate","LegendModel","_updateData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","genName","fromZero","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","extra","pointsConverter","createGraphFromNodeEdge","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","getEdgeData","sourceName","targetName","circular","rotateLabel","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","stackResultDim","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","debounceDelay","fnAttr","originFn","lastThrottleType","markerModelKey","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","targetNameList","fullNameList","noEntryList","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationEasingUpdate","roundNumber","_intervalPrecision","thisExtent","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fetchers","fetch","roundingErrorFix","mathPow","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","originalVal","dataColor","radarLayout","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","ToolboxModel","featureName","Feature","showTitle","iconStyle","containLabel","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeModel","nodeLayout","isInView","nodeItemStyleModel","levelItemStyle","visuals","visualName","buildVisuals","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","mapping","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","mapIdToIndex","getValueVisualDefine","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","markerTypeCalculator","average","dataDimToCoordDim","baseDataDim","hasXAndY","hasXOrY","RadiusAxis","radiusToData","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","emptyItemWidth","upperLabel","gapWidth","visualDimension","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","setLayoutInfo","idIndexMap","_idIndexMap","_idIndexMapCount","mapLocation","largeLayout","unitAngle","x12","y12","adjustEdge","_lineDraw","_firstRender","groupNewProp","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","circularRotateLabel","adjacentEdge","seiresModelMap","__paletteScope","dataAll","filteredIdx","singleDataColor","maskColor","mask","arc","animateShape","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","containerWidth","containerHeight","rootRect","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","upperHeight","getUpperLabelHeight","estimateRootSize","viewRootLayout","squarify","hideChildren","thisLayout","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","isLeafRoot","initChildren","rowFixedLength","best","score","worst","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","isAboveViewRoot","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","STACK_PREFIX","isOnCartesian","isInLargeMode","seriesInfoList","doCalBarWidthAndOffset","seriesInfo","valueAxisHorizontal","valueDimIdx","valuePair","getValueAxisStart","valueStart","getLayoutOnAxis","widthAndOffsets","lastStackCoordsOrigin","isValueAxisH","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","linkedNodesFinder","effectedModels","prepareDataCoordInfo","valueOrigin","getValueStart","baseAxisDim","baseDataOffset","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","RadarSeries","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","beforeBrush","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","disabled","lineContain","quadraticContain","LargeLineShape","segs","quadraticCurveTo","findDataIndex","containStroke","LargeLineDraw","largeLineProto","lineEl","_setCommon","addDisplayable","__startIndex","isIncremental","funnelLayout","getStore","take","resourceKey","userKey","release","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","msg","colorPalette","crossStyle","legend","color0","borderColor0","mapModel","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","__mapOriginalZ2","PointerPath","formatLabel","posInfo","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","tickLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","detailModel","linesLayout","linesVisual","polygonContain","getLineSelectors","xyIndex","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v4","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","extraCssText","textContain","AngleAxis","angleToData","ordinalScale","ordinalExtent","unitSpan","unitH","dh","cache","lastAutoInterval","lastTickCount","percentPrecision","borderType","VISUAL_PRIORITY","resultVisual","visualMeta","concreteDim","opacityMap","itemOpacity","LargeSymbolDraw","_updateSymbolDraw","_finished","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","_updateLineDraw","isSvg","getLayer","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","_clearLayer","hasEffect","_hasEffet","_isPolyline","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","brushHelper","elementList","fromAxisAreaSelect","oldAxisGroup","_axisGroup","coordSysModel","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","strokeContainThreshold","_refreshBrushController","extentLen","enableGlobalPan","panelId","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","removeOnClick","activeIntervals","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","clazzUtil","componentProto","splitList","Breadcrumb","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","nodeGroup","background","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","renderNode","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","easing","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_onPan","_onZoom","_clearController","mouseX","mouseY","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","contentWidth","contentHeight","renderContent","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","truncate","outerWidth","outerHeight","minChar","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","zInLevel","zb","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","rawCategoryData","commonLabelModel","labelTextAlign","labelTextVerticalAlign","prevAngle","r1","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","ecUtil","util","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","userConfig","setAreas","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","length2","len2","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelLineLen2","x3","leftList","rightList","avoidOverlap","singleAxisHelper","SingleAxisView","selfBuilderAttr","seriesModelMixin","CandlestickSeries","defaultValueDimensions","animationUpdate","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","includeMainTypes","setOutputRanges","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","findTargetInfo","coordSyses","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getDefaultBrushType","getPanelRect","defaultBrushType","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","geoModels","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","coordinates","c","c2","decode","featureObj","setNodePosition","pieLayout","updateController","modelId","$from","IRRELEVANT_EXCLUDES","targetCoordSysModel","topTarget","colorAll","crs","childNum","labelDims","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","_parseSVG","parseSVG","makeViewBoxTransform","originRoot","buildGraphic","field","rootMap","originRootHostKey","svgXML","ignoreViewBox","ignoreRootClip","svgWidth","svgHeight","viewBoxRect","viewBoxTransform","elRoot","LargeSymbolPath","symbolProxy","symbolProxyShape","getContext","afterBrush","setTransform","fillRect","restoreTransform","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_traversalHelper","_layoutHelper","sep","coorX","coorY","finalCoor","commonLayout","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","compare","oldOption","oldOptionBackup","newParsedOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","indices1","indices2","rootDepth","isAsc","sortOrder","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","axisTrigger","collect","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","Cartesian","getAxesByScale","axisX","axisY","xScale","yScale","xAxisExtent","yAxisExtent","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","boundValue","boundPercent","seriesExtent","isCategoryAxis","fixExtentByAxis","calculateDataExtent","dataWindow","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","originalLarge","originalProgressive","checkPropInLink","linkPropValue","axisPropValue","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","axesInfoInCoordSys","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","tooltipAxisPointerModel","volatileOption","labelOption","tooltipAxisPointerLabelShow","makeAxisPointerModel","involveSeries","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","collectSeriesInfo","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","gradient","putImageData","brushCanvas","_brushCanvas","clearRect","beginPath","gradientPixels","pixelsSingleState","Uint8ClampedArray","processedMapType","mapSymbolOffsets","subMapSeries","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","SankeySeries","localPosition","rawDataOpt","layoutIterations","makeAction","Calendar","calendarModel","_rangeInfo","_sw","_sh","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","stackResultDimension","targetData","isStackedByIndex","v0","byValue","stackedDataRawIndex","stackedDimension","stackedByDimension","stackedOver","stackInfo","stackInfoMap","legendFilter","_simpleLayoutHelper","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","radioTypes","radio","newSeriesOpt","currentType","AxisPointerView","fixClipWithShadow","vec2Min","vec2Max","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","prevP","ctrlLen","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","PictorialBarSeries","sunburstLayout","previousZoom","fixX","fixY","_axesLayout","restrict","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWindow","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","nameTruncateMaxWidth","axisNameAvailableWidth","axisLabelShow","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","lenj","getActiveState","getSlidedAxisExpandWindow","behavior","pointCoord","triggerArea","useJump","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","treemapVisual","treemapLayout","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","makeFont","needPutOnTop","topOffset","oldName","isUserFeatureName","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconName","createIconPaths","iconStatus","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","_onHandleDragEnd","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xDimIndex","BoxplotView","constDim","updateNormalBoxData","BoxPath","TimelineModel","SliderTimelineModel","checkpointStyle","playIcon","stopIcon","nextIcon","prevIcon","colorQuery","opacityQuery","restoreLang","Restore","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","updateCache","styleEmphasis","barLayout","currentSeriesIndices","userParams","dataInsideLength","wrapEncodeDef","currDirty","doCreateOrUpdate","isRoot","simplyRemove","elOptionType","elOptionShape","__customGraphicType","getPathData","__customPathData","hasOwn","__customImagePath","__customText","pathRect","transitionProps","targetOpacity","disableStyleEmphasis","__cusHasEmphStl","updateEl","newLen","mergeChildren","$mergeChildren","byName","diffChildrenByName","processAddUpdate","processRemove","childOption","useTransform","setIncrementalAndHoverLayer","elementName","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","autoInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","labelCategoryInterval","categoryInterval","onlyTick","startTick","showMinMax","addItem","tVal","rawLabel","makeCategoryLabels","makeRealNumberLabels","ticksCache","optionTickInterval","labelsResult","makeCategoryTicks","axisRotate","fetchAutoCategoryIntervalCalculationParams","unitW","maxW","maxH","dw","DUMMY_COMPONENT_NAME_PREFIX","cptOption","innerUniqueIndex","subOpts","subOptName","newCptOptions","idMap","existCpt","idNum","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","otherDataIndices","isData","hostObj","parsedKey","queryType","queryParam","domSupported","_setting","_isBlank","_baseAxisDim","addOrdinal","xAxisType","yAxisType","baseAxisDimIndex","baseAxisType","otherAxisType","newOptionData","newItem","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colors","paletteNum","getNearestColorPalette","doneCallback","elExistsMap","fixPosition","renderPlanner","Chart","renderTaskPlan","renderTaskReset","toggleHighlight","chartProto","elSetState","childCount","progressMethodMap","forceFirstProgress","seriesItem","replacableOptionKeys","dataBound","contentColor","getTargetSeriesIndices","optionSeriesIndex","isMinMax","optDim","listDimensions","isCalculationCoord","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","modelHelper","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","setScrollDataIndex","parseXML","rawGeoJson","rawSpecialAreas","parsers","JSON","Function","groupResult","axisList","groupSeriesByAxis","groupItem","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","boxWidth","calculateBase","halfWidth","median","end1","end2","end4","end5","layEndLine","endCenter","layoutSingleSeries","replaceReg","replaceMap","&","<",">","\"","'","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","truncateText","upperCaseFirst","group1","paramsList","seriesLen","alias","formatTplSimple","isUTC","utc","M","s","S","autoPlay","rewind","playInterval","_names","_initData","dataArr","idxArr","positionMap","stackedDim","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","targetDim","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sw","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","resizeGeo","leftTop","rightBottom","boxLayoutOption","useCenterAndSize","setGeoCoords","geoList","mapModelGroupBySeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","dataNameMap","pp","friction","v12","nLen","repFact","getSpanSign","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","dataSample","treeLayout","_helper","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","cmd","idx1","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","SingleAxisPointer","getPointDimIndex","ScrollableLegendModel","pageButtonItemGap","pageButtonPosition","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","lineAnimationDiff","_poly","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","forSymbol","createPolarClipShape","xExtent","yExtent","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","getIsIgnoreFunc","isAuto","availSize","canShowAllSymbolForCategory","categoryDataDim","labelMap","lineGroup","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","getStackedOnPoints","isIgnoreFunc","__temp","_step","_newPolygon","isIgnore","_stackedOnPoints","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","getVisualGradient","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","animators","CartesianAxisView","_splitAreaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","prev","MAX_NUMBER","loopGeo","newRegion","parallelPreprocessor","_handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushMode","transformable","inBrush","outOfBrush","Task","define","_reset","_plan","_onDirty","_dirty","taskProto","planResult","upTask","_upstream","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","doProgress","outputDueEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","_callingProgress","downTask","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","localCursorPoint","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","getAvailableSize","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","symbolCtor","_symbolCtor","symbolDrawProto","normalizeUpdateOpt","SymbolCtor","enableAnimation","PieSeries","hoverOffset","avoidLabelOverlap","HV_NAMES","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","vbox","hbox","containerRect","verticalMargin","horizontalMargin","needLocalTransform","elPos","targetOption","hResult","vResult","newParams","newValueCount","merged","mergedValueCount","hasProp","boxplotVisual","boxplotLayout","matrixUtil","makeAxisEventDataBase","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","tickEl","buildAxisTick","labelEls","isSilent","itemLabelModel","targetType","buildAxisLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","truncatedText","__fullText","__truncatedText","axisRotation","firstRect","nextRect","mRotationBack","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","overwrite","dataRange","componentName","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","nw","se","DEFAULT_BRUSH_OPT","baseUID","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","mouseHandlers","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","getPanelByPoint","panel","panels","pn","getPanelByCover","clearCovers","covers","originalLength","getTrackEnds","track","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","localD","localZero","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","doEnableBrush","panelOpts","eachCover","brushOptionList","tmpIdPrefix","oldCovers","newCovers","addOrUpdate","newBrushOption","handleDragEnd","currPanel","setCursorStyle","resetCursor","getLineRenderer","localTrack","_radiusAxis","_angleAxis","maxAngle","Gradient","colorAccessPath","samplers","nearest","indexSampler","sampler","PATH_COLOR","BoxplotSeries","brushLang","Brush","_brushMode","isBrushed","command","paddings","confineInContainer","bgColor","styleModel"],"mappings":"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","file":"js/echarts.9879f473.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      zoom: coordSys.getZoom()\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar View = require(\"../View\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.nameCoordMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n\n  /**\n   * @override\n   */\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none'; // If mouse occsionally move over the tooltip, a mouseout event will be\n    // triggered by canvas, and cuase some unexpectable result like dragging\n    // stop, \"unfocusAdjacency\". Here `pointer-events: none` is used to solve\n    // it. Although it is not suppored by IE8~IE10, fortunately it is a rare\n    // scenario.\n\n    el.style.pointerEvents = this._enterable ? 'auto' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  },\n  getOuterSize: function () {\n    var width = this.el.clientWidth;\n    var height = this.el.clientHeight; // Consider browser compatibility.\n    // IE8 does not support getComputedStyle.\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      var stl = document.defaultView.getComputedStyle(this.el);\n\n      if (stl) {\n        width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n        height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n      }\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(parallelVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function () {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _component = require(\"../../util/component\");\n\nvar getUID = _component.getUID;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, regionsGroup, api, fromView) {\n  regionsGroup.off('click');\n  regionsGroup.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    regionsGroup.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    regionsGroup.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, regionsGroup);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, regionsGroup) {\n  // FIXME\n  regionsGroup.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {string}\n   * @private\n   */\n\n  this.uid = getUID('ec_map_draw');\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n  /**\n   * @type {string}\n   */\n\n  this._mapName;\n  /**\n   * @type {boolean}\n   */\n\n  this._initialized;\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._regionsGroup = new graphic.Group());\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._backgroundGroup = new graphic.Group());\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n\n    this._updateBackground(geo);\n\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var scale = geo.scale;\n    var transform = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!regionsGroup.childAt(0) || payload) {\n      group.attr(transform);\n    } else {\n      graphic.updateProps(group, transform, mapOrGeoModel);\n    }\n\n    regionsGroup.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      regionsGroup.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, regionsGroup, api, fromView);\n    updateMapSelected(mapOrGeoModel, regionsGroup);\n  },\n  remove: function () {\n    this._regionsGroup.removeAll();\n\n    this._backgroundGroup.removeAll();\n\n    this._controller.dispose();\n\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = {};\n  },\n  _updateBackground: function (geo) {\n    var mapName = geo.map;\n\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n\n    this._mapName = mapName;\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n\n      if (this._updateGroup) {\n        var scale = this.group.scale;\n\n        this._regionsGroup.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  symbolPath.__symbolOriginalScale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    // Note: consider `off`, should use static function here.\n    symbolPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n\nfunction onMouseOver() {\n  // see comment in `graphic.isInEmphasis`\n  !graphic.isInEmphasis(this) && onEmphasis.call(this);\n}\n\nfunction onMouseOut() {\n  // see comment in `graphic.isInEmphasis`\n  !graphic.isInEmphasis(this) && onNormal.call(this);\n}\n\nfunction onEmphasis() {\n  // Do not support this hover animation util some scenario required.\n  // Animation can only be supported in hover layer when using `el.incremetal`.\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  var scale = this.__symbolOriginalScale;\n  var ratio = scale[1] / scale[0];\n  this.animateTo({\n    scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n  }, 400, 'elasticOut');\n}\n\nfunction onNormal() {\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  this.animateTo({\n    scale: this.__symbolOriginalScale\n  }, 400, 'elasticOut');\n}\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'china') {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  // FIXME\n  // Revert becuase it brings bar progressive bug.\n  // The complete fix will be added in the next version.\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var cx = seriesModel.coordinateSystem.cx;\n    var cy = seriesModel.coordinateSystem.cy;\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    // If svg used, aspectScale is 1 by default.\n    // aspectScale: 0.75,\n    aspectScale: null,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as axisHelper from './axisHelper';\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    roam: false,\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.4,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* The `scaleLevels` references to d3.js. The use of the source\n* code of this file is also subject to the terms and consitions\n* of its license (BSD-3Clause, see <echarts/src/licenses/LICENSE-d3>).\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3, see the license statement at the top of this file.\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 70], // 10w\n['quarter', ONE_DAY * 95], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* The tree layout implementation references to d3.js\n* (https://github.com/d3/d3-hierarchy). The use of the source\n* code of this file is also subject to the terms and consitions\n* of its license (BSD-3Clause, see <echarts/src/licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke !== 'none';\n} // Most lifted color are duplicated.\n\n\nvar liftedColorMap = zrUtil.createHashMap();\nvar liftedColorCount = 0;\n\nfunction liftColor(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  var liftedColor = liftedColorMap.get(color);\n\n  if (!liftedColor) {\n    liftedColor = colorTool.lift(color, -0.1);\n\n    if (liftedColorCount < 10000) {\n      liftedColorMap.set(color, liftedColor);\n      liftedColorCount++;\n    }\n  }\n\n  return liftedColor;\n}\n\nfunction cacheElementStl(el) {\n  if (!el.__hoverStlDirty) {\n    return;\n  }\n\n  el.__hoverStlDirty = false;\n  var hoverStyle = el.__hoverStl;\n\n  if (!hoverStyle) {\n    el.__normalStl = null;\n    return;\n  }\n\n  var normalStyle = el.__normalStl = {};\n  var elStyle = el.style;\n\n  for (var name in hoverStyle) {\n    // See comment in `doSingleEnterHover`.\n    if (hoverStyle[name] != null) {\n      normalStyle[name] = elStyle[name];\n    }\n  } // Always cache fill and stroke to normalStyle for lifting color.\n\n\n  normalStyle.fill = elStyle.fill;\n  normalStyle.stroke = elStyle.stroke;\n}\n\nfunction doSingleEnterHover(el) {\n  var hoverStl = el.__hoverStl;\n\n  if (!hoverStl || el.__highlighted) {\n    return;\n  }\n\n  var useHoverLayer = el.useHoverLayer;\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\n  var zr = el.__zr;\n\n  if (!zr && useHoverLayer) {\n    return;\n  }\n\n  var elTarget = el;\n  var targetStyle = el.style;\n\n  if (useHoverLayer) {\n    elTarget = zr.addHover(el);\n    targetStyle = elTarget.style;\n  } // Consider case: only `position: 'top'` is set on emphasis, then text\n  // color should be returned to `autoColor`, rather than remain '#fff'.\n  // So we should rollback then apply again after style merging.\n\n\n  rollbackDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    cacheElementStl(elTarget);\n  } // styles can be:\n  // {\n  //    label: {\n  //        show: false,\n  //        position: 'outside',\n  //        fontSize: 18\n  //    },\n  //    emphasis: {\n  //        label: {\n  //            show: true\n  //        }\n  //    }\n  // },\n  // where properties of `emphasis` may not appear in `normal`. We previously use\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n  // But consider rich text and setOption in merge mode, it is impossible to cover\n  // all properties in merge. So we use merge mode when setting style here, where\n  // only properties that is not `null/undefined` can be set. The disadventage:\n  // null/undefined can not be used to remove style any more in `emphasis`.\n\n\n  targetStyle.extendFrom(hoverStl);\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\n  applyDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    el.dirty(false);\n    el.z2 += 1;\n  }\n}\n\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\n    targetStyle[prop] = liftColor(targetStyle[prop]);\n  }\n}\n\nfunction doSingleLeaveHover(el) {\n  if (el.__highlighted) {\n    doSingleRestoreHoverStyle(el);\n    el.__highlighted = false;\n  }\n}\n\nfunction doSingleRestoreHoverStyle(el) {\n  var highlighted = el.__highlighted;\n\n  if (highlighted === 'layer') {\n    el.__zr && el.__zr.removeHover(el);\n  } else if (highlighted) {\n    var style = el.style;\n    var normalStl = el.__normalStl;\n\n    if (normalStl) {\n      rollbackDefaultTextStyle(style); // Consider null/undefined value, should use\n      // `setStyle` but not `extendFrom(stl, true)`.\n\n      el.setStyle(normalStl);\n      applyDefaultTextStyle(style);\n      el.z2 -= 1;\n    }\n  }\n}\n\nfunction traverseCall(el, method) {\n  el.isGroup ? el.traverse(function (child) {\n    !child.isGroup && method(child);\n  }) : method(el);\n}\n/**\n * Set hover style of element.\n *\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\n * @param {Object|boolean} [hoverStl] The specified hover style.\n *        If set as `false`, disable the hover style.\n *        Similarly, The `el.hoverStyle` can alse be set\n *        as `false` to disable the hover style.\n *        Otherwise, use the default hover style if not provided.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`\n */\n\n\nfunction setElementHoverStyle(el, hoverStl) {\n  hoverStl = el.__hoverStl = hoverStl !== false && (hoverStl || {});\n  el.__hoverStlDirty = true;\n\n  if (el.__highlighted) {\n    doSingleLeaveHover(el);\n    doSingleEnterHover(el);\n  }\n}\n/**\n * Emphasis (called by API) has higher priority than `mouseover`.\n * When element has been called to be entered emphasis, mouse over\n * should not trigger the highlight effect (for example, animation\n * scale) again, and `mouseout` should not downplay the highlight\n * effect. So the listener of `mouseover` and `mouseout` should\n * check `isInEmphasis`.\n *\n * @param {module:zrender/Element} el\n * @return {boolean}\n */\n\n\nfunction isInEmphasis(el) {\n  return el && el.__isEmphasisEntered;\n}\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleEnterHover);\n}\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasisEntered && traverseCall(this, doSingleLeaveHover);\n}\n\nfunction enterEmphasis() {\n  this.__isEmphasisEntered = true;\n  traverseCall(this, doSingleEnterHover);\n}\n\nfunction leaveEmphasis() {\n  this.__isEmphasisEntered = false;\n  traverseCall(this, doSingleLeaveHover);\n}\n/**\n * Set hover style of element.\n *\n * [Caveat]:\n * This method can be called repeatly and achieve the same result.\n *\n * [Usage]:\n * Call the method for a \"root\" element once. Do not call it for each descendants.\n * If the descendants elemenets of a group has itself hover style different from the\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\n * not call this method for them.\n *\n * @param {module:zrender/Element} el\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false] See `graphic.setAsHoverStyleTrigger`.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.isGroup ? el.traverse(function (child) {\n    // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n    // Often used when item group has a label element and it's hoverStyle is different\n    !child.isGroup && setElementHoverStyle(child, child.hoverStyle || hoverStyle);\n  }) : setElementHoverStyle(el, el.hoverStyle || hoverStyle);\n  setAsHoverStyleTrigger(el, opt);\n}\n/**\n * @param {Object|boolean} [opt] If `false`, means disable trigger.\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conveniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setAsHoverStyleTrigger(el, opt) {\n  var disable = opt === false;\n  el.__hoverSilentOnTouch = opt != null && opt.hoverSilentOnTouch; // Simple optimize, since this method might be\n  // called for each elements of a group in some cases.\n\n  if (!disable || el.__hoverStyleTrigger) {\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\n\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n    el[method]('emphasis', enterEmphasis)[method]('normal', leaveEmphasis);\n    el.__hoverStyleTrigger = !disable;\n  }\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth); // Save original textPosition, because style.textPosition will be repalced by\n  // real location (like [10, 30]) in zrender.\n\n  textStyle.insideRawTextPosition = textStyle.textPosition;\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      textStyle.insideRollbackOpt = opt;\n      applyDefaultTextStyle(textStyle);\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n} // When text position is `inside` and `textFill` not specified, we\n// provide a mechanism to auto make text border for better view. But\n// text position changing when hovering or being emphasis should be\n// considered, where the `insideRollback` enables to restore the style.\n\n\nfunction applyDefaultTextStyle(textStyle) {\n  var opt = textStyle.insideRollbackOpt; // Only insideRollbackOpt create (setTextStyleCommon used),\n  // applyDefaultTextStyle works.\n\n  if (!opt || textStyle.textFill != null) {\n    return;\n  }\n\n  var useInsideStyle = opt.useInsideStyle;\n  var textPosition = textStyle.insideRawTextPosition;\n  var insideRollback;\n  var autoColor = opt.autoColor;\n\n  if (useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  } else if (autoColor != null) {\n    insideRollback = {\n      textFill: null\n    };\n    textStyle.textFill = autoColor;\n  } // Always set `insideRollback`, for clearing previous.\n\n\n  if (insideRollback) {\n    textStyle.insideRollback = insideRollback;\n  }\n}\n\nfunction rollbackDefaultTextStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n    style.insideRollback = null;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setElementHoverStyle = setElementHoverStyle;\nexports.isInEmphasis = isInEmphasis;\nexports.setHoverStyle = setHoverStyle;\nexports.setAsHoverStyleTrigger = setAsHoverStyleTrigger;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r0;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180; // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\n\n  var radius = radarModel.get('radius');\n\n  if (typeof radius === 'string' || typeof radius === 'number') {\n    radius = [0, radius];\n  }\n\n  this.r0 = numberUtil.parsePercent(radius[0], viewSize);\n  this.r = numberUtil.parsePercent(radius[1], viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(this.r0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendComponentView({\n  type: 'single'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(mapType, regions) {\n  if (mapType === 'china') {\n    regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var getRange = {};\n        zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n          getRange[eventName] = bind(roamHandlers[eventName], this, coordInfo, coordSysName);\n        }, this);\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          dataZoomModel: dataZoomModel,\n          getRange: getRange\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  }\n});\nvar roamHandlers = {\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  zoom: function (coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [e.originX, e.originY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    var scale = Math.max(1 / e.scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  pan: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n  }),\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  scrollMove: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\n  })\n};\n\nfunction makeMover(getPercentDelta) {\n  return function (coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var percentDelta = getPercentDelta(range, axisModel, coordInfo, coordSysName, controller, e);\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  };\n}\n\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n\n    /* eslint-disable */\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n\n    /* eslint-enable */\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n/* eslint-disable */\n\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/* eslint-enable */\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * BSD 3-Clause\n *\n * Copyright (c) 2010-2015, Michael Bostock\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * * The name Michael Bostock may not be used to endorse or promote products\n *   derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @see <https://github.com/mbostock/d3/blob/master/src/arrays/quantile.js>\n * @see <http://en.wikipedia.org/wiki/Quantile>\n * @param {Array.<number>} ascArr\n */\n\n\nfunction quantile(ascArr, p) {\n  var H = (ascArr.length - 1) * p + 1;\n  var h = Math.floor(H);\n  var v = +ascArr[h - 1];\n  var e = H - h;\n  return e ? v + e * (ascArr[h] - v) : v;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.quantile = quantile;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    var tooltipModel = this.ecModel.getComponent('tooltip');\n    var renderModeOption = tooltipModel && tooltipModel.get('renderMode');\n    var renderMode = getTooltipRenderMode(renderModeOption);\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker({\n        color: color,\n        renderMode: renderMode\n      }),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.2.0';\nvar dependencies = {\n  zrender: '4.0.5'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params;\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n      if (isGlobalOut) {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        } // Contract: if params prepared in mouse event,\n      // these properties must be specified:\n      // {\n      //    componentType: string (component main type)\n      //    componentIndex: number\n      // }\n      // Otherwise event query can not work.\n\n\n      if (params) {\n        var componentType = params.componentType;\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n        // markLine/markPoint/markArea, the componentType is\n        // 'markLine'/'markPoint'/'markArea', but we should better\n        // enable them to be queried by seriesIndex, since their\n        // option is set in each series.\n\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n          componentType = 'series';\n          componentIndex = params.seriesIndex;\n        }\n\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n        params.event = e;\n        params.type = eveName;\n        this._ecEventProcessor.eventInfo = {\n          targetEl: el,\n          packedEvent: params,\n          model: model,\n          view: view\n        };\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @class\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\n\nfunction EventProcessor() {\n  // These info required: targetEl, packedEvent, model, view\n  this.eventInfo;\n}\n\nEventProcessor.prototype = {\n  constructor: EventProcessor,\n  normalizeQuery: function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n        // can not be used in `compomentModel.filterForExposedEvent`.\n        var suffixes = ['Index', 'Name', 'Id'];\n        var dataKeys = {\n          name: 1,\n          dataIndex: 1,\n          dataType: 1\n        };\n        zrUtil.each(query, function (val, key) {\n          var reserved = false;\n\n          for (var i = 0; i < suffixes.length; i++) {\n            var propSuffix = suffixes[i];\n            var suffixPos = key.lastIndexOf(propSuffix);\n\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n              if (mainType !== 'data') {\n                cptQuery.mainType = mainType;\n                cptQuery[propSuffix.toLowerCase()] = val;\n                reserved = true;\n              }\n            }\n          }\n\n          if (dataKeys.hasOwnProperty(key)) {\n            dataQuery[key] = val;\n            reserved = true;\n          }\n\n          if (!reserved) {\n            otherQuery[key] = val;\n          }\n        });\n      }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  },\n  filter: function (eventType, query, args) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  },\n  afterTrigger: function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  }\n};\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Array.<Object>|Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example GeoJSON\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n *\n *     $.get('airport.svg', function (svg) {\n *         echarts.registerMap('airport', {\n *             svg: svg\n *         }\n *     });\n *\n *     echarts.registerMap('eu', [\n *         {svg: eu-topographic.svg},\n *         {geoJSON: eu.json}\n *     ])\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName);\n  return records && records[0] && {\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api);\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol !== 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol !== 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol !== 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol !== 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // 'line' 'shadow' 'cross' 'none'.\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n\n      /* eslint-disable */\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n\n      /* eslint-enable */\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseMove=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseWheel=false] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      // By default, wheel do not trigger move.\n      moveOnMouseWheel: false,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  trigger(this, 'pan', 'moveOnMouseMove', e, {\n    dx: dx,\n    dy: dy,\n    oldX: oldX,\n    oldY: oldY,\n    newX: x,\n    newY: y\n  });\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\n  var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\n  var wheelDelta = e.wheelDelta;\n  var absWheelDeltaDelta = Math.abs(wheelDelta);\n  var originX = e.offsetX;\n  var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\n\n  if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\n    return;\n  } // If both `shouldZoom` and `shouldMove` is true, trigger\n  // their event both, and the final behavior is determined\n  // by event listener themselves.\n\n\n  if (shouldZoom) {\n    // Convenience:\n    // Mac and VM Windows on Mac: scroll up: zoom out.\n    // Windows: scroll up: zoom in.\n    // FIXME: Should do more test in different environment.\n    // wheelDelta is too complicated in difference nvironment\n    // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\n    // although it has been normallized by zrender.\n    // wheelDelta of mouse wheel is bigger than touch pad.\n    var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\n    var scale = wheelDelta > 0 ? factor : 1 / factor;\n    checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\n      scale: scale,\n      originX: originX,\n      originY: originY\n    });\n  }\n\n  if (shouldMove) {\n    // FIXME: Should do more test in different environment.\n    var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\n\n    var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\n    checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\n      scrollDelta: scrollDelta,\n      originX: originX,\n      originY: originY\n    });\n  }\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  checkPointerAndTrigger(this, 'zoom', null, e, {\n    scale: scale,\n    originX: e.pinchX,\n    originY: e.pinchY\n  });\n}\n\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\n  }\n}\n\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  // Also provide behavior checker for event listener, for some case that\n  // multiple components share one listener.\n  contollerEvent.isAvailableBehavior = zrUtil.bind(isAvailableBehavior, null, behaviorToCheck, e);\n  controller.trigger(eventName, contollerEvent);\n} // settings: {\n//     zoomOnMouseWheel\n//     moveOnMouseMove\n//     moveOnMouseWheel\n// }\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n\n\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\n  var setting = settings[behaviorToCheck];\n  return !behaviorToCheck || setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Built-in GEO fixer.\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {regions, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var parsed = inner(mapRecord).parsed;\n\n    if (parsed) {\n      return parsed;\n    }\n\n    var specialAreas = mapRecord.specialAreas || {};\n    var geoJSON = mapRecord.geoJSON;\n    var regions; // https://jsperf.com/try-catch-performance-overhead\n\n    try {\n      regions = geoJSON ? parseGeoJson(geoJSON) : [];\n    } catch (e) {\n      throw new Error('Invalid geoJson format\\n' + e.message);\n    }\n\n    each(regions, function (region) {\n      var regionName = region.name;\n      fixTextCoord(mapName, region);\n      fixGeoCoord(mapName, region);\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    });\n    fixNanhai(mapName, regions);\n    return inner(mapRecord).parsed = {\n      regions: regions,\n      boundingRect: getBoundingRect(regions)\n    };\n  }\n};\n\nfunction getBoundingRect(regions) {\n  var rect;\n\n  for (var i = 0; i < regions.length; i++) {\n    var regionRect = regions[i].getBoundingRect();\n    rect = rect || regionRect.clone();\n    rect.union(regionRect);\n  }\n\n  return rect;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8Array */\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @param {string} [renderMode='html'] valid values: 'html' and 'richText'.\n   *                                     'html' is used for rendering tooltip in extra DOM form, and the result\n   *                                     string is used as DOM HTML content.\n   *                                     'richText' is used for rendering tooltip in rich text form, for those where\n   *                                     DOM operation is not supported.\n   * @return {Object} formatted tooltip with `html` and `markers`\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType, renderMode) {\n    var series = this;\n    renderMode = renderMode || 'html';\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\n    var isRichText = renderMode === 'richText';\n    var markers = {};\n    var markerId = 0;\n\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var markName = 'sub' + series.seriesIndex + 'at' + markerId;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem',\n          renderMode: renderMode,\n          markerId: markName\n        });\n        var dimHeadStr = typeof dimHead === 'string' ? dimHead : dimHead.content;\n        var valStr = (vertially ? dimHeadStr + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n\n        if (isRichText) {\n          markers[markName] = color;\n          ++markerId;\n        }\n      }\n\n      var newLine = vertially ? isRichText ? '\\n' : '<br/>' : '';\n      var content = newLine + result.join(newLine || ', ');\n      return {\n        renderMode: renderMode,\n        content: content,\n        style: markers\n      };\n    }\n\n    function formatSingleValue(val) {\n      // return encodeHTML(addCommas(val));\n      return {\n        renderMode: renderMode,\n        content: encodeHTML(addCommas(val)),\n        style: markers\n      };\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var content = formattedValue.content;\n    var markName = series.seriesIndex + 'at' + markerId;\n    var colorEl = getTooltipMarker({\n      color: color,\n      type: 'item',\n      renderMode: renderMode,\n      markerId: markName\n    });\n    markers[markName] = color;\n    ++markerId;\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? newLine : ': ') : '';\n    var colorStr = typeof colorEl === 'string' ? colorEl : colorEl.content;\n    var html = !multipleSeries ? seriesName + colorStr + (name ? encodeHTML(name) + ': ' + content : content) : colorStr + seriesName + content;\n    return {\n      html: html,\n      markers: markers\n    };\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {Object} dataZoomInfo.getRange\n * @param {Function} dataZoomInfo.getRange.pan\n * @param {Function} dataZoomInfo.getRange.zoom\n * @param {Function} dataZoomInfo.getRange.scrollMove\n * @param {boolean} dataZoomInfo.dataZoomModel\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.dataZoomModel.get('throttle', true), 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n    controller.on(eventName, function (event) {\n      var batch = [];\n      zrUtil.each(newRecord.dataZoomInfos, function (info) {\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\n        // moveOnMouseWheel, ...) enabled.\n        if (!event.isAvailableBehavior(info.dataZoomModel.option)) {\n          return;\n        }\n\n        var method = (info.getRange || {})[eventName];\n        var range = method && method(newRecord.controller, event);\n        !info.dataZoomModel.get('disabled', true) && range && batch.push({\n          dataZoomId: info.dataZoomId,\n          start: range[0],\n          end: range[1]\n        });\n      });\n      batch.length && newRecord.dispatchAction(batch);\n    });\n  });\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  var preventDefaultMouseMove = true;\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var dataZoomModel = dataZoomInfo.dataZoomModel;\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\n    // users may be confused why it does not work when multiple insideZooms exist.\n\n\n    preventDefaultMouseMove &= dataZoomModel.get('preventDefaultMouseMove', true);\n  });\n  return {\n    controlType: controlType,\n    opt: {\n      // RoamController will enable all of these functionalities,\n      // and the final behavior is determined by its event listener\n      // provided by each inside zoom.\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      moveOnMouseWheel: true,\n      preventDefaultMouseMove: !!preventDefaultMouseMove\n    }\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (typeof targetNode === 'string') {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0,\n    orient: ''\n  },\n  buildPath: function (ctx, shape) {\n    var extent = shape.extent;\n    var orient = shape.orient;\n\n    if (orient === 'vertical') {\n      ctx.moveTo(shape.x1, shape.y1);\n      ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.moveTo(shape.x1, shape.y1);\n      ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _focusAdjacencyDisabled: false,\n  render: function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.off('mouseover').on('mouseover', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              dataIndex: el.dataIndex\n            });\n          }\n        });\n        el.off('mouseout').on('mouseout', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'unfocusNodeAdjacency',\n              seriesId: seriesModel.id\n            });\n          }\n        });\n      }\n    });\n    edgeData.eachItemGraphicEl(function (el, dataIndex) {\n      var edgeModel = edgeData.getItemModel(dataIndex);\n\n      if (edgeModel.get('focusNodeAdjacency')) {\n        el.off('mouseover').on('mouseover', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              edgeDataIndex: el.dataIndex\n            });\n          }\n        });\n        el.off('mouseout').on('mouseout', function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            api.dispatchAction({\n              type: 'unfocusNodeAdjacency',\n              seriesId: seriesModel.id\n            });\n          }\n        });\n      }\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {},\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var itemModel = data.getItemModel(dataIndex);\n    var edgeDataIndex = payload.edgeDataIndex;\n\n    if (dataIndex == null && edgeDataIndex == null) {\n      return;\n    }\n\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      var focusNodeAdj = itemModel.get('focusNodeAdjacency');\n\n      if (focusNodeAdj === 'outEdges') {\n        zrUtil.each(node.outEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node2, nodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'inEdges') {\n        zrUtil.each(node.inEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node1, nodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'allEdges') {\n        zrUtil.each(node.edges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, lineOpacityPath);\n          fadeInItem(edge.node1, nodeOpacityPath);\n          fadeInItem(edge.node2, nodeOpacityPath);\n        });\n      }\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getGraph();\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  }\n}); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\nvar geoJSONLoader = require(\"./geoJSONLoader\");\n\nvar geoSVGLoader = require(\"./geoSVGLoader\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar loaders = {\n  geoJSON: geoJSONLoader,\n  svg: geoSVGLoader\n};\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} nameMap\n   * @return {Object} source {regions, regionsMap, nameCoordMap, boundingRect}\n   */\n  load: function (mapName, nameMap) {\n    var regions = [];\n    var regionsMap = createHashMap();\n    var nameCoordMap = createHashMap();\n    var boundingRect;\n    var mapRecords = retrieveMap(mapName);\n    each(mapRecords, function (record) {\n      var singleSource = loaders[record.type].load(mapName, record);\n      each(singleSource.regions, function (region) {\n        var regionName = region.name; // Try use the alias in geoNameMap\n\n        if (nameMap && nameMap.hasOwnProperty(regionName)) {\n          region = region.cloneShallow(regionName = nameMap[regionName]);\n        }\n\n        regions.push(region);\n        regionsMap.set(regionName, region);\n        nameCoordMap.set(regionName, region.center);\n      });\n      var rect = singleSource.boundingRect;\n\n      if (rect) {\n        boundingRect ? boundingRect.union(rect) : boundingRect = rect.clone();\n      }\n    });\n    return {\n      regions: regions,\n      regionsMap: regionsMap,\n      nameCoordMap: nameCoordMap,\n      // FIXME Always return new ?\n      boundingRect: boundingRect || new BoundingRect(0, 0, 0, 0)\n    };\n  },\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   * @return {Array.<module:zrender/Element>} Roots.\n   */\n  makeGraphic: makeInvoker('makeGraphic'),\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   */\n  removeGraphic: makeInvoker('removeGraphic')\n};\n\nfunction makeInvoker(methodName) {\n  return function (mapName, hostKey) {\n    var mapRecords = retrieveMap(mapName);\n    var results = [];\n    each(mapRecords, function (record) {\n      var method = loaders[record.type][methodName];\n      method && results.push(method(mapName, record, hostKey));\n    });\n    return results;\n  };\n}\n\nfunction mapNotExistsError(mapName) {}\n\nfunction retrieveMap(mapName) {\n  var mapRecords = mapDataStorage.retrieveMap(mapName) || [];\n  return mapRecords;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float64Array, Int32Array, Uint32Array, Uint16Array */\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* The implementation references to d3.js. The use of the source\n* code of this file is also subject to the terms and consitions\n* of its license (BSD-3Clause, see <echarts/src/licenses/LICENSE-d3>).\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    }\n\n    return array;\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    var triggerEvent = titleModel.get('triggerEvent', true);\n    textEl.silent = !link && !triggerEvent;\n    subTextEl.silent = !sublink && !triggerEvent;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    textEl.eventData = subTextEl.eventData = triggerEvent ? {\n      componentType: 'title',\n      componentIndex: titleModel.componentIndex\n    } : null;\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        // For category axis, get raw value; for numeric axis,\n        // get foramtted label like '1,333,444'.\n        val = axis.scale.getLabel(val);\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  /* eslint-disable */\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n  /* eslint-enable */\n\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'world') {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file This file used to draw tree view.\n * @author Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      max[0] += 1;\n      min[0] -= 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      max[1] += 1;\n      min[1] -= 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0,\n          strokeNoScale: true\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint32Array, Float64Array, Float32Array */\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices !== 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices !== 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // info: custom info. enables user to mount some info on elements and use them\n    //      in event handlers. Update them only when user specified, otherwise, remain.\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   */\n  _updateElements: function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elOptionStyle = elOption.style;\n\n      if (elOption.type === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = el.eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = el.info;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    var orient = seriesModel.get('orient');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient);\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\n  computeEdgeDepths(nodes, orient);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n *\n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\n      var node = zeroIndegrees[idx];\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          y: x\n        }, true);\n        node.setLayout({\n          dy: nodeWidth\n        }, true);\n      } else {\n        node.setLayout({\n          x: x\n        }, true);\n        node.setLayout({\n          dx: nodeWidth\n        }, true);\n      }\n\n      for (var oidx = 0; oidx < node.outEdges.length; oidx++) {\n        var edge = node.outEdges[oidx];\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      }\n    }\n\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x, orient);\n\n  if (orient === 'vertical') {\n    kx = (height - nodeWidth) / (x - 1);\n  } else {\n    kx = (width - nodeWidth) / (x - 1);\n  }\n\n  scaleNodeBreadths(nodes, kx, orient);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x, orient) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      if (orient === 'vertical') {\n        node.setLayout({\n          y: x - 1\n        }, true);\n      } else {\n        node.setLayout({\n          x: x - 1\n        }, true);\n      }\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx, orient) {\n  zrUtil.each(nodes, function (node) {\n    if (orient === 'vertical') {\n      var nodeY = node.getLayout().y * kx;\n      node.setLayout({\n        y: nodeY\n      }, true);\n    } else {\n      var nodeX = node.getLayout().x * kx;\n      node.setLayout({\n        x: nodeX\n      }, true);\n    }\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\n  var nodesByBreadth = nest().key(getKeyFunction(orient)).sortKeys(function (a, b) {\n    return a - b;\n  }).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, width, nodeGap, orient);\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n  }\n}\n\nfunction getKeyFunction(orient) {\n  if (orient === 'vertical') {\n    return function (d) {\n      return d.getLayout().y;\n    };\n  }\n\n  return function (d) {\n    return d.getLayout().x;\n  };\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, width, nodeGap, orient) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    var ky = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n\n    if (orient === 'vertical') {\n      ky = (width - (n - 1) * nodeGap) / sum;\n    } else {\n      ky = (height - (n - 1) * nodeGap) / sum;\n    }\n\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      var nodeDy = node.getLayout().value * ky0;\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          x: i\n        }, true);\n        node.setLayout({\n          dx: nodeDy\n        }, true);\n      } else {\n        node.setLayout({\n          y: i\n        }, true);\n        node.setLayout({\n          dy: nodeDy\n        }, true);\n      }\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n\n    if (orient === 'vertical') {\n      var nodeX;\n      nodes.sort(function (a, b) {\n        return a.getLayout().x - b.getLayout().x;\n      });\n\n      for (i = 0; i < n; i++) {\n        node = nodes[i];\n        dy = y0 - node.getLayout().x;\n\n        if (dy > 0) {\n          nodeX = node.getLayout().x + dy;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        }\n\n        y0 = node.getLayout().x + node.getLayout().dx + nodeGap;\n      } // If the bottommost node goes outside the bounds, push it back up\n\n\n      dy = y0 - nodeGap - width;\n\n      if (dy > 0) {\n        nodeX = node.getLayout().x - dy;\n        node.setLayout({\n          x: nodeX\n        }, true);\n        y0 = nodeX;\n\n        for (i = n - 2; i >= 0; --i) {\n          node = nodes[i];\n          dy = node.getLayout().x + node.getLayout().dx + nodeGap - y0;\n\n          if (dy > 0) {\n            nodeX = node.getLayout().x - dy;\n            node.setLayout({\n              x: nodeX\n            }, true);\n          }\n\n          y0 = node.getLayout().x;\n        }\n      }\n    } else {\n      var nodeY;\n      nodes.sort(function (a, b) {\n        return a.getLayout().y - b.getLayout().y;\n      });\n\n      for (i = 0; i < n; i++) {\n        node = nodes[i];\n        dy = y0 - node.getLayout().y;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y + dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n      } // If the bottommost node goes outside the bounds, push it back up\n\n\n      dy = y0 - nodeGap - height;\n\n      if (dy > 0) {\n        nodeY = node.getLayout().y - dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n        y0 = nodeY;\n\n        for (i = n - 2; i >= 0; --i) {\n          node = nodes[i];\n          dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n          if (dy > 0) {\n            nodeY = node.getLayout().y - dy;\n            node.setLayout({\n              y: nodeY\n            }, true);\n          }\n\n          y0 = node.getLayout().y;\n        }\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue, orient);\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge, orient) {\n  return center(edge.node2, orient) * edge.getValue();\n}\n\nfunction weightedSource(edge, orient) {\n  return center(edge.node1, orient) * edge.getValue();\n}\n\nfunction center(node, orient) {\n  if (orient === 'vertical') {\n    return node.getLayout().x + node.getLayout().dx / 2;\n  }\n\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nfunction sum(array, f, orient) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], orient);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue, orient);\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes, orient) {\n  zrUtil.each(nodes, function (node) {\n    if (orient === 'vertical') {\n      node.outEdges.sort(function (a, b) {\n        return a.node2.getLayout().x - b.node2.getLayout().x;\n      });\n      node.inEdges.sort(function (a, b) {\n        return a.node1.getLayout().x - b.node1.getLayout().x;\n      });\n    } else {\n      node.outEdges.sort(function (a, b) {\n        return a.node2.getLayout().y - b.node2.getLayout().y;\n      });\n      node.inEdges.sort(function (a, b) {\n        return a.node1.getLayout().y - b.node1.getLayout().y;\n      });\n    }\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Group from 'zrender/src/container/Group';\n\n/**\n * @alias module:echarts/component/tooltip/TooltipRichContent\n * @constructor\n */\nfunction TooltipRichContent(api) {\n  this._zr = api.getZr();\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n}\n\nTooltipRichContent.prototype = {\n  constructor: TooltipRichContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {// noop\n  },\n  show: function (tooltipModel) {\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n    }\n\n    this.el.attr('show', true);\n    this._show = true;\n  },\n\n  /**\n   * Set tooltip content\n   *\n   * @param {string} content rich text string of content\n   * @param {Object} markerRich rich text style\n   * @param {Object} tooltipModel tooltip model\n   */\n  setContent: function (content, markerRich, tooltipModel) {\n    if (this.el) {\n      this._zr.remove(this.el);\n    }\n\n    var markers = {};\n    var text = content;\n    var prefix = '{marker';\n    var suffix = '|}';\n    var startId = text.indexOf(prefix);\n\n    while (startId >= 0) {\n      var endId = text.indexOf(suffix);\n      var name = text.substr(startId + prefix.length, endId - startId - prefix.length);\n\n      if (name.indexOf('sub') > -1) {\n        markers['marker' + name] = {\n          textWidth: 4,\n          textHeight: 4,\n          textBorderRadius: 2,\n          textBackgroundColor: markerRich[name],\n          // TODO: textOffset is not implemented for rich text\n          textOffset: [3, 0]\n        };\n      } else {\n        markers['marker' + name] = {\n          textWidth: 10,\n          textHeight: 10,\n          textBorderRadius: 5,\n          textBackgroundColor: markerRich[name]\n        };\n      }\n\n      text = text.substr(endId + 1);\n      startId = text.indexOf('{marker');\n    }\n\n    this.el = new Text({\n      style: {\n        rich: markers,\n        text: content,\n        textLineHeight: 20,\n        textBackgroundColor: tooltipModel.get('backgroundColor'),\n        textBorderRadius: tooltipModel.get('borderRadius'),\n        textFill: tooltipModel.get('textStyle.color'),\n        textPadding: tooltipModel.get('padding')\n      },\n      z: tooltipModel.get('z')\n    });\n\n    this._zr.add(this.el);\n\n    var self = this;\n    this.el.on('mouseover', function () {\n      // clear the timeout in hideLater and keep showing tooltip\n      if (self._enterable) {\n        clearTimeout(self._hideTimeout);\n        self._show = true;\n      }\n\n      self._inContent = true;\n    });\n    this.el.on('mouseout', function () {\n      if (self._enterable) {\n        if (self._show) {\n          self.hideLater(self._hideDelay);\n        }\n      }\n\n      self._inContent = false;\n    });\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var bounding = this.el.getBoundingRect();\n    return [bounding.width, bounding.height];\n  },\n  moveTo: function (x, y) {\n    if (this.el) {\n      this.el.attr('position', [x, y]);\n    }\n  },\n  hide: function () {\n    this.el.hide();\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  },\n  getOuterSize: function () {\n    return this.getSize();\n  }\n};\nvar _default = TooltipRichContent;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\n    // this case.\n\n    if (dataDims.length === 1 && dataDims[0] < 0) {\n      encodeDef.set(coordDim, false);\n      return;\n    }\n\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\n\n    if (dataDims === false) {\n      return;\n    }\n\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = itemModel.get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* The treemap layout implementation references to the treemap\n* layout of d3.js (d3/src/layout/treemap.js in v3). The use of\n* the source code of this file is also subject to the terms\n* and consitions of its license (BSD-3Clause, see\n* <echarts/src/licenses/LICENSE-d3>).\n*/\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * The implementation references to the treemap layout of d3.js.\n * See the license statement at the head of this file.\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n} // See cases in `test/bar-start.html` and `#7412`, `#8747`.\n\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  var extent = valueAxis.getGlobalExtent();\n  var min;\n  var max;\n\n  if (extent[0] > extent[1]) {\n    min = extent[1];\n    max = extent[0];\n  } else {\n    min = extent[0];\n    max = extent[1];\n  }\n\n  var valueStart = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  valueStart < min && (valueStart = min);\n  valueStart > max && (valueStart = max);\n  return valueStart;\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseWheel: false,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {\n    /* eslint-disable */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n    /* eslint-enable */\n}(this, function (exports, echarts) {\n    var log = function (msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    };\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n    var contrastColor = '#eee';\n    var axisCommon = function () {\n        return {\n            axisLine: {\n                lineStyle: {\n                    color: contrastColor\n                }\n            },\n            axisTick: {\n                lineStyle: {\n                    color: contrastColor\n                }\n            },\n            axisLabel: {\n                textStyle: {\n                    color: contrastColor\n                }\n            },\n            splitLine: {\n                lineStyle: {\n                    type: 'dashed',\n                    color: '#aaa'\n                }\n            },\n            splitArea: {\n                areaStyle: {\n                    color: contrastColor\n                }\n            }\n        };\n    };\n\n    var colorPalette = [\n        '#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53',\n        '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'\n    ];\n    var theme = {\n        color: colorPalette,\n        backgroundColor: '#333',\n        tooltip: {\n            axisPointer: {\n                lineStyle: {\n                    color: contrastColor\n                },\n                crossStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        legend: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        textStyle: {\n            color: contrastColor\n        },\n        title: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        toolbox: {\n            iconStyle: {\n                normal: {\n                    borderColor: contrastColor\n                }\n            }\n        },\n        dataZoom: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        visualMap: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        timeline: {\n            lineStyle: {\n                color: contrastColor\n            },\n            itemStyle: {\n                normal: {\n                    color: colorPalette[1]\n                }\n            },\n            label: {\n                normal: {\n                    textStyle: {\n                        color: contrastColor\n                    }\n                }\n            },\n            controlStyle: {\n                normal: {\n                    color: contrastColor,\n                    borderColor: contrastColor\n                }\n            }\n        },\n        timeAxis: axisCommon(),\n        logAxis: axisCommon(),\n        valueAxis: axisCommon(),\n        categoryAxis: axisCommon(),\n\n        line: {\n            symbol: 'circle'\n        },\n        graph: {\n            color: colorPalette\n        },\n        gauge: {\n            title: {\n                textStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        candlestick: {\n            itemStyle: {\n                normal: {\n                    color: '#FD1050',\n                    color0: '#0CF49B',\n                    borderColor: '#FD1050',\n                    borderColor0: '#0CF49B'\n                }\n            }\n        }\n    };\n    theme.categoryAxis.splitLine.show = false;\n    echarts.registerTheme('dark', theme);\n}));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(mapType, region) {\n  if (mapType === 'china' && region.name === '台湾') {\n    region.geometries.push({\n      type: 'polygon',\n      exterior: points[0]\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MarkerModel = require(\"./MarkerModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 60,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    renderMode: 'auto',\n    // 'auto' | 'html' | 'richText'\n    // 'auto': use html by default, and use non-html if `document` is not defined\n    // 'html': use html for tooltip\n    // 'richText': use canvas, svg, and etc. for tooltip\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar Axis = require(\"../Axis\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData,\n\n  /**\n   * Only be called in category axis.\n   * Angle axis uses text height to decide interval\n   *\n   * @override\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    var axis = this;\n    var labelModel = axis.getLabelModel();\n    var ordinalScale = axis.scale;\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n    // avoid generating a long array by `getTicks`\n    // in large category data case.\n\n    var tickCount = ordinalScale.count();\n\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n      return 0;\n    }\n\n    var tickValue = ordinalExtent[0];\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(tickValue, labelModel.getFont(), 'center', 'top');\n    var maxH = Math.max(rect.height, 7);\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n    isNaN(dh) && (dh = Infinity);\n    var interval = Math.max(0, Math.floor(dh));\n    var cache = inner(axis.model);\n    var lastAutoInterval = cache.lastAutoInterval;\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n    // otherwise the calculated interval might jitter when the zoom\n    // window size is close to the interval-changing size.\n\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n    // point is not the same when zooming in or zooming out.\n    && lastAutoInterval > interval) {\n      interval = lastAutoInterval;\n    } // Only update cache if cache not used, otherwise the\n    // changing of interval is too insensitive.\n    else {\n        cache.lastTickCount = tickCount;\n        cache.lastAutoInterval = interval;\n      }\n\n    return interval;\n  }\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      borderType: 'solid',\n      shadowBlur: 0,\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/nest\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    // eslint-disable-next-line\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {},\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphicUtil = require(\"./util/graphic\");\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nvar graphic = {};\nzrUtil.each(['extendShape', 'extendPath', 'makePath', 'makeImage', 'mergePath', 'resizePath', 'createIcon', 'setHoverStyle', 'setLabelStyle', 'setTextStyle', 'setText', 'getFont', 'updateProps', 'initProps', 'getTransform', 'clipPointsByRect', 'clipRectByRect', 'Group', 'Image', 'Text', 'Circle', 'Sector', 'Ring', 'Polygon', 'Polyline', 'Rect', 'Line', 'BezierCurve', 'Arc', 'IncrementalDisplayable', 'CompoundPath', 'LinearGradient', 'RadialGradient', 'BoundingRect'], function (name) {\n  graphic[name] = graphicUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\nexports.graphic = graphic;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 3e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nrequire(\"../helper/focusNodeAdjacencyAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The interactive action of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Register the actions of the tree\n * @author Deqing Li(annong035@gmail.com)\n */\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\necharts.registerAction({\n  type: 'treeRoam',\n  event: 'treeRoam',\n  // Here we set 'none' instead of 'update', because roam action\n  // just need to update the transform matrix without having to recalculate\n  // the layout. So don't need to go through the whole update process, such\n  // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n  update: 'none'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function (root, factory) {if (typeof define === 'function' && define.amd) {define(['exports', 'echarts'], factory);} else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {factory(exports, require('echarts'));} else {factory({}, root.echarts);}}(this, function (exports, echarts) {var log = function (msg) {if (typeof console !== 'undefined') {console && console.error && console.error(msg);}};if (!echarts) {log('ECharts is not Loaded');return;}if (!echarts.registerMap) {log('ECharts Map is not loaded');return;}echarts.registerMap('world', {\"type\":\"FeatureCollection\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"urn:ogc:def:crs:OGC:1.3:CRS84\"}},\"features\":[{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@࠿@ᠳ࡚с̶ʩт˷˔ƹͮɠͲ˖рԜ׷҄̕ҴNܾͰؼ÷۸ήԪҮƴ̮¿ঞɪֶϤϲŹƛе²֭ĝǱƊĠǔōϭñėށ؅ਓɁȥԯ঻ƻԓࣗඩअ৯۝ڻो֑য়ߝล໥ϓ؇UļāļƫȖɩ̌]ᶼ̈́͘ɮ͜ɪ͚®ĞĚ۪ƼɦːϪǰ;Ąߞᢌᣮ\"],\"encodeOffsets\":[[49130,8189]]},\"properties\":{\"name\":\"Somalia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ƛ¬Ð@ĞÆÒªǱ\"],\"encodeOffsets\":[[9810,48188]]},\"properties\":{\"name\":\"Liechtenstein\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@⌗øĒ୬ͪࣆيʊˆ҄ؔ^˶ȇɪÈצϲ֌ĐФ؜ְദ׼ҢڴήࡔլİtʍԾ΃ʤ՘ĲʢË΢ǒŎɽĠPĀmǶVǢgΤ̑ĮவňȵǑ¼ýĈå²yĞÇÞ³ëąÍĥʹ೵]É³Ɨ{ΡŉƑcăZÉSÍƫH˃ǨǓѭǇƣġǥÕȿÕǃñÿśıƇħěŽđұĿЍUƉÝåSĵ^čfʉdʇǍ·ণ֣oۋ@Ĺ\"],\"encodeOffsets\":[[-8891,28445]]},\"properties\":{\"name\":\"Morocco\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@⌘@ķœ@@@Ŕ@@̷@̩@ǕBȍ@ȋ@ƍ@ĩ᫫@@ɋ@΃@ɭ@ŕ@қ@΃Oх̉űƽw½gΉɩķƯtįQJǳ՟TšRšPėRŏᇷCฝCċα`ý§¨Ƙ࢘Ӕ׎ŰшΞ׎ǇĹèƤ࠴݂Ģָ͌܌۴КͲޞŚƀ\",\"@@i˷@@j˸\"],\"encodeOffsets\":[[-13351,28480],[-8984,28120]]},\"properties\":{\"name\":\"W. Sahara\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@A@ƟwđĵȏÒʁč«Ǔƅ@ã̌Ο˘SǴʒÊÆ`Å_֡˰ϟʊkIDZʪĠɁ˔˶àϷˈȘѬ˻W²ɤ˲ÚͩǀºĬȋːÈĆѠŎǊĘȘoø`Ȓg¤_cº·¶ÙȈėÒ÷´fFfV\\\\T^Qhɿ՘ɳkĝƱƨ÷YißMµGuODƎĨãɰİÈßĜhŴĬŬ~Ũ±âZ]ãNÇk¹ėǌƽɣȭkěHãƺ˝Ǵč¬­¡İÃƩǝÿďȫẸ̀Qßço}ß]ĕUΥ@Ʌ±@@\"],\"encodeOffsets\":[[22080,43262]]},\"properties\":{\"name\":\"Serbia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@хǑޟܯőࡡԧ¡á͘з¤̧սշŊƉˏͭąٝ°̺׿ٓɥɓӱз·ʫɫƚν@ӧʟƆƋʇğԻzЛϭĭ޿ॕʳכ]ʛŷѿĘࣻõЍĺٵȀ͋ĠШъȒȢȌȜxèFƆ·ǴăĆˁȡ|ɍZ{ƒZØaŤDĠƲDèĳ̎őͨaŦ̰̚˽êóļ@͒ƂǲȸZíĊ´ubSv\\\\vÀTÎ hňǞjΔö´ƌFgÈèTɶǓЀ«Ȁǫ͊î̲ǆzĺîĢƘ؜Ɣ˒Ř˞ǈ°òńƲъÖŖ¾ŚǶRɄJǮˊרȋ¦HʲpȮńċľsĺ¤ÚR|¼[þJ¬wNwNÌÛļûĢmǌÂpp^ªô¤ʂĸ®T¸SZ^b\\\\~VvL¤QȂƓî§R¦¼¶^ê}ĞlôÒÈŒǐ`ƐǢbÀèHĎ±ĸ^ǠŶˌ̆ѨīÞŗ­ɃaÎJĊtÄB~oűځĈʁŔů࠰˨ȦȨˈŢƠ®ĈRľsª_ÂW\\\\a÷ËvkĄOΘĈ²ʹkÒČÑ¼­§MÕryWJ·oğ}ƽáHiĸã|u^Q\"],\"encodeOffsets\":[[76331,37911]]},\"properties\":{\"name\":\"Afghanistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÂR̮cҮƠ͎Åǖ@ǔ|ɔDªĞƶHǊŖ̈ƄĺTǊ|ʖĞGR_¿ƽA½n½¦ʬGɼEҾi°oČ଩ýٵ͔ӑĠճēśnʕ¬ÓIàþÖÚ~ɈqɘM͚Ĳ̴ŐŢdܓ×މoěG±ðƁIĵY൑@ȗ@@ڟ@ˑ@ˑBౝǶ֡া࡙ࢳǑ೟Ƶҧƀ਩¼ҹͺሹTᅍeғ̴ʟÌՋȭǃNOėFǗģµƇo͆ƖËܼɠˌ҆ლζ֌θɌƴȞǀЊ¢ݐс޴˫ߚ̢̤hˊүஒґۤݴɦƌOՎNዲQĮĘÇƈǕϡÐŻĚƉÆ˕Ԃۻ\"],[\"@@̆Ƅ_øęÞËr___ğıͅ˭DeÌ·ӏɫθƅːОΖ\"]],\"encodeOffsets\":[[[18002,-8293]],[[12802,-4697]]]},\"properties\":{\"name\":\"Angola\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Π˗ä̋ÝԍȄ́ɊßQÙÚŷűŻȉ̍ǝ©¡aquwW@yÐğBƧůÙPÑXkAűˬѽ̨ŚAĹɐȨࠐDŮȡæ½ʮ̾ϦŒŷɴÒ\"],\"encodeOffsets\":[[20546,43569]]},\"properties\":{\"name\":\"Albania\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ł^ĊĤ³\"],[\"@@ɨ÷ϫƯħƾƊ¡sƜƖ\"]],\"encodeOffsets\":[[[20135,61632]],[[20470,61800]]]},\"properties\":{\"name\":\"Aland\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ɵ½íIir[ò\\\\¢Ö ÈOŢ~y@esQm\"],\"encodeOffsets\":[[1747,43524]]},\"properties\":{\"name\":\"Andorra\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʙOǘøĂç\"],[\"@@šȆĶãŷ\"],[\"@@ø֟˗ȫÁǸǣïԿƖw´ŷѡĹÂĹ˧څ[˥ççᒣʾ߳४oǪǘÚȱɴѼƸॺí̆ĐȾĚ̌҂ৎࠠŞɦò_m̙ź\"]],\"encodeOffsets\":[[[55223,24758]],[[54613,24841]],[[57650,26267]]]},\"properties\":{\"name\":\"United Arab Emirates\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ؠQۓƫĵÜǪĢ\"],[\"@@nᇜ͠έǇvµǥˠŸɏ׶УࢸНࢴŧʕȣ࢑įԭņ౳¦\"],[\"@@ȴǛߖȡפϿବӗɒ˳͉ӡȧɇ˽ͫЛoÁıξบɿɮȜǴGƌùÚDæ¶ÌEæ¶Ì rºʒàǞȔɌͦʮbΰƠ¥ʐĒɜũȈԵƛ۩ЧʩхŃɫˇԽ˳ƩǟXࢣ਍ʉƽƯɃƅę¡ě½õĳģă¾ɣÙßdƕqùşȅißlgĝëĿēk©z¿HÃiÉZÇÁEÕáųeû¤ͩɅŷĻҩžѻőēȰ͗آ˯͆˿Ʒ̛fʳɔɧ˜¥ÞщܿਟՍ̍൱ͷઃŻأУƊϋȰŉŁMĒå¯̩ŽÍīʩžБůǻӃǿ֋¥਻ΤɛŧŬਅϘŷƋŴcˎňƗ¢θĖƒƙZ΍Εƻϟ̲ЛŹ³ýתǭѫȁ΋͏Yש͏͍R̅ҧكʗցڛþؖ͟ӁٺóɖɁÛʗΉǁʔ@ľĩൿࡕǿʛş֡γƻ·̒LƷˋÉ͎KƨůԹ˻˃ѹƄƒеίăрýѬ֯ౡ̊࿩fЩϘÊܞƛØգŋ̉Ԩ«֊þŴ˜\\\\Đʊ͐ƢÌ̮ȒĠvɌǃȞƠ͒ψʔ̶ȬưƧЮȴǨī̀ͮȺȹ̒ϏÚmŎڬRĐǠ«Ĵԛ¶ŞϢȋӨżĢͩȺب̜ǤƉͬiߪȊʼğǤƄž»͖ƲŚ֖Ҙˤʷ۾qޚŘˎմϲUҐŝɶƌČ˺܆ǚÜ߆ɝèÀˊ˻ڨĠł˥͚ÆΞǰłƀ֌ǒFĦƶīĆÉيǘȄƞׄМЪˠ٪Ɉ\\\\ɰƖɭцƪˈƫ؞Ǫˠƫ̂ʾ̘ݨ̞̈ࢂƽưǢʾɼʚ̆Ē¼ĘİxzEÜ}ǘşöãîSƖ`Ѷ_͘ĳèţħčÔƧ¢ÇdǊʒѾ°࣠Ǽʗî·ƚ÷ƄƣΔӍ׶Ћ\"]],\"encodeOffsets\":[[[-66098,-56029]],[[-70300,-56170]],[[-62550,-24224]]]},\"properties\":{\"name\":\"Argentina\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@́{ř̮ǯŔfƖ˟§ʭôķƶɛ½Г˲Իðą̘ŸȦʁ͚՚Ú؞ÞǆǀťıÑѢȓǫƣÜşєʣßǫʳ¡Ժ͏ɼīŷȀƭƹúʇ\"],\"encodeOffsets\":[[47607,39841]]},\"properties\":{\"name\":\"Armenia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@āɆƃë\"],\"encodeOffsets\":[[-174823,-14695]]},\"properties\":{\"name\":\"American Samoa\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@īƨǜMïƙ\"],[\"@@΂ŜªūȩÃŚÕٸǔȢťƙțȃúͽñȐŵɖ¨ĻƣࠅƦƇƥƫJÌ҈ħĊȜͼŒǗëȃŐy\"],[\"@@ƥÈè þħ\"]],\"encodeOffsets\":[[[70946,-50236]],[[70846,-50288]],[[53079,-47554]]]},\"properties\":{\"name\":\"Fr. S. Antarctic Lands\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ťowîÐÒĎŏ\"],\"encodeOffsets\":[[-63197,17446]]},\"properties\":{\"name\":\"Antigua and Barb.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ēǡÎƮŸÔı\"],[\"@@Ȫb࢈ͥ;ðŀùŢƨϸQƖƂɂyĄþȺÙńଡŇȶʏԑlԟƇñĈ§ĐŸþȏêķǁŻȲ­ΧȻºæĳǡ˱˙Ĕщ£ƞǴ¼˫p͕̮ʏאɨɗ¢ŚƹǪą¥FƪЅՊĵΆÔʸ˚ĩ\"],[\"@@£ÝÏÒĴL\"],[\"@@éżBÑ\"],[\"@@ÞƯ͑êʴĆ\"],[\"@@ʠȓbƿǩõ˵͢ȞĨ\"],[\"@@÷ǲƌ˖Š̻ǳƋ\"],[\"@@Çȏ|ƾ\"],[\"@@˪ZǎŁϟȅƩȩüϡ¥ǷŤĈŢגƀɀyXı\"],[\"@@ĥɩRʨĔ}\"],[\"@@ǿɪcɂȤѫ\"],[\"@@čǘ¾̞ǂǀéǆĨðþ˫ɭֿ\"],[\"@@þCȷǡȸĨ\"],[\"@@ŅÁĮƶXĳ\"],[\"@@ĕPŊÀř\"],[\"@@jɇǗȞƮj\"],[\"@@ľàēģi\"],[\"@@̉ƙŒɲʚÔĢĵǃµ\"],[\"@@ųÈÈĮìƵ\"],[\"@@ÕgIżàœ\"],[\"@@ěWÌŖĽ\"],[\"@@ƪdũʉǤģ³ğҷèö̆Țǂ¸Ņ\"],[\"@@īPþŸnƇ\"],[\"@@ƃ×ʤǮşŕ\"],[\"@@Ŭřҿ|żňƴŢŠƒ˽\"],[\"@@ͼȶŨɪȹӳЩρʸŅΨȠƹ\"],[\"@@Ñ»ɆΪƳ̭\"],[\"@@ğɠĂÌ^˫\"],[\"@@Í̉ʖ˱ƺڭʟǪԝǤĩјȚƦɕ՞ϙŜ௳ˠЉƂǶ؇ÿՙʪɽ¦ΣٌΓɼ^˘͡ࡢѧŀǇŻZĥѪқȾϟɀܥĴ¨ŶƇȰŔŦϸͧxƦĔƞ࢑ʼ˙֬˵ʤЋ˜ǣǔͱɔȗÒ͑ưů¡ਗϬ࢝εӯཝñܹ͓ԡõͥ˫ȩzá̏ťѩ֯W̃ſáĜq̡ЁÉћԟۏɗාϝȯകƍࡧؕ՝ÁĴƕŊ®ÇʱȭɾȉŧȢͥŌŪŢÇŴƷL˩əȯƈǎGǪɆȓǈеȥɨÕृԡࣩκؗĬŋįƛr΍ʌԷưԗնÔӪŅʔٓڔǬ¶ĤóMȢٕɡ˳|˞ӶkɖͳԀͭࠉڷąŌ˘̈́DĒلςӨã͈ŠĚǫѠNȳ̷̉ǡλڵͳҏՋàˑƩĴŧÝѳ̖ĀĊȞÿȗԸˣ˪ĉʢƵŜʳtŅƼÕȘńdNƶӋ˺ϟpϣȒҗ§࣏ј̣ĝഁ±༱ԕ୷ঃӭџŏإݵଗÙ÷İտ¢ಧů͹ͥұģٓэҭģࣃĢѽǊΟ̴ұƞ_ج̬Ŀ˘ϔ`఼Է॔ȃ஖ׇࣀř؞۽঒Ś½ƎȎБŸĒĂbƘϩԴ´ĪɘșVʣŊĬŚʵĊÓŀĖAπڟஔÔӈɤϜшĥɶ˸َĎ¬fջȢŢ˨Ѥغ˨Ұϰא̈́טÉښ̄ҪĨ̒ɢМஊκ˸ʆи۾ј̬ǕӀĪΎϬ̊ɀ̎Ӿ࣫~ЬȨ÷Ǟ͑άŔØeǊĺŊǃƼİɌĻІ]̯ĔXƔƈhÔȲŧďĻǶ¸ɞĺEŌȈ̶ƗTŔƍEÏŲǘƀˊīƫ;ͶȚ¢ȐÞȧƄ¼ÐůŌļѤŊsØƉŨŨƖšǰǤIƖńҰʍ؈֯ġԱðĖĊÕáɊʹɦМğƂɵ¬ʐ̮ɥFʐǲnȳƴþøˍƒ˦Όň΂ΠɪĿƂǀȚɨǾJǺȶŃLǆΘʦŬǫՂGǄĂƂğČƈǞXçö͖ǗƂͷbȿƢŜĸǎŉƬô̌ʁɺĈȊʡ؀ŁќȅˀÌʦǫǂwעͪǽ͑ʮdÖȗƮWÌňáŎǌȆɶɱƬc¨ęΉι¶ǿŏȅƕò̯ƓxՋҥە¤ƑلЗðƓΎīäǫǾ`ל̕ҔС٠ƱȨίڌ̽ЎàˎǮϰߜˬ஀đӲÒˊĹ̘ƢҎˆˈǢɃȼVŠƴ̀úßǨजʎȪŰ©ŁȐȭþץʴŏ\"],[\"@@ëµ¹ĸÈ¤Þĥ\"]],\"encodeOffsets\":[[[150893,-44438]],[[148525,-41765]],[[151795,-41487]],[[148260,-41478]],[[151887,-41274]],[[151553,-40711]],[[147383,-41078]],[[148803,-39414]],[[140899,-36596]],[[157224,-28094]],[[115900,-26678]],[[156752,-26368]],[[154775,-24054]],[[118217,-21286]],[[152621,-20778]],[[149789,-18668]],[[142807,-17525]],[[142857,-16970]],[[140384,-16156]],[[127588,-15771]],[[128204,-14929]],[[139996,-14135]],[[139508,-14156]],[[139611,-11880]],[[133591,-11959]],[[133754,-11649]],[[139877,-11651]],[[135776,-11574]],[[146616,-12241]],[[145690,-10961]]]},\"properties\":{\"name\":\"Australia\",\"childNum\":30}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ñǱʀ͋ãʣթɊśȝŕV̡ͥťŕƻࣃÑ˿ǥ܋ĶǭśFƵ^׃Čù~·¶½ÚĩČo¦I\\\\wPͥąȻXā]ǁMġÑÝ½iÇOĉLÍfÏ¬ğPčBuTDÆÅjǹőҫǦ«ǶĈǒď´ȌªúoŎÀvqL±Ŕ{cíƼò¨ŔSƨLêoŌGƚŃ२ȐdxMÀZR¸_ð@Ŝcǌ_î}t_aDuvkÎø}Dd~bÒLÚſÊ²ƘǋǼϤǐĜ|òÀ¦ƞXN`TŲAŲNZJłXhȠƑբE͂ͰࠬȱФΆǓ\"],\"encodeOffsets\":[[17360,49766]]},\"properties\":{\"name\":\"Austria\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Փň֍ը£¬ɜ¾ĸƵʮóˠ¨eƕǰœŚ̭\"],[\"@@ݒ࢙ˎǻ΀áƸȋϓ̯ĻȏӯɑǓˋŷĔƃʝ\\\\͹ɵqԃόʞƒǁȆǾƄ˛ʈ౉ٷùʈƺǿƮĬŸɻԹ͐ʴ¢àǬѓʤÛŠǬƤѡȔĲÒƿŦǺŐÂvڲɟ̂ěĔXüÒðT­´ˁƐķǎȸǄˎßӌѽЈéڂը\"]],\"encodeOffsets\":[[[47222,39811]],[[49739,42849]]]},\"properties\":{\"name\":\"Azerbaijan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@guûƿcy¤«£ŇR§èöcĘÐOōiƃ͇͟ϟչȕů˃LǇԮZپǭ˪ôľʎǳʶ^ƜàÀ̈́ǀÝʔĔŨñ\"],\"encodeOffsets\":[[31287,-2457]]},\"properties\":{\"name\":\"Burundi\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʦq̈ʣȋ˥wAá\\\\ğí£Í}©͋ʁw՝ɸ£̪ɯǉͫVtɴСºÿƞ˓°Ɠȼ̇{ȟ̆ۚɾèōЂ˘ƮڰêƸǅӨŁđͅ\"],\"encodeOffsets\":[[5831,51994]]},\"properties\":{\"name\":\"Belgium\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÁÁŏEĕŶǽbmlʻàƋ¿ǃĿQͻɷȍɽ׏ɧÓ֩aлɍÙÃAck_wL˝óVŃjån»k¥cÇ{ȍ࣫ŹžàȹזĀJqႬǷʾ±ՔӇ͞ŚԜѴϠҮyΆДo˚τƌڒׁ\"],\"encodeOffsets\":[[3682,11977]]},\"properties\":{\"name\":\"Benin\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@­ΏȀɃ ɯǂɥӪ̃ǱNC˕ӠͿҒÈĸȡŹƁˈ΋΅Гҭzѳϟ΃ҽƊȗ¨˟ȩΑê຋WíͿļƇVֽ^óºĽV«ko¥¥D·ØsÜÜ­­ÃĆ¿ÇYʕǫM͟ŕïÅćÕDķÚĉSąґӂɗĚԮȬ˪ϞӶȼɪɘ©ˮɈĸď˚ƬǀǠĄΜǿȎĈ®͆ʢUÞʬʌɸЊ¹Şʎޤ̨ʐȒѲXϠŭ\"],\"encodeOffsets\":[[223,15270]]},\"properties\":{\"name\":\"Burkina Faso\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@÷r¢ǆǷ\"],[\"@@ç\\\\ƪnā\"],[\"@@ęÏΒÒ́\"],[\"@@ũĀŠĐȟ\"],[\"@@əqƒɚƫѐĀzɮ͇ùͩ\"],[\"@@|JeƊÊAɪ̻ɖnńĊæŶɫD͍oȉZ¬WɆÕв«ாDΚȍéāőo[Aġğɷ­ĳǽǗĳ|̓ŧǃͱǖӻÞŌİǩÈWŎÖFȠÖŰŦQĀ@ô¦LÆ[ǞLòχzˁĒǍx¥Î՗\\\\ÏPVЇƉʧŒŵūŨуɣ͐ǉনÇ«ˉӴɛȱɩʑή©ӆ£ƛʉ˔ǃſѝƲ͓͝ҁƇ¶ŜɨɉőþÈ̎ơЛȱǻïђḍūǋɓŶ͸ŉ̜iǰ¥ǔàŬǡÌuȦ¿¶ËľŐˠ\\\\Ê\\\\ĮNUå¨ťjƉĜĥNátÉÄ¯ÞL`¤ĖǜLúAºäìȐİ@̚\\\\ÊõïƂɡ̗ɲ~ȸƶƜĚĦ­ĐXfæŰƒȏɐ\"]],\"encodeOffsets\":[[[94157,22025]],[[94079,22357]],[[93339,22708]],[[93755,22920]],[[92957,22620]],[[91076,26876]]]},\"properties\":{\"name\":\"Bangladesh\",\"childNum\":6}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĵ̓˧NǡǭνͻɿѼнҏmƱŐ¥\\\\ȝéɧuÇËÏŵsySyFyĵxÿckkgÞŵXñg¥ÍţśfɏŧŋiБĦƫòwr§î}FγyoµkQ́ÕċAđZ½SōGëÁȫ^ôͺƕɈЯːà^p~àèRQnół~ǴˬŦƪǞįÄ¢«®ǳĎƹ˞GäĜlĄÀŠŠ˸ƩƇŉ¨ħᓞƏ؀˲ܸƈ˶ŭϬ˴Ƿ̨}\"],\"encodeOffsets\":[[29272,44793]]},\"properties\":{\"name\":\"Bulgaria\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÛĝƄHɜĬXl̛\"],\"encodeOffsets\":[[51822,26505]]},\"properties\":{\"name\":\"Bahrain\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@řǵѡGBņƂôʎƪƄĵ\"],[\"@@ʚďΏ¬Ķ¤\"],[\"@@Ï{̶̀¡ǀĖ`\\\\ǉ̵˙\"],[\"@@ǽWņɀĭ\"],[\"@@͏ɬþĒƻʹЎٱ\"],[\"@@̻źxÌ̄ȅ\"],[\"@@ĹĉrŖĈ\"],[\"@@ćïŞ¬®áWͯǓ\\\\ȓϾ˼|\"],[\"@@Ǐ»Ăńˋ΢ΚЩ\"],[\"@@Ƿ`ʊvÑ\"],[\"@@CȳʣƧďǦȃ¨ËêǊvҌȤęȚ̓\"],[\"@@ʰſǾǇЭųƚĚJ¬ʠǫǌɁĴƇIÐŚ¾Ý\"],[\"@@ӐۑǅȯǄǀěǜǺĖÍ\"],[\"@@ƩĸƀŎPͼɫʈη¶Έ@Ͼ̽xǑŇý·˱\"]],\"encodeOffsets\":[[[-74779,21702]],[[-74794,22968]],[[-75987,22747]],[[-75834,23269]],[[-76636,23444]],[[-77480,24013]],[[-76215,24646]],[[-79521,24832]],[[-77115,24781]],[[-79203,25615]],[[-79609,25301]],[[-78488,26100]],[[-80376,27371]],[[-79079,26526]]]},\"properties\":{\"name\":\"Bahamas\",\"childNum\":14}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˼Xȗѫϸˇ˵ßɂ˓ʩğ{D©OS«^­To_ðƛSÃ¡M®ëNď¿Ù«§ǟœ_nǇäŕġå٥˲çÆÌ̓τࠉ֮Ṷ̌ͬȶªΎȬVɞƱȦǨ͚¼ݨǗ܌@ƤǍƞ[\"],\"encodeOffsets\":[[19464,45947]]},\"properties\":{\"name\":\"Bosnia and Herz.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŘñࣸįkŻº¹ÎŰÊ®fº@ät¶²ZĘQǈR͢ƭʀąKơãÇUoHyÂ±æïh¥@ůŕs­[¯PmƼóŚ~oÝőĢĪƉĖăȌíƎ¯sX}WÅãyÈeƞJǬ_ɀŅɈˇ»OÇaĝ˝ƭʕ^ƳĂɁI{Uo½ßw¶³øÑüÁ~jȏOȃpw¤mÊāJqǃNȑEŅ¯ȥGŕÿ÷µóåëĿ§ýzÃ»TÃj©ƵåʏǢۃăȳȶC¡uw§SßkıěLd£ðÉh֡~ƅĩSĂͥrubŅŜËRķMƯbࠥŸண±çýŹġůÕwKñÓ\\\\íHýĭQM¢ѮБȸجОαজØiƦMϨ}æwʬòŮIlpĶvƪWÆlÊºʂàwl¥{ÚǊ¿Ħïd¹BSjj¬êÄÚzNvSņŘǜĘxň`èÚĸ^ʺQ ØņÌ_jáZƻXrX|¦Ü¢ĊpÜFϬƎѲӒ̂\"],\"encodeOffsets\":[[28824,57491]]},\"properties\":{\"name\":\"Belarus\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÝŝĔɜuĽ\"],[\"@@˵CÒྪzƀ˞KʄИȒv­ħȀOĿƽԭÌÿğݑӥد\"]],\"encodeOffsets\":[[[-89961,17841]],[[-91027,16272]]]},\"properties\":{\"name\":\"Belize\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŏgǎĞ½õ\"],\"encodeOffsets\":[[-66283,33069]]},\"properties\":{\"name\":\"Bermuda\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĭއҀޕU฿̇ѥޗAх̽গǉȤࣟ¯ʑѽǉc¡ÈÓƨČĪçŤ͗Ĵѵ`ƕ_íTõäǗŠÛ|Hwyįė»̅đɻʙǡʽƕǽǷZí´Cˢʯ݀Uˌ̣ͰØɰɗƜ[˾ǖŰDÄgįĮEhļƊĦńMpkx̭ʐġŀUž¡ƀÅ̾«Ŝ¨Āǁî}nǕξ@B@UÒĽŠl¢ԔҸWƔǄŚ̽ǄǡѐȾͼǝɰ^ƘЪՂǟФĂڬʚ͆ݥನ̌G͌±ƜďɾĀ˜ˆä|ƀXĨiʲʘۺЬরǀĈι]ęçś³S·Ħ͕VōÇȅǢх͸ʹؚ̨͋˼ǝɼVʬ˟ծƋnçŴƑÐÁî±ǶBÄaĂ^ʌz¬RӐʥŒՇČ֛ŇIƳI¬ŴƥŚƋΟhȗXŗ൚¹DÖf¢r~AIǥĵƅO§fǭƛlŹ¢¡̜șðgÔj»RĉĲɵÚƥúûßÅŵϟµƳÆŉΏיɪȡuÕi»]ÕăÅ[\"],\"encodeOffsets\":[[-59555,-20648]]},\"properties\":{\"name\":\"Bolivia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ËXȦņƦÑ̯\"],[\"@@åĦłĴș\"],[\"@@ǇMŲƘƉ\"],[\"@@ȗ}İĊĨË\"],[\"@@×§àĬFÓ\"],[\"@@ÚǼÊĥţĕ\"],[\"@@ĉćĮːcȇ\"],[\"@@ř¯ĘĄ§\"],[\"@@ėeɐ̮ŒξʖĞĀĿī̗ҳ΋\"],[\"@@јÆ؊őυࣽǣĽőĐ½ƽɭôçǛǻßɕòχëɅҢĨŸpŏtñƞŴՒͮƀԶĥ\"],[\"@@ɯǑģĐǐƨǄå\"],[\"@@͕f˜ƬŌçÑĩ\"],[\"@@ƯʓΟÈÈǂ҈\"],[\"@@cūƯ¾ɂҌ˧ÿĵ\"],[\"@@ĝiƂȈĺÿȵ\"],[\"@@ƁyǾŰ\\\\ǟ\"],[\"@@ŁĲǡÀ¿Nwʫ̃şݭĘ˝ŒõXŷOƅI½øŻŌʰ˕ΆƥN¶ƢHLżĢ`¢¶ʲÉªňĠfàǜH¤nȒȦGðnÒvQ°ÍÌgФtϴċ´^~PøLÀ²µÀ­âÁnPptzvĖdffHȐĩ̄¢¸VĈ¢ØORÄvJV¥§¦żQrçArYi¡èʬñ̦ȠܪťːˊɌպ֦݈Ęɀ˞ǽь࿫Ɍʯтƛ¸йͩ˝ϯԧѷʵוઁȻJλǃ׼ࢬհǤەʌɇͺƸɾā;ǎ˓ޥƮŸȸӴȂòʀ˼ȺŁĨŎıôfȾˮ΂ҶÌŜąjŞ࿄ؕṇ̌Ɇɂ̘ɣµÅņ®ĨʳǿǳĀĝȒǤ®ǓśÍƗőՋʈɔǬЊļmñ˅ɔȎВæÚłόõ׀˝̼ͬƛࡌĸєÇనܗΪн΢́˚ķńǗӬƹ࢔ƂķҸ๱Aߑэ੓ΡЅŃ`LƉљՕ̵ƿΑͭơ˭EŶˣ܇ˣЭ͏̿ʏ˾ƉƕôįÑȩǏǽ·ȉĎu¹ίĚ\\\\įԽƮ৫˓ૃ¤ѳйңŏ્ǽƛͧ۟ͥ˯Ƒ˧ýɣ гףʻɱɩ¿̭ޓiǑȰÍɡ֥ğÙʢ¢ǃĊ٫ŧŵĔÉً˛śǝяNݩχषڣºŏɯȻbĚǻÕƝɋØĻʔėɝȹöùȳŇ÷ǎީÇ݉ƭпЅʝЋЭҭࣁԹۧऱܙoʆ͐²΄ʢĢ̞ƴrǆɄǘwɺŔYdƼϯīɯˬŠˣĿ͗ÛÞŭαϹɹȅуÈʁѱࠃ׿ԕwJÅzË®@РhÀ|ô¸îêĄĚöì´ύɸƇ̄ƃĖʥĈ̶̯ϕǦ±ç͑ͺtqMo]ţģÅßU«B[ôhż΅͞Υ˺ʍÿŝ˳n³Ö¢ƆĚưɄʊƾࢤ਎ǠWƪԾ˴ɬˈцńШʪƜ۪ȇԶɛŪʏđƟ¦JŤŚǴĊžۆƬ¨ÀtfǕŪƻơ̈ƉĉoħgûZã\\\\£wð@Ö_Ę¹ºi áކŇƆMĐăĒţxǕ@±bűƠ«`˝ƹ঱ŸZʼĦڨíʶÁoǊm¦|¬[²kÖÆ\\\\ÖĄ¼^ÖjvƙŮďôΒך]ń©F¶ƴŶϠàÆùüÙƦıɶQĊ¼ÓiïhǷŴţæ¡¢kźƜeǮP¨ĶƆJǦ}B¡qÕeC൙ºWŘgȘΠřƌųƦ«ʼTċ֜őՈӏʦ«Qʋyā]ɹ`í²ÏÂųƒmèխƌȿǊ«ŖɹU˽Ǟؙ̧͌ͷʺǡц²̔ĥ͖T¸´èŜ^Ěćκযƿ۹ЫʱʗħjſWã{˛˅ɽÿƛĐ͋²ȝPĭGăEƑlķFė«ŻÃÏa©E¥R·éà¿}୞¶ƶÇs{]ͻ˹×ȉŗۻ]ǕвۣĊĴŪĶŪGńąĢŏƐĉÆ·ƦjŵĦƵЄXþ|¯^Õì©ti|jjp|KńǸ|vŘȖԸτĉ̲vÎ Ąƶʢþњ²zŐxú¶ŜĞĮĬĆΊȴܸżĞĶÈ´à^ǆQłd¾v«à¯Ģ^Ú¤LvLÆfɺ಄ɨఈȟּν̶b׾ӨŶˎÑƅ͢ґRHղචXãŀÀŢɐȧ҈̲ʀ΍ѥǦѼϥʌf͈ǖƄşŽêF̴ΖݲΠǒͶӜȌɌցúƥ࣮ϕΦĳɜǲŕ͒[ƞǓָ^К̍ŨΦʪŜɐ·˨ĊҔːɸfͰΐËǸx{TøhǊ¨nÖUĀ¸ČgŶſƃңϘƱ\"]],\"encodeOffsets\":[[[-49649,-28433]],[[-49750,-27035]],[[-46346,-24462]],[[-45188,-23697]],[[-39837,-13796]],[[-39673,-13411]],[[-45567,-3010]],[[-45960,-1349]],[[-53076,-1468]],[[-50819,-234]],[[-51868,-134]],[[-50630,-115]],[[-50931,275]],[[-51636,143]],[[-51356,403]],[[-51506,1986]],[[-61132,4458]]]},\"properties\":{\"name\":\"Brazil\",\"childNum\":17}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ıjǜȂųÇÑ\"],\"encodeOffsets\":[[-60921,13396]]},\"properties\":{\"name\":\"Barbados\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ĩ@ŴҟƷãє\"],[\"@@ɽƳĀ˙ƽ̗ӷҰ̢ÌӒ̤Ĺ\"]],\"encodeOffsets\":[[[117788,5018]],[[117788,5018]]]},\"properties\":{\"name\":\"Brunei\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǝŰīĞGČhQ®í×«ÛyÉSLiÅL»q§gſCƝ§ŻJ½º{@ŝÝҟcͥĲşéýƯ}ƭmŻdoºɇÎƹě¤ƵĆĳǶlĸâTf´Ű҄Ԅ² ĮªĆ|ÊÌæêb̰É^w{Ĺh[ľSźPîMʲď´HŰĆ P]¼ɲĉSƍ\"],\"encodeOffsets\":[[93832,28427]]},\"properties\":{\"name\":\"Bhutan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@_ƧגࠁȖԋࡔҿĒͅͰqSһ̂Ыࡘȱbȃǎ½àß¦ȡgĭÅÉĭęïՇǳͭΏֵέȿ֍ǽŽƓƽ¯ɡµĉĵͥޑʯÿݏ\\\\řĠȉNÙtщʺȫFɩƙɿ֥£ÝɇƛŁǇã±ȇ×§ąߣOĉĚŸ۞̧٦ϙ̶EᙶࡄIᵦሶˎ͌ϯզξʌ{͆Ț̌z\"],\"encodeOffsets\":[[25865,-18220]]},\"properties\":{\"name\":\"Botswana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ڊअoЛŻȍÎʣԠųŨ̽ҾŻ̈ˡgɁĈŉ࣪ڕ­ƯǦ͗Պ̃ɒԩ˥úȿřટɀϭ́صvݷˣҫ¼ωӵ༩˞˧̰ΛɔʱγȣЋқ`ܱŕŨˁĻ֙ǀ݋Ƴţ֣ʇҽĵ՜޹ޘÃϪ˩ˊƗ֬®ӮƻƤʶȮϾުɰˊВaΞƨƖƶȪ˃ܪζޒ¾ҜԢȇƲÐĒୖǂβɺވݒô̔؈̮̔Ý\"],\"encodeOffsets\":[[23409,11182]]},\"properties\":{\"name\":\"Central African Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ˣ\\\\͠¤»¿\"],[\"@@œ­ĂƪĻ\"],[\"@@ĵÌƚR£Ý\"],[\"@@ƍWʈĸĹğ\"],[\"@@ͥyɰĶǰŦùȡ\"],[\"@@ȬǍɽ˒¢ɸǼɭWκ̖Ôī̤nǽۥ̍ԡcƓŤϢҎՂϲǨÜɡƋϻԡ˙\"],[\"@@ŊĀҪŝघAуǿKȍЫøń´ƉĎàüȡſΫÐįƘ̑xsƦɃͨΞÿʉɶʵ\"],[\"@@ŢqȡuìǈѺǲѥ̑\"],[\"@@ĉǔȪĉǥ\"],[\"@@ॴΠͰӮࢨҔ܈Ǥذɶࢢ޺ਞֆႺӲૼkԶˋʡɦųēɣއͷ֕Ƙٹƕ̂іųȰȫԘƪʢĹǫ̙ͿɣЦ§ȧ˺ӧՂÙì·ȋï̔ƍࡄį¥ýɤuѸȸƮǱʆŤħÌŏƯ×ΰÙቱկʡKǟ͝ƒďƁÇĊıTǹ৥ۇɋűȠȧfÉˤ˚Φɹŏ²Î൤ۨˀ˃ǎ؎ŮోSҸИƕ{ųŠūʷगΑȍĀêĎ΍ˑε{ɃĒȯHÇΰ̳ľIଘέɜכœħǸǉٝىʏګӋՓϳhǃʃᥫEA\"],[\"@@zùƓŚ¸\"],[\"@@țûÝâʺZ\"],[\"@@ĦéʯÇPĮƺ\"],[\"@@ʡĦZĴǂLĆȥ\"],[\"@@ਫŌோ֌̔°੮ȣ࢖Οĸŧė\"],[\"@@įˈȒǋġĻ\"],[\"@@෺˕նڋۮʱоաĚôâɓɗó˿Âৡ̀ɪɢƺĩǕҿã˵ƄƺĀʵÀbźӫImǌ΂è͟ ͇ȌǯÃœɒċïıĤͫˊΚjƮӻíʍȸάĮ؄ȃ\"],[\"@@Ŀůϓ¹Șʛ޳ࡵ÷ͥդтdƥֆՙ̧ɪ¨ǽǿײįĪŖĻέ܎ϔ°ǓЬĦ˴ĵƱӳ̓ʸpħĕɔ§΃ɗࣲȬĝțЉǍĳʥËȚIȍȓǈś̌͞ΖĬʭԍȌƌǺňȁϯݥǩÀɡáOю΋ʳƏ˘ҺŝˈǟĔʝϥ\\\\Ŧ͏ƋϫЕЇŋŲάŦרшӧGǫǏҩɖøRȐޓɇಿƔٽƇǡƔ¤ɒ߈Ѷ۱˚ǂÃąǆ©ˀФΎąĝøĴŸǯzmņǔƀȌ«œǰвڰɈĠĳìɚˀ̔˒րȤˮćrĜǪ\"],[\"@@ȋŸİèĜȟ\"],[\"@@ɓ¸̼Üħœ\"],[\"@@ÑʞǊôķ͑\"],[\"@@વʬǊŖײhͺϩ\"],[\"@@Ĵɯ˳ѢƫœĻ˦ƍ»ĥƪWßřߍՊlǺͷŚژ¸\"],[\"@@ΝƙȕÉЊŹõɵʔŤ˄Ͷƕäơ\"],[\"@@ſrðǂÐǳ\"],[\"@@֛̈́ÈòюǏǆǇÿÝ\"],[\"@@ůĩˍ¢Ɍǔǲŋ\"],[\"@@̒yŘṯ̌ʭ̈¬̌ϼĚʑۧ͝ĵͳĸ˔xΛƜȟˤ˒ͤ\"],[\"@@jŸŰcƙœ\"],[\"@@̤Ɍœǯȏ\"],[\"@@áäВƮͯɑ\"],[\"@@ȩ͋M˞ˁ˳ɧÉȄ˒ϋȣѼծß̟ɞΜ˰˫\"],[\"@@Ěř̽ŎɤL\"],[\"@@ûÓÆƒvý\"],[\"@@ǋã¦ƺŦĕ\"],[\"@@Íʝàĉłΰœ\"],[\"@@őØɾɮɦřΑǫ\"],[\"@@ŗWΪĐʑ÷\"],[\"@@ԋʆդZʟ\"],[\"@@Œū˳ƒǢe\"],[\"@@ɒƏȅЯγϗȊJʔ˪ʆ͎f\"],[\"@@̞oYıΡHÞŚ\"],[\"@@έ¤ϡɶٸŝĘƻ\"],[\"@@sȋҕ˝ϕǋֵ£Ǳʚ҆Ϛୂ¦\"],[\"@@̀ȣ·ĳӿʸֈ \"],[\"@@ֿǎȚĀИƭqğ\"],[\"@@ΘǔΖȫႆӗ̾γǯǑࢸØѶ˟سʧ૧ȶõȄ۱Ǽૡۭٓǃ́Ӧ୏īȂˈְȢĹήʦ߾Ѩ͔͈ƟÁȣːȽ\"],[\"@@Οƴ­ɒͤſêʅ\"],[\"@@аåĉëډŠʍ̠ԶƓ¼ƙ\"],[\"@@ʌMśşůŮ\"],[\"@@ǅNϤłɝŏ\"],[\"@@§ëǛĤĒȢŲə\"],[\"@@ߝŏȨ৴ÇòǧǷS\"],[\"@@ʟĎÉɜɐǤɾĹƣϓ\"],[\"@@ԈűĻ׵ӟƧএ̡κƮɘѼ˨ޜ\"],[\"@@ǇÒȆö}Ƈ\"],[\"@@ѕźϘD¾Ž\"],[\"@@ѥƪĦƌʮĒʣ\"],[\"@@ϱĄʜŦɾÓħƕ\"],[\"@@͇~ɖ̊ȁ\"],[\"@@ǛkŚƄĭ\"],[\"@@Ǣވ˲ϑλγė\"],[\"@@ŋƕƉİʖ¦\"],[\"@@͑ŊǈƔѨ×˝ȅ\"],[\"@@šƮˀĩƝÃ\"],[\"@@ÜǏʗÛǴñǩdɈ̦\"],[\"@@ʳÜˀÆKš\"],[\"@@UěڷĿێȜ\"],[\"@@ĹſгFÎĿۇư̶Ğ࠲S\"],[\"@@फ़ʣҤϑОÓ࣏॑̕Ô܉ʤ͏Ǜň̋ÍȫĆƠࡀǠùȨъĭƅ˺ΈÄ̎ǿ\"],[\"@@̖įٟîΊ\"],[\"@@­Gȟ{ͻǕΗʭ̯ȍՑԩٵ@ܥFɗMĿ˝įöœr­MƟõÆÓɏƇࣗ͏ٽıЕŧϻǵϷǵɁ@ϝʨɲӄ̘̾܌ªĆ̅ౚÇɜ̱ƞ֡ʤļƬūĺ̥ũΘˉGȋǭ̚ǍäӧȬࡩΔ҇ǲ҉ǴՓȰࣝʳૻŔȷÀ˿ŕԱȴ˽sÇ@ïƄ˯ŐΟ¼ĳWˣùŧæ٥ŖûĸùŜµɌNʧÆMͅȣBܑ@Ω@ܑ@੻@⿿@、@、@ᅍ@Χ@Ω@੻@ີ@ć@čąƓʂ̌Ŝͭ¯ö˰˽ʃлǦŐƨűȠĂʕ²¤΂ĵʷʟēсȼɱͰǔϢǗ̝ΕaÁŶďƵϟ̓øҚİԡsŞƄŭzJǈĩšΧ¡յʄʐϨؒĄիHˣȕƳǐ°Ѥ̜ƒǐѺ˫ЕͬȰʚÉúǃ؍̧ʻсɋ̶ːƆĈȒ˧ƵȀҢʽíƇˆұȐùƔˈƞ§ų̃śΈEǢţɻǪϽÒõǊȜĤΫaʣΡʱƕ٫ЈʖΆΖĆϩ£̃Ȭܴ࢔ȟĈɅхݦëƄ˅\\\\ÁĞƟەʘ̑ǞȧÄĆɳł¸Æ¢®ÍÞšŌěþϛϘɯɲɫɾ֟̆ģøÁÎʅǆɡöěʒˇƒ˭]ԳĽĿǁiĥʵȟCˁğŵ«ƉíçZÓʼ؋͔ҧˮˇŚ¢ö¶Ĝ@ÂŽGχUʟũЕĮÕåȥȩ@Ӭ@݄@௰@݄@௰@݄@௰@݂@݄໒ŕྞҧग़çܨǕ֯ʒ̨¬˭îȀǘͲEŶƈֺT¢ǢѼƥʛɉࡖƴȼǐј|íâ˚ࡸǞЄȄ؄ɨĐxǏহ̃गį݉ˡԍ̣ɾćǕöْZšȚ޲̒϶Ñɘøþȭܒі਀ȸɑƓĔċǜ¨চђУƄưžٞɷࠎف؎ǋ̒ÜƹǖӶ̨ȇμľŰ͑ʂÝǵ˙ںrцΞߦLजŽ۔ɽណϻঘÛƹŘڪےǏր̅ōō֙F̥řʳȕʨëᕊŗ౜ĞޔǞόɓӾƼɥȨƨՀ˻EƉчEਤ׋ϛ˺]ȴӌđک߀ƈǾାƐ֤͢שÛųƅࡕuĩƁӵgͩŦ;˂ᅰʸДùʸΑ،ƷƔƕ࡚ªॺ͇٠ૼŪઘĥђæȁɠপϥȼȨҁļϡ¯ϩφζΤÎŋŘўwθȭҠ²ʕɭلǰͯةȒȧΞµō̦{EţࡇՔιȽː՘ZŢˀͣЎǆʄ׺¦ઞҢ͹͎ǳǹ҇fѢːƝǆՔĔŇǇǺɊاşǎǁÓॣȎӯ΂ɈʨΚOŨ̹©ʓƖĒβ͔ƤмÝƂžϹæग़ΈΪǽҾmڢЗ·஖ٍ֣´Ǉŋ҈Åމ̵ӜJʹţ׮ĪȧĳࡲÍЏǃ́fِͻāͿ̴ǽަ࠼ࢴ˹ΆӍáąϡ˳ߢٯڤʰޘ৾ٴÖȩÒȶȖѳƄĵԨ᝜ŻȔ÷̩ęώíêƉ܌¿ӣʫӜČǉՏǗՙWˤʩǮ¤˧ִ̩ơΫ࿃ו्Ԑʵ²ɣĹ͂xўɃ̖ϿΥà˭ëࠍ̢कpƋؐȯళٻѣT๻ӲşÉಋâ͖ı¶øࢺśߚε࿒ųࣟ࡝ױǅ͏ĸÎũПÀǏŲȗƼƹʿn\\\\ʏցğছȰ̙ଝ̠ŘɿʒqĝĜਆɍʷŗԼŤܺɉɬ͇ؿɓދ`ΦȑԫǷǑȨƳ֫ǒʦűΫʁȻRɨƥԍʇԅ݃ɃęwਗƙǗ֞̑ΙǬτߎUظ୿ུ̫ͭˮ࿘Ϳܾ͑ӾϑྡྷЗ˺ǇŭɧʰǦॴ|౤ȹƤɉǣӋʄΩųڋ׊ԇȓǫ̤g݆ҋŪɻ΃ɛ̼ƶ̾qٌѩ͝ΤͲϊʢƑŚəƠʠɁɸ҆Фʝ̙ͨࡂĖ̄ȷĆĂÐӅф࿀Զঞބà׊ʅ٠̤̅ଝ֎يזʞ̈́ćŕĚǐ˲ʝÈŐ¶ȓʀƬĬʋĈǜƚӻT֖ئэɶĥϚٖʒಲɍxŗϖŐ׬Ǒ[Ą߈ɘࡤ̉íʅɢèɼùƾŵƩý̎ĐȒÓǹƩδɿ०÷ʊǱЪƸĊǋ̕΁ð̩࠙¥ޞěªӝ˴ƿηĭ£ŕŔ̷Ǐ̬ÑѦǐӖjˈƉŸɑŅˑַɕՄŰͤθŐǃƧſʶɠàΏĞȈ܈ɸ̠ʨ̢̡͞˔Ǡ˴ˇźʎĐÁžξç̳ŶsȦ;KťŘ̖΢ˊ¿äą̉ƅРª¶˓ƜæʲʻǏōƜēȤ²ľřұş؈\\\\ǙȚVƪǥ֍˽˞ŚԬNǽɯϗƻٴŜƲƳ̆»SʥѷĻӘË±ơզȥˡुĶٔɳǝđў¿ʍŉ̊]Âƙů©̢Ň̄ÚƴǷȄ¶ÉœǼƙΥΝܞȾÎĥɂiͱ̥Ӡ͖ɘ¥Ǿʽ͎ÃμĐҶʅʛǣءƃǕƭৃǷ˓ȧȿ¶ʜƕȕȃඬײ׺Ĩ͍płĨٴÅʀ̷͛ƯǊţЬɪ͂tоʙƘɑIӍѫĉӠÏ}ġȟ~ˈɋ੿ֱಅƋୁࠓ໵ǳǍňڝÌṽ÷Ϗǽαթއŵୣ࠻૿Ɏॸʃú×ȁ̝ׯԋҿ˿ԣğएБзЅһȣɷ|˺ƻ؟˻\"],[\"@@ʻºȘǊäɃ\"],[\"@@ߎ¸ʈʢҐఞɭԿ̛Ȃ±ం̤ϣ̆ոq੆εӊ۝̀ćюɦ޳੊ǬǘಠŹࣈ΁ࡼৱŇљ޲εюĹzŪ଼̓ĪţѨq¼αуƜƏŵ҅ŮΏŅqƕ܁þΔƟÑɣ֤ɬʹWǄυࢍǙඩ¤҅¢ðƊਿĨ͛ȶٿοޥÉछɑᵽƳЩ̀Ý̚ྣôݩŢֵՊᔔɐ࿢ñࡌìᄿ͎ምĕഅ֩ɒIŬ៺ϬᕏďʑÚОǊ۹UͻĬȆؚɸɣƐ̈ǦᰶتδÙžȏЃБ\"],[\"@@൏ҼʶǺઞÒؘǃɡ֕͡\"],[\"@@ੂVࣤƓࡰտ൹®ఝŝсÎ̥ͰӿĠÓ͘ાÇ\"],[\"@@ߐŢҤAɬĻľԒ՝ÈӓʐӸȸࢎǁҷɜȀÌ׽ʷʨ͚ȚࡌƁ৕ʺࢎ̎ՔªƆຆżҒăैܩߝϩ԰ŜˁҗزʨʢȋžɸĪۦƥOȕ΢ƋɷȄƎɀসơ߽ʖؘɊႤŹո̃ܵёࡨ͐׌ķęŗݛŏшʝϧђΰ֤ļ̯͑ТƸ҂ʯćɊ͂Š੖ƋΌƫɟȝϋU׍ɛݞǺ̺ÑҜŒź³õɓे̣ԪÎŹ̻ϘϠࡾɞ௢ȡŎŇ෍ρ੾Ɗȗȋɞֺ͂אʁŤʭڣਗɏئÆ੶įѪůRť෗ÂՑőՀØӪę§ʁ஻ÖञŻɬƭ৒ÇʑōĠɓǎÂÈāƨΚÐșϓтȦàů̘Ğʗ]ǢвŸĉȳ͐¬ڎɱƃǿׇFܨïȶĨҨţ։΋تńӪɌŠ٪̛ƥŋԃîҬɩ͕ÁԅĈhƯҖǇՏgȰƵɵǋѓdʑǐŧȗ¡˂u͗ȱʩةȴÜȔʇʅ܅ծߦҬҷȩۑåƚǪ΁Óޡж÷ďȗèɓփƂךεƕĕБՍʆʏ¥Ҁķ~ǩːąÏǫ̰àϞǟǿÿ՜ѿÀƼΞɹɴƐ֐ɉɉŃϤÉśő̯SΊɟЮ@ĵĥ͚ǫɇϯѷѦļсͬ˹ЫV®ʳफИIĭƻȫȨǏ৏֐ƞʽ٫ʬΕk٨ѿϸá»ë๎ڧť˅ᎋ̦ӷƚЀՋIӅŮʯüƈĲ͵¯թ̎ԤƐޅŮĮƒ˗ÍߥӚƸƸ՝IŻŹÅƸ˥ȁƼȧÅȌɥࡩx©ōࣵŻݻĺʇŞ¥τؠɐɌ఼ȍ͕̈́ĂƖχʐՎ[ࡺȂӲeܫֶ୐ҼȶʬӌȊࣃऒ҉LA˖ʝ^ņŷɽMԻɢƪȦ༳̅zʼԔlʲƴۉɎȚǌё÷̇ÀȚŞ؛ÐƵͦёSڃ̀˵ǟҖƅwɝԿ÷ᅗĶؘ̌եǲؓėܙƠ׫ೕŲ̇ÙҕĞÙːேǿߍȼ֡ӊഢįפÈᖑϜ³ߘঀ࠮ࠢː๨ńࡈŇࢭ΃տӵςۙ৐ҝೇ˻\"],[\"@@܀ǵదƀрÁƚƃԽƏ̒ī९ϑڈòѐͳҊêŬƃ̗ȕǀЩ߿ǡԉšǄľΉϵśһîଷ٠ԩƐџCࠟϘъ˂޲̙ڎªöǢɤÏ΃ʔײ`ғŪѯëՑǲҠĨϢųχ˼ࠈHUŴ\"],[\"@@ס³ϋêขǶӓȫ\"],[\"@@ߔǁഄiȸŃร࣑ჿHφõǺȹЛͣࠃ_ӿܸھ޼νǾƊƈຬĴ\"],[\"@@ѾîôƵӖȖࡼY၊ԧÂƯᱝىҩ͍֕÷σקܑĭɷ²ଃ̍ދӪએʞңLႢຐݯӤᧈǔ࿈ʿơĵ\"],[\"@@ͧ_ˬĮ¼č\"],[\"@@ҙÞ˺°Ǡō\"],[\"@@٣ĤҔʂנȱЏų\"],[\"@@}̟߱ჃͪըΌࣜƾࠂǩ̮ͧ\"],[\"@@۱ŋÉŌԬŨʐŧ\"],[\"@@̽ƴ̨ÆVȹ\"],[\"@@ЧµӟĄ๘к׏҇\"],[\"@@ӛéՊʬ­ȁ\"],[\"@@ȀÛӑƅء_ɰżߋ^ƺĔωVĝŔ഼ŀтʕ\"],[\"@@ࠆőɓđ࢟Yȑɮіºªé\"],[\"@@ǃץМóÒɅˇôȍùǢʏ̷ÖÙƗᄩsȽƲ˴¸Ӈƈ౤ʖ᭣ƹǭðոɴঠÝχ¢ϩȦ̀ŒӛĪׄĀದсȹǌӒzܻĆξÎ܏ǲࡠĞޤƕưȔࡔȑ\"],[\"@@͗t଀ňߧŻ\"],[\"@@ӎ½ʡǅڰðʬǱȤ̂࢜ßĨˁӕҗࢽƋ૑h̙Ĳᶿկॷաɚఐɔ঒ӠȦᔱƿšǆ͖ƂңdŷǍ̃ÀǁӋģͥŜ˅ūعǠࣵ¾ʶȐল޺Ƽઃýاº̤ńຼľඡ¾ϤȦலmࢗĈۖȒڰ̶ȵूI൪չᄘMDƂާȘ͒Ǻ۟ȌৼϊՌ×Ʀֱ\"],[\"@@ۣȒΜĒφą}ȝ\"],[\"@@ੱ¨ߌĎ˦ŵ\"],[\"@@ࣆţʯ˓ҐƢෆ¼ٚƻܻᅌŻĹĥ၁ᅊΥ̱ȗؖģɬǤόūІÂǆùʂŐલȇkŒ႔ʒאË࣪æ໨ǝۀ̳ܻȍ࠘įҗë͹Îîˋඩģڝ´ډ̺SˇݥÝՕĊÓ÷ʷḙ̂ďᔫIģ˴ࡱɵ࠳¶˝ǤɇƗΑL۷ԜǢӪݿѐᆵ÷ٟȈ͜ĈਕżД¸̙ƦކĀಮŹ\"],[\"@@ٹȍѨǕωʲǅࢫƯȟȿّľĦͲމʕʏ͛пǞ°ˡ͗śзσ̜̫Ǘ્¹ǰʻw͒ȀߪĎᐄܐሺǑłѺè߮ƹ\"],[\"@@ͧ±ٟİs˄রŷLȉ\"],[\"@@ցۏҶϖG࢜ͯ_Ǐ\"],[\"@@ᆸ«ȯɯᏋdǩǼ׮ü\"],[\"@@ַÏŸ੊§ǆāׇ\"],[\"@@ϣ׉ǎղƌм˕\"],[\"@@۰y਱ȫ״ÑȧᆣƉڕƔ§̾ᙎǘ\"],[\"@@˦˭ඹÐ̇ģԩúࣻḚ́ƚနɤࢾë\"],[\"@@ઐšΏƑͪűႱɧ֗ʆ״¾कƤʃϖߚRবɁ\"],[\"@@܎νܺǘӚɷ׌fۚȣό؏झqڣ̤ಃ°Ľĺ৹ġۇüūǚ૶YϙĄղĐہǪرƳŰȀڏLlǮńæ࿰O\"],[\"@@ŹɍथƤHǐݴ̤ť\"],[\"@@ਰґஂé͈˿ւ¯˙ʴ܌ȹɱߐǡˋˁߪ°ˤſ̠ŐԘ˝ྑʹևʣΡˎ¶ϫّ¢åͯ৷Ξјϓ٫ƘˉƫรƎйŮࠚèୱÆ̱ŤЌtߣźೊ̔਺ø౫ÞणƅƩĤ࠱ĥҹȦ੖Ǭ૳Ù܋ɌƷȂᅄó͒Ŭॣ¹ࠩư܂ª̔ͅှƉೱɼ҆ǰ෎¨޷Ș়`ॲǳ\"],[\"@@ᣈ÷႟ɯᦜŪˆĒЖĻܨ̧ͨ٬Ð࣪ßȉɏᛏχᇃŁჁ˕ᾆǘ♩टঋƀϔʱຓġద}ۍ˥ࢣÉ࿧ưޠıĢɃᅡ÷୩ĈઞɭऺSƇǍ῅טŏൂÄ๨ɋ͡ǥ಍ਈƷ֟ˉᅫÃÃΩՍƩ༩w࣯ǰ̜Ƴً¡ʨýቒOѦʫ׆îʲȇʩƹᑝͭƥʠرrڿȔʠɍ൷[˵Ȉ§ˋܭ«િɾȏǩ֣ÒŕŚOǗݯhċ̰¥̏ۗ¬ŉ̒ऐɸ೰æܳɂ˯̊੘âখͷ܌čࡤ®ࡖκĬŤহϫ౓vɏ̲޴ɦͤgֿÂņʎڭΗՍyʢɘ࠱ǻ՛¦شԈະŜผţ౪ǦׁÓဇþzĺڶÅᜁږßΎᙲ{ႊҗ৲ã̐ÂݕpဏՊㄾҖ༓ò໦ДℹٳགྷÝ֌ǎᇏȵ໩̑Ĉ߶ɖጎȊᐯħಣ̫֣L঍ɠᗄĂಊɂያǥጉ¡˗ŞتàϷàნǔݍ྿ƅԂȖఃÃ̗ĨᳮΌ࢜ř͢þ೨Ë೑Ȣ฀Țቜ̹ĆƜᣒͫ᠛Қ٢ľλĠੈ³ŭǨቘċ୿Ȝᒌ_ഞ̣όØಷͲᗮJ์ʕڃƸՊƪۢh࢘ǗŧƲपКĉ\"]],\"encodeOffsets\":[[[-61222,44995]],[[-68364,45755]],[[-62424,46582]],[[-75463,46680]],[[-75332,46561]],[[-62571,47048]],[[-65342,47584]],[[-63400,48420]],[[-55528,48580]],[[-76501,46084]],[[-129118,50539]],[[-55863,50779]],[[-55391,50939]],[[-129680,50797]],[[-63284,50273]],[[-128188,51300]],[[-130250,51856]],[[-56789,52774]],[[-130994,52710]],[[-81289,53199]],[[-131449,53659]],[[-82669,54014]],[[-134915,54473]],[[-131637,54211]],[[-132267,54393]],[[-132964,54444]],[[-133361,55254]],[[-135839,55427]],[[-134069,55787]],[[-133709,56085]],[[-81897,57557]],[[-80830,57617]],[[-63225,58936]],[[-81629,58896]],[[-70819,60458]],[[-65952,61816]],[[-69871,61687]],[[-80416,62187]],[[-66388,62839]],[[-66591,63365]],[[-81454,63910]],[[-66379,64061]],[[-72025,64050]],[[-83968,64466]],[[-79745,64994]],[[-78517,64916]],[[-86957,66828]],[[-86706,67149]],[[-85735,67376]],[[-110686,68614]],[[-64185,68666]],[[-110489,69020]],[[-75388,69411]],[[-88673,69362]],[[-77492,69963]],[[-80878,69830]],[[-107049,70048]],[[-76678,69990]],[[-104290,70233]],[[-102622,70459]],[[-102394,70670]],[[-81111,70498]],[[-92364,71086]],[[-78843,70804]],[[-103599,71063]],[[-97805,71244]],[[-69544,71210]],[[-79901,71389]],[[-81337,71463]],[[-99778,71315]],[[-88998,71796]],[[-76501,46084]],[[-99105,74688]],[[-117270,74336]],[[-107815,74670]],[[-81446,75423]],[[-88667,72716]],[[-102401,75721]],[[-100628,75642]],[[-95406,75941]],[[-122609,75892]],[[-99692,76315]],[[-97594,76294]],[[-106618,76838]],[[-95787,76829]],[[-98384,77323]],[[-96795,77568]],[[-121168,77394]],[[-80960,77749]],[[-104680,77840]],[[-106519,78422]],[[-100045,78302]],[[-103655,78418]],[[-110891,77883]],[[-91879,78344]],[[-116286,78586]],[[-96558,78759]],[[-118324,79220]],[[-91989,79123]],[[-107067,78994]],[[-97776,79660]],[[-104134,79562]],[[-116564,79621]],[[-113109,79978]],[[-112451,80539]],[[-98513,80417]],[[-105908,81220]],[[-101162,81901]],[[-94090,83081]],[[-71156,85010]]]},\"properties\":{\"name\":\"Canada\",\"childNum\":110}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÅÑ@ĝ«ÏƜBAҬǥǺŒÆiÅCŉOÏĩȟÐ·K¥]u­mÁNwzµfĿ¡STďľ¯Ląků§¹B§TďƨyAā^čɵíǡťǕȍǦÎ®̡ƚóǘÓÇ¿ųíõȫ֑ēǕÕplÉü³ĿĪ[ɀƯlűMěñ½ŝħãIRAÂÆp¼ʌɾǂhÞxĮƘ²nlŐĘŌĔvnj@bč°ÌºƘǨ³ɮƆ۴HĘxX^G\\\\]NčMVStŘߜɃĐ³ćǑ@A\"],\"encodeOffsets\":[[9757,48405]]},\"properties\":{\"name\":\"Switzerland\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɫªƎŞĞǇ\"],[\"@@ɓśŽĬәșȬࢲFƔƧ\"],[\"@@ڪĉό¸ŽǑˤċȠ͙ۋǊoǬʫÎƓŅƬƥȗӋʠĄɞƴ\"],[\"@@ƾċ͚¸ĶǣƫÁ߱ʎϐl\"],[\"@@̲áķɗˣŤЍÏɗɈǶƌԚŭ\"],[\"@@ąʹSɶǿǟǑϱĻĚɘɳƑŉXēɎѿƸͰŖѰÓ\"],[\"@@ؚŭѦʅγ ʥǮ͹`ω˪˞ƣ\"],[\"@@mᇛ۩IȥŬٱą૫ƶąĈņĂ؄SʂĮĆƃ͞ҩΘIȐ˰ɎŸ̟ȿeĀŋ̮ȱάÖШɁǬŴߋʢƍȄºƔآʲɿè׉ħʖˀŤȿǆϐËѬˮȸƳ͆úƆÛ\"],[\"@@ʊ˭ƃˁƁPɅМʂƄ\"],[\"@@½ĳΩCȯȑŖ̆ΖÒƬÍ\"],[\"@@ğë_ʄʾ{ƽƛ\"],[\"@@ͥĺ˦Ϛćƭƽ\"],[\"@@ʃ˕ɁźĨăȊАn\"],[\"@@ıܝƙIįʈƀʪȣĝėˍН¼ȲʢƉŔ͌öĽĺɖǀ®Ȓ̌Ð͋\"],[\"@@şƪâЬƲÜȜԑ̏ş\"],[\"@@̙ʏР\\\\ƖʬŖˢم\"],[\"@@űÖˮƻĩ\"],[\"@@ŷÅȋĂ͈ЬCѧ\"],[\"@@ƽƜĂĜüɷ\"],[\"@@ȯãƙð¡ŐȦʴβƣǫɫ\"],[\"@@ɣǑɲԕʍűԏהĮƦͼìĒȾʔőķ\"],[\"@@ŧāƿ¦˨\"],[\"@@˻Wɭł̎ாђčĖʟ¡ɯˋĳ̔̏ˁȅoƿ\"],[\"@@ƻ_ĦðÖÏ\"],[\"@@ŻĒĢÑ\"],[\"@@ƾƯ̇ࢁݧ̝ʽ̗Ƭ́ǩ˟Ƭ؝Ʃˇɮхɯƕɇ[˟٩ЛЩƝ׃ǗȃÊىĬąĥƵǑEſ֋ǯŁÅΝ˦͙ğŁ˼ڧ¿ˉɞç߅ǙÛ˹܅ƋċŞɵVҏճϱŗˍrޙʸ۽җˣř֕Ʊ¼͕ƃŽĠǣȉʻjߩƊ̛ͫǣاͪȹŻġȌӧŝϡԜµ¬ĳďǟګQnōϐÙȺ̑ͭȹĬ̿ȳǧƨЭȫƯ̵χʓƟ͑ǄȝuɋȑğḘ̈͏ơďʉ˛[ýų¬։̊ԧդŌƜ×ÉܝЪϗ࿪eౢ̉ڟŶ͉ɑথʯǙࡓʩĕ݃ɂȧʂЄĮ¦ʑĎ¨ɄϞǘ¾ȈƉ ݝ̱ɫ˟хǼ˘Кɲ©˰ƐԚ׷ìǱĕɱø·ҍѭȤͼŊİȂĵŕ˻¿έ Ɂ҆βŇŴƀΤãϸǪȌȿęƹżňďʸŔƶɫǈ΁Ĵӌ̃ޗȭȟȶύĬɢÀS̐ܿǠɻ͎΄h÷ǈŎĠɺŃȐˣ˪ĵŶϐ˕˫ǩ˺Ȣq֭ˈʞȂ̀i̫ǰưϢKɏƲƆ΄ʉЕũČtڲ˨ĶϷVġϸৌūǿŸę˴ȋɯʉΫɢĸŔʔģĞö̉ƈ˘ȼŽͦşlµıгŨnȔҳƽĢȡɵȔڂҞţʈކĜɪƒüŐǏԟ̻ƉΨÂöʴŦvɑȫϱĔɆ֖śΚϸŒ˨ęѕǸèɔԾȴ¸ŞbƄԏɤɪžÔȘáʶˊʆ÷̶ØƐŢGşɄŢ¶Ȁǁñ΂˗ÔϴɔŴȋǉ·ƨʏɟ͏NġĤƊƿÄŽͰʜॾɖƤƺӆʙ׸²ЀǓ˼A̜¼Ÿ͖nĊДѾޮƤͲЪȆ޲˴њßҶʒμɋႀʢɨǀìвǟ؊ǲɈȄܞƈȎɼ੒ÇҞɤԤŅѺƴ࣠Ǜʼ~ǖȚǪɄరįՎࡨɕଢаŜľǺ¥ʌƖ®ĊÞÚÈǖν~mǂí§ÿ¬śÆ̽¢ſVŽĢĿȦǟÖ²lwPoħŃĻƉFgİĭhCÃǕů\\\\˽ɘƛ×ɯ̤ͯVˋʰܿDˡʦÍǾƖ\"]],\"encodeOffsets\":[[[-68903,-57115]],[[-68689,-56477]],[[-71375,-56237]],[[-72695,-56184]],[[-73103,-55329]],[[-74673,-54765]],[[-76170,-54192]],[[-70277,-53916]],[[-76618,-52869]],[[-76348,-52507]],[[-77109,-51896]],[[-76856,-51503]],[[-76909,-50008]],[[-76263,-50327]],[[-77322,-49933]],[[-76356,-49758]],[[-76914,-48985]],[[-76096,-46788]],[[-75399,-45897]],[[-74737,-45854]],[[-75504,-45460]],[[-75582,-44879]],[[-75543,-44386]],[[-80695,-34453]],[[-111902,-27791]],[[-68807,-23369]]]},\"properties\":{\"name\":\"Chile\",\"childNum\":26}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŀ˯̻̩ǃҙ͓ʥҡȕۉˊ٦ԤϨċNðĪބƠΖßÂƌȦū\"],[\"@@ŘScĭȉĖü\"],[\"@@ĳaļòGÏ\"],[\"@@QƜægÓų\"],[\"@@ý§\\\\Ěâ±\"],[\"@@ĵolǦĮ¡cœ\"],[\"@@ĵoØŢı\"],[\"@@ɭ¦¯ŊˆÙXĕ\"],[\"@@˽´ʷɌնʿ\"],[\"@@ɽǬKŮ˽ĚǙҧ͑̿݅͟§ȴ͉şȁ߿ŦȍȦǱهۏऋϏѷϣɋƍϣڻɽܝҡʯ¥wśУŏ³ǂӖǂ«ĤǈƔҗAQƆɀĂ@ǦʆĘЊӺυζėŅү°׏֛ࣳГΏӏ֯īɍƈƥȽ˳·ȑǬˁȼŇަşŲ˻ŗ̳ˮǋЈbҪϾ¯´аżݠ̻ΖÌԢŁȃ˭Öķƭĩ΃ń݇̇ȱjîǁƹ}ÕʃȵÛÅƤŧsõëǆőܗַɛϝčࣈЋԔ੏c̕ШȣÀǿϞ͝VħƻRˡŬ͇VϟȤПƛְ¢ÔƏܼпǾͷϭŅԅι̹ɉūʦ¾ŜƛՀƞΜ˙ͼĝӛ͕κĸoЃǙĸȗÁǊȫśiĺåƿǭŔ̉˳ÏŁĖƿʑǯuîĳȵʻjƗˡ˅ǉΧǡ»·ȢħįĹ²ʘϙΗɻ˗ÈǊơʌ°á΋êǙω¸ĘǽʷmËɽɫÿhǵӍLåũƏOǶȓΫ΅ƋHĉɃÝłǩŕƟÌ¥ǍșĉÎÛƇĉËȝǿͱƯǱªšőʫĈ˻ǙǝŜćȏʍXɁyͩ̌BɠčsǃǅȈˉG̳ͳų»ŐœʥũȅƗȏǜ¯ȣ̣Ğ˹ʓӯ¡ϙʟſľɍͥǲě«ƓǖŹƕȉϱÎðìʱЀfǸɀ̌ȳķƔkŹͩĥƒˣƭɪħHnɫƫ¼ßŕɱ¥ǳŬ΃͉ˆʵ°ħѮȖɸȧŊə§ŋĦʯ¡Ӊ΢Ήǫƫ˃˅ıȓĆǛɓˑȮŅǋƓƴ́˓ѕʬÃƛȭ»©£ʇRçĒkJQqs³uß©©mǲΩN£HƟqʓÞđaO±¡oMƋìɕ¥\\\\ovY®RÄÆlĪµ¹ǀЋʃϧRǧɸoɨ؋Ĉ˄۬õĠүĺθŽɾƄǼԻUխǙŦˌƩɚªʄżĂè͎ǆŐɺǆ`˔ɸûǬĸĮ®ԆóڌǕìŻęȣՖϳ˦½MęſÙċgŉėʛȅë»٫˼ϧÜԽ̳࢓ƇϫɝʱҍӁ¢׍rKºÄMlVzÊ¬ÜØ¯îRćgğHůĪǠTƎɻĎ÷°Oůą³GʱĐíNŹOĽTg\\\\|ĺ]xŃįrĻRéaåÉËą{ĭ©±ӷس· ÉÊaüæȶhĐŜȏðŵçŵői_B¿Ƚ`ȧÑ˧Nűbķøïûûn¤yrÛP»cĹĝãġÀåþ·]ůÍqd¾åŪåîå¶ɣCǕb÷p´ĤôAjVµNǵ³·NӉ̐­ŀ¡ĶuÂáïv̑ăΫή޹Ϝƫɚǁǳrȋ¥Ƌȳß­Ǉǔĥ®ֵɺbĬʃǤɓÜɵĊɿ˶̧áXȐ½ǆȲȗȚîƔy®̈b·ƒšɄŞqш¨Ķm®ƏĶëîå͆³ǢȲǸľÑҍǺƗ˺éǂ̂ȱ`̑gŷǡǯ¾ĥ¢bą¨ËWĪ£QĭœuÕA}fÝżƃÈ¾˪mÜeÂýņËĕ ÿdħZ¡Ū}~ʕÖėe¹_ǓêûB·]]R{vķäGjƾâĢ~¶pXIzÖq¨NȒźȋǺçܠ҅ǘɃĵȋÊėȺĠĪǕɖ|ƘIªǈìøPzĜ¤Gjzz¦°Ď¬Ä۶ʈ{Č°~VŜĚHŊvɾŮCĺˍǎE͘ņ¼áÞìºĈņîdäj¢ĬƐìâ`ԂŚĄŢIƖtȈǦbøäʦŤҨȈЈĮØĆÎhʴdfVXbŊMҜ˰ŜůƜͪĲα޼ń԰ԡƚǀļ൐˾Ɇǁ˒¸Ɍÿøʤʟƞ׸೺ࠤǹմDĴšטȞƠǆŋ֊ȊЂڦŦɒѪўĀQČȸªE¸ƋŇĳô÷ǒ±yãŷˤéĔËĔg¦ÇRćĚ¥ƀËâYŊñδvèqǼƫ®Eâj¢ÎQÚōôĺsdkĂųÒȁŬƹÔąìeÐ}ÑÚœ×Бÿ¤ÓJÍ˷ѕǺˡƢl҆ş۶ÉžDǬrؔù৒ӿ՚Õqȧǚïˬ֫ѴұېÎቚȅѠĠĒMζ­ӖÅͺYê]æo˂ʅƸ·ΘÅмï՜ɉʊʶ¤ǌ@ǿ̦]ĸ£ÌjÆ¢æØİҮȈݸʜ୶ƆѠոlĔdߨˌԜӊܸ˶®ŔѽҬиגŔdäeʤIôĈÿĠ˾ÕɄeǨ{âaÆdȌŐŸ ¨z˶ȚŠǀƮ|ƲȲXѦÌѢʀ´W¦_̌͸ʞĊЌup|AĎ\\\\`ĞDǎÏˤŰðXŸĄ[ƨWÌTØSĸÌĨsǢąƜqŤZŬmðDlĶ~ƼƽʖՉшÁřĵÍÄĻĸÍؗHΕ˯Å^ǹŞı~§bşbĝIśsœJ½`ïCſËåßăqɿǀûɌĪ²ŬÀVĈIĠ|ĺܦਸ৆ʻӠ˦ڸȈðǲƵńݺ৐ֶжÿЄӳÈvżݢкᔺɘৢ΋ɚÎӘƉ׊ֱӪ੗͐ͣ~̛Ɇş΁Ϙȝע̤ȍθ^הй̜AɑɄɕÑ˓Ȕʹ౞LȚȜξƄ˘Qۚɶ̺ĵċȗƾʵӭ΍ʱࢯΧգȿġÓ̩ƫč࣫ʠͽ˽Ϸŝɰ٭D׋ǁЏէƥĒǇ\"],[\"@@ƅǦüĻ\"],[\"@@ɂzDȵ˥ÎàŮ\"],[],[\"@@těřlĦð\"],[\"@@Ɨ׏ԛژƇδºцބ୊ҬȰ˰ʧѿຩ͝ҩ\"]],\"encodeOffsets\":[[[113551,20472]],[[113035,21600]],[[115348,22160]],[[115498,22121]],[[121020,25085]],[[122697,26068]],[[124162,28761]],[[125232,30683]],[[124788,32249]],[[133660,43557]],[[116734,22744]],[[116752,23053]],[],[[121250,25111]],[[123913,23164]]]},\"properties\":{\"name\":\"China\",\"childNum\":15}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ҒӁĆĊTĸÙÖCŶŖ͠ŖǬNʖÈZÀÄą®°òŷt¸×¨C¤lpT£gåʱ´iË¤ſĀӻÕoOwfY¯qķ÷ƛБɣףȔࢍǤģƗ»ɻ̑¦ŶŭȉٯưЧ×ӒKܥû͏Ôí¹ʲi܏ĳ്և{ȆÙƼՒ¯ʔƳÈÿXÑĴmÖîÿ¨ʱʧƠɜΰëЮkǆàWĶvøƞUĚĮǰúýXÛZżN¢ʄnŊUîû@oɤșŦZǌľÂkánȐȭäcВƐǄˢɞɶñ̲ǓÈǘɐNpmĶLÆT´nnƞăȜƂºˋC}£ùFcĺ¹èMńĦX¢ªŴŚNƤŁĶL\"],\"encodeOffsets\":[[-5388,10568]]},\"properties\":{\"name\":\"Côte d'Ivoire\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ɯˉϽީʵȭƼƣ­ӭƘ֫˪ˉÄϩ޺ޗĶ՛ĽӿˉȨ۵Ĉ˗ƾઇÕĂඉǯEgōț@ʱ@ڻ@ġ|KIlsNlȢńҐɵϬĀðĽWïƾƸ°ċĦ¤úǣT·ťΥƚçϴɏİIŽĭ²ƨЌʂܸатʒ˼p®hƐĲĖÚrdjkô]ĶBǊƼ̊ʉàáÖȫ gìZƒêŲƎzǊàÀǢƒāžÖǨȴǼ׌ƞˀƮ|ÎŊŴrÌÎΖ®ļɨŚÒЈŨŔĸθƐɦǊɢöÒÜðHºh̜ȌºքčŮȷ¸óøķՎƲAǼ±͖ѧȠց©ؙĒϷŦʕ͈̋உwɡʍ̘Чڄիθ٧Íɛ\"],\"encodeOffsets\":[[15852,7705]]},\"properties\":{\"name\":\"Cameroon\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@͔ϵͼʛȢuʦƴмħȴȂǪsѤԕ˂ūàǯƞ@æőÌçŷ̯üǍį͡ϔƻÜȍહ਍Qˏǻͳşణ͉˧ÅЋɉǣdȡĶíǮ˩YٽǈԭBß˵CÁfëǚѡªŵZÓU«ėǃU¹vŭš¦ãĴȇöÙƎģŨĥĚĹĎƓĀɍ̂؝༓ʕyʥϿσǠϡܷɗࡡČȵӦҋΠÍnǆʌÔiઁȃǄ̑űƿ|ʅόƭöśˌ۵ʔΑծ˭͕ڡÚ֩ɢ»ΊމǣWʌͱɒÅģÉ̳͙ĳɗPɇrÙ}ýÕßJ«ÔmʖĔŜğմ͓Ӓþٴċବ¯pҽjɻFʫH¥m¾B¾ÀƾQ^ĝJʕǉ{ĹU̇ƁŕGǉĝƵC©{ɓǓǕ@͍ÆүƟ̫dÁQԁۼÅ˖ęƊÏżϢƇǖėÈĭዱRՍMƋPؙŧȩȰɬծ¨ÒnfȞȮĲĠ``^¤CɺȝȶĮ¶ɢȊ}ΖƼüųëŕȷʠ¥ંबȒآCܒ˚˴˶Ԫܼ֪ˎᓀΚފĴҮ_ܲЌҜδȤʲΜɓ˨̯༪˝ϊӶҬ»ݸˤضuϮ̂ઠȿɀŚ˦ù\"],\"encodeOffsets\":[[28061,5232]]},\"properties\":{\"name\":\"Dem. Rep. Congo\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĳҭΙމˍᒿܻ֩˵ԩ˙˳Dܑȑءઁफʟ¦ȸìŖûŴΕƻȉ~µɡȵĭɹȞ£D]q`ÝÊ÷Ĝ`̅ƃНΕȫςխղĖȎɨƞƴƋǌb°̆ǿŢǎȇŬÊдϬÏ͐ê]ʹƄĒǠėǖ͋ЊçɦɎź˝ĚsǦŘŘȆ˞øૈԩ̶øҶ̾ɪĚɸȽЀˣ¢ՓƛҒĸ̼ઈ˘ƽ۶ćˊȧľԀʈҾŤ֤݌ƴ֚ƿ˂ļŖŧ\"],\"encodeOffsets\":[[19057,3562]]},\"properties\":{\"name\":\"Congo\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@՛ǏʑЁχ̣Ư˿ŗם̟ԃʶÆɘųŌЙɴ˹çٙɞŹǜ˳݆͢ĔԜŗמۣߤԨŐ̈́ğPȿ̍և}ٙǌե̎ϕҡԹȬ@΄͹ˬকǥѦɿΎ̱҇ɏȨ¿šäĿඟWGձҒQƆ͡ˍÒӧŵa׽ξ̵ȠֻɧఇɹಃeǛƼÕƘµ~ͩ՜़Ëfã¥°ɿŒÓZµÂǫľ­X·gñgéÉǙkƋĢǋÒ¥[Å½Ã»©ȟ×؇N£°Ƒ¾ϔʥŚƗώǕªÃÒ¹xÉÎŃÅx§Þéɪ¡À£¢½¼ÙÁs®i˱Ųū³Яǒг̌ȉǟݵƄÑȰȡǜГŌ֭ЦƓƘȞȎǺÙ]ӪƦń̌tɆǨئ৔ƽi]ƒãħ§ʬĥƘƼÈ˘ñԐƉǴʈȲȁͮĎͰҁպŜЂȊŏ˾΀ʁѶĔƈѮӋÓįŚ^͊ůɚզΒɀ͚̈́îɼŢЎƛ¿ɚϾԐоќħƻőĬćɐҲۤsࢎԀŞʦΞȚϞíŀʏƵƹ\"],\"encodeOffsets\":[[-73031,12147]]},\"properties\":{\"name\":\"Colombia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ð½ǏtĆƂ»\"],[\"@@|ɳʇƼɌø\"],[\"@@ȧŲÔ̈́ĀÔЯ\"]],\"encodeOffsets\":[[[44840,-12602]],[[45544,-12371]],[[44509,-12186]]]},\"properties\":{\"name\":\"Comoros\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŏk±ŪƖlƍ\"],[\"@@yƾú±¿ŋ\"],[\"@@»ûǛ̰ʰˏ\"],[\"@@ȌÉcŁȽDǈ\"],[\"@@°§ǭxãęÙłʼH\"],[\"@@ý¢ŠƵ\"],[\"@@ǥ^Ƃø¤ĕ\"],[\"@@śU{žʬî°åǃů\"]],\"encodeOffsets\":[[[-24891,15213]],[[-23738,15501]],[[-24006,15369]],[[-23467,16627]],[[-24665,17022]],[[-23437,17059]],[[-25484,17222]],[[-25773,17354]]]},\"properties\":{\"name\":\"Cape Verde\",\"childNum\":8}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʜԑӌթǸýIecgµƁði_¹{}W]i@͛¸GĊÅZǃƧ¾ėVũaƓĭŰɡȳʂȢʵĲƮʧɃǅƚĶǄĻ̄܁Θő˦ѩ˾Aœ̎ʉǅǿȧǬʹüȍ͞ƶϞȫźƎƐƈń֦ȳɴĎ׸ʻǦ¨ÒŎ\"],\"encodeOffsets\":[[-85649,11180]]},\"properties\":{\"name\":\"Costa Rica\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ͭŋȋŸǰAğǘúŶɸ«Ÿˋ\"],[\"@@ȽŘʈđ\"],[\"@@ƋØĆĶƝ\"],[\"@@ӚKİďж¢ʈƅҜ³ҚЕӸࢤӍŞQïĎðc̔ȑȅĨŇźĘȚɑ२ȁńĭŅɽۼÁ̴ɡ̄û\\\\Ľ߳ɡĚśīܱĆಳœԤҬŁȤݗĲ̽ʖȥҎՉMܻʌɉɂҥ¥űǎċƃӃĔȓƤ̰ĠŅƨݱbաϹѫ«ŉȑЅƕBż͕ÕҼǾʮˆʎڎʨஜǐ\"]],\"encodeOffsets\":[[[-84543,22090]],[[-79533,22479]],[[-79748,22659]],[[-83801,23719]]]},\"properties\":{\"name\":\"Cuba\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȳèƍȨ΂ˏ\"],\"encodeOffsets\":[[-70401,12350]]},\"properties\":{\"name\":\"Curaçao\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɚʡuÐ\"],[\"@@çSƎ°å\"]],\"encodeOffsets\":[[[-83322,19814]],[[-81739,20186]]]},\"properties\":{\"name\":\"Cayman Is.\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ѹÃýƌϵÙǧìƖRÀǮ֔ߖʶԩ̳Àȑ\"],\"encodeOffsets\":[[34821,35907]]},\"properties\":{\"name\":\"N. Cyprus\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ǩë϶ÚþƋѺÄÛ̍eׇͳҹƆōȌ_ňΊö\"],\"encodeOffsets\":[[33498,36016]]},\"properties\":{\"name\":\"Cyprus\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@òFòrVņ࡜ͷɲŚçǫųήˑ̎Ŕğǆ҈ơʌ¬ÙǅȺŧźÂ҆ſɪ̱֟ɇÙǉ˝ƩԻƵȯ΅ǔУࠫȲ́ͯաFȟƒ¤í¼řêęGnП̒ȡìʓ˚ĺŚ΍θ@m´ÁzrȴǀϼĈƒhী͜£ŜȎ^zGS·oÆcFrXb\"],\"encodeOffsets\":[[15165,52080]]},\"properties\":{\"name\":\"Czech Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɭćȼ̶ǩ\"],[\"@@CďѣŬ̸˒řªƩ\"],[\"@@ʂŵŹǝܨſʀÂIǕǓęĚáМ§װȊϸʤϠ³ΚɧɶXŢʥͦĻƣĮɭCÉCcýÙáŻÿU¯ŀăɖŗĘį¥ć_ÑhÄyÔƗųȽŘǣyé^iƲ»~yx˷ñēŗIYWaqEÅdpT¸yH]ȍ¤śি͛ƑgϻćȳƿyqÂ±n@SQ@ǤōǾɑĹřʔ˙ȢëР̑mĚHŚéî»£WgIŁYʣK]SYM¥Ɲñ¿ě{ϣǏǌǻ±ƗƀÉKÙaÑc}Cõ~ÏulCv`bsí~Џ¤YQN¿cw॥ȏ½JñÔo~DhŋHépƧKTő©ƻñdîœ|A~Itur¿ō ùpȋ©ߛɄŗTsUĎN^MH[W[åWqa۳GBӄѦۈֹƮ׷R͡ʖŤ̄ʁİÇ¸y¼NðȌ˦̇ʤ°żǅŀɮİÌʬȿ̒ܐƒÛĨʾʦʋìź˔ƒՎĻǐǰǠ؊TČȉŘmôƊƌǱļИӲeӠʩЅʰ͡Ě[ʞɿþ˜Ĩɿξ࣎ß\"],[\"@@ŦɦÓŽɀOˑė\"]],\"encodeOffsets\":[[[14539,55214]],[[14039,55688]],[[9974,56142]],[[8508,56102]]]},\"properties\":{\"name\":\"Germany\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˕п̩æٓčKצӰپ~zv|OȌŏÂ¸Ŭ®dAĺĤȤ˻xɳثѿıX¾ÙϬüǠõ\"],\"encodeOffsets\":[[44284,11776]]},\"properties\":{\"name\":\"Djibouti\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÿké΀ƴęIɹ\"],\"encodeOffsets\":[[-62752,15615]]},\"properties\":{\"name\":\"Dominica\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@͆ívŅʷ§ΟŨpƘʬ£\"],[\"@@α§žŲɴĉ\"],[\"@@ɉhsƎɾƵ\"],[\"@@ĥĎˢʰǻͽ\"],[\"@@͹äæǎ̰ŵĻ\"],[\"@@ŠЏ˽íϡĬŅ̐چĂ\"],[\"@@ĩ¢ľÈë\"],[\"@@̓ˋǖƯ˕ĉ̻ǁǩΐ̯dʵѢ̀ʰǢǊɑ ɪ̒Ŵ̠¯Sɻ\"],[\"@@ƭTʨ¼ĹÏ\"],[\"@@࣍à¯ўНƴࡎѐģǼȪƮ¸Ŋû¶ʼɗHȃʓʭ»ƹǀˮɒۄÂѼ΀ծƀ˝भզƫơǛι{ŕ̇ɻkĶçεɣäȑǽȏɺÑPţ\"]],\"encodeOffsets\":[[[11635,56210]],[[12851,56285]],[[10303,56204]],[[10992,56065]],[[15450,56343]],[[10901,56945]],[[12970,56931]],[[12871,57124]],[[11318,58627]],[[9974,56142]]]},\"properties\":{\"name\":\"Denmark\",\"childNum\":10,\"cp\":[10.2768332,56.1773879]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ċøǜǜk~ĤŊ״ÆٖɳȦǼ̹юw̻Åcõ߂ǳ̄ʗ̇ͫȻǊ˷зH׫ȏƑĴ͏ÁΉՙǉŜŗɠHƐxÊsÐġÚÉĄ»ð\\\\XĶHļĴbÐM¬ÕŌƈǬ\"],\"encodeOffsets\":[[-73366,19657]]},\"properties\":{\"name\":\"Dominican Rep.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ţŵ׳CɃēăçĳėȵؙչj̥˾ҝȢįȄїװЃĮϛÂȻʜ१ǫĩж޿ĢୡƗϣŖי͡ʟɡҬ؟ɊحŠėʒÆےȥϰڝ␣ᕧ൩୧ഝ˯ܹſȣĮŖʶĿτ௏Ѻ×ƪϏɚiʆ᣽ၮ᜿༸ἡኒ@̸@Ȳpیত֤¸ʈǎʊcĎeĶ]TÞæƊЎVҲŀžĒĨĜǲʤǄòɀÖǦÖƤĢѮǈǧǔG˄ÎƬÊTĄYƒd΢Ŋ|´ƘÊ೶^ĦʺªźÝ´ĝÈ±zćæ»þǒŇȶĭஶ˯Ȃ¹¸yØҞâ਺֮͆{̢ˤֆʀഺƂ͊ƸڲĤࠖ@ҌȻৈπφƓʾ¤ľצȣ֔ærēͥ˃\"],\"encodeOffsets\":[[8405,37396]]},\"properties\":{\"name\":\"Algeria\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@šm¤ȰŦîƠ³ȇȻ\"],[\"@@āà¬ĳ\"],[\"@@ǅn˒ǖŋȃ\"],[\"@@ǩĄVĂɚĆÜƣšħ\"],[\"@@ƹbƆƾ|ǣ\"],[\"@@ʙÂòĢǨƣ\"],[\"@@ЈٷęǁȍáʍpÛŖ̀ʪȽɬ¹ɞƗtȢļøč\"],[\"@@çüÈSě\"],[\"@@˻_KÒÐ£ÈƇƒƳṬĉ]vw`YųӍѥԏӷί঳Ι͉ЫĕÚʫ܏ˁƧđ¥e³X¡I±_i½kġåB¿|Ëô³ØĄ]Ō½»ÕYïQ¡~ı²čÀÙ·]ăė÷D¯S¸úńčFIa¦jº¬Œu´rf¥ˢåǂ̤ȘȞӢĥіéЗĕQpǠɹ̑խπƠˬţܚ̊ȘĊɚƢǗɄμѲՈূΠȾ֮ХДŋȢǛÒȯݶƃȊǠд̋аǑ\"]],\"encodeOffsets\":[[[-82054,-3044]],[[-92594,-1372]],[[-91564,-932]],[[-92502,-790]],[[-93620,-471]],[[-92747,-342]],[[-93462,26]],[[-80803,1283]],[[-77091,-109]]]},\"properties\":{\"name\":\"Ecuador\",\"childNum\":9}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@քนƕǥ˱੉ƯɃϭʄљѪֳ஀ǥ˿Ҏࣅղ֕DʓʦΟĢ҉ਠᆣӸҋȱcšǌ۩҂ˉբՍ⮿AªŸï°ŝǙƗOᢱBᢳ@@᳾@ᴀɵࡦɐВĝրʢːȚšіĜଖȱʖƑࠎƋҴȁܞͬʖƢǘѺĠ̡ųςæŠψŧ̬êȺǙȳŢķǅ˦ǗưĜÅþ͘ȋࣂ¾ҀǊ¢ĩ\"],\"encodeOffsets\":[[35068,31958]]},\"properties\":{\"name\":\"Egypt\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɐĭΣwêļgŋÌbŨƺǋ\"],[\"@@ąħ´ä\"],[\"@@ĳňԉˎ׃Ę˫µ¿Ē½ ¥@yƷĕʵµÕHǭȆǿò·Ö¹ÁťĥɁ¹œßƣqIZȿʠțƳǳŏOŗ£eCʎkǊoǠkǊŞȖ̈޺sˠúƨEÈhż\\\\ªDĞgȮj ¶ưȢŔЄł\\\\nj¶v¤ĚǀƴΦޛɞএФڟà̄˺ϥࠆͥКՙӲͩż̿ľRɰ̙Ƣ³~üêÙĭģĹcB«·ūÁȋŐ{Pu}yõĔÃüùĠƵĤûŦāƄͷˆΣО\"]],\"encodeOffsets\":[[[41105,16073]],[[41039,16469]],[[41922,14319]]]},\"properties\":{\"name\":\"Eritrea\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ąƏƧĬɮ¤\"],[\"@@˯ɯwĉǰłƆʂM\"],[\"@@ŝĄÈðżýåõ\"],[\"@@ëȓȩŧȻ˨ڂȤǯǏ\"],[\"@@ŕħƅɔĬȔЬŬÑПɥë\"],[\"@@ƓɞÒðǞĵěȗ\"],[\"@@ťŨ̢Ȋ]ȗȧā\"],[\"@@ǁA~ĆƄă\"],[\"@@ȅ]ŀƪǺºçƭĵ\"],[\"@@ˈý͛ͫɭìċƂǛÃŉĀڐͰ[Ư\"],[\"@@ΩĮ[Ė̼}Êǅ\"],[\"@@͒Ɨ¥ƿƈ¤׶ʩ৾ğÆžؚȽ[¡ģîJƠ¾żÌĖÕমàХȱƩޟЕࢥȍˋȩƪčʛěޡँĺϧ΀ʭ؇ωʙҟĀśԙÏˁƣЃԡ቉·ʵǱйéǃʍɝğΑƌ˿ϘƖɶƭçϽϔҕċҤФϮůMȥɶ̄ԊҍԘΘjŤĮâȊŗŪȈƨı֔׺ѮˣŠÛɨѹɍŭؽkħ˚ѕǑġƐǒƚĿXðłçȔȃĘǢʵƮ´ǔްɞOŠɄĬтϊƻ৸ú૖ȕޘĔҺŭƜêҎŃҘä\"]],\"encodeOffsets\":[[[-18317,28478]],[[-15770,28823]],[[-17597,28695]],[[-16726,29062]],[[-14537,28846]],[[-18262,29178]],[[-14045,29606]],[[1633,39601]],[[1480,39853]],[[3221,40746]],[[4397,40799]],[[-1837,44450]]]},\"properties\":{\"name\":\"Spain\",\"childNum\":12,\"cp\":[-2.9366964,40.3438963]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@צƝӿȁ̝[̿ʉǈȊʱĜgȢيľ\"],[\"@@ȟĠȊUVĉ\"],[\"@@͋ŗōƤ̕äӾŦɖą\\\\Ə\"],[\"@@Ŝğ׻ӱÌӇɶ̍ȣÑţŏ¡ś͕æηßȟÐ՛ˎ͗öƋ®շŽăJǦОΏó̅ĂɑʢƠňȽŐÀɴӶĄʠƲࣂ¤ÆĲ௺ǁࢌ\"]],\"encodeOffsets\":[[[23161,60029]],[[23904,59956]],[[23474,60239]],[[28685,60912]]]},\"properties\":{\"name\":\"Estonia\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÖGʶ¶ƸĖz¦@¾Àđˬ¶ׄėԊˍĴŇΤН͸˅ĂƃüťƶģúğÄûöēӯٽLץٔĎ̪åɟͱƺͭ˸˓ʪст̵ᠴ࡙ࡀ@ᢋᣭߝͽăϩǯɥˏ۩ƻĝę­ūBɋ_ğcŵCǙĨɋǺޡΟ©ąŏƩƍķݗŦſJȏ\\\\ś~޳ԘȽƂݑ´ɑ˸MŤnžl¨±ǀΙj½ @Hʅ̬ɯڬիӆƉʄݻ͠ʂҌ֢NĴĐJޔȞؖϾȒȆǘőƈĲƲߞҸڴϤŒͰాfDŘ¤ŐPǴȜƴɀʟYrJÞƤ¼ŔĤɂÄŦº¸ÕȀñǮȅ\"],\"encodeOffsets\":[[39354,14775]]},\"properties\":{\"name\":\"Ethiopia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȬÉ¯řʃĸĈì\"],[\"@@ų¥ÙŠȎù\"],[\"@@ǖƋƛłŒ\"],[\"@@ɫªͦZĹÃ\"],[\"@@ҩı̞Áʩ̏ǶʣֆŅզͥޟٵࢌও͗ďĝ́ȀēȇƩЀǟ˓ЈȱSƭљʉৄѵ̒˕̅ͻహ޹ལࡓਖ਼ĽǲǉǙΟ¦äŏɷ×ďÈ৯ʿࠛωƛƬǦʋǀƋŷʋyĺ̐९ǺƜ࠶̋ͰĥـюʦėƒٲĘǴ˴ࣈؘٖͤ߬¸ºԴ֡ǈǂЇ­ϣϔʎҸ̇ˌþʚɻƺдڇΎܙźିѠόJ@ƢѸºۊҭގÑѾƂࣴǳڴͬ˘מϠȊԐQԶƄ୨ͥǈǕХʝĶŽ\"]],\"encodeOffsets\":[[[22708,61820]],[[21966,61983]],[[21727,64760]],[[25445,66551]],[[29662,70679]]]},\"properties\":{\"name\":\"Finland\",\"childNum\":5}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ѻŭ͂ǀź\"],[\"@@ăÒ¬òƃ\"],[\"@@ʾɽÜέױƷՑƾµǶȬ˘˂Ŷϲb\"],[\"@@đAĒƮ@ƫ\"],[\"@@s@²@ê@ŞĈĩȥ\"],[\"@@ÏĊĞyÑ\"],[\"@@λϿHġ̦ȔCȍё½ǻĀǏƿʧÛǫǂðƔȆSغ͎ϔĆ@_\"]],\"encodeOffsets\":[[[182772,-19429]],[[183654,-18536]],[[182559,-17788]],[[184320,-17370]],[[-184294,-17331]],[[-184247,-16898]],[[184320,-16556]]]},\"properties\":{\"name\":\"Fiji\",\"childNum\":7}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŤQÑŷǓĜł®\"],[\"@@ݲĒĴÉչҕ˙cęŹ˩¡ɳŌ؈ʈ˿º˲Ö˕ʀʂĕ\"],[\"@@ƍĬǤwó\"],[\"@@Τ¯éƅȦùZƂʄƘőŷÅƚ«ݡʥ~ƍҗæņŽɯm¯ĥɅƤàǬјȬǌȸȆ\"]],\"encodeOffsets\":[[[-62483,-53028]],[[-61733,-52697]],[[-61554,-52629]],[[-60262,-52500]]]},\"properties\":{\"name\":\"Falkland Is.\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ιÆŉǺàż̎EƬșǛ\"],[\"@@ġænȲŌċȋ\"],[\"@@֥݇ɋչˏˉܩŦ̥ȟʫòç¢jqZXRNB¦ÖìŪɄ¼ĖtƨŨ`ŀƤ®ĄsƲˇΦŇڂҼ޶ࡪ˿ԞНƝĖüƌũ²̫ƦʄƦӗ\"],[\"@@ȥw¬ŔǝȸʊýĎɕ\"],[\"@@ãJ¼Ĥhĭ\"],[\"@@ƛ°Xʘǐëɛ\"],[\"@@ǍC¨ɺʤȿŽu\"],[\"@@Ð֧̩س͇ǠäĦɟȘâƐœɚȾɀмĘ¦ʮİǱ\"],[\"@@ñƥȞǮū\"],[\"@@Þ_zY~mªQÀR~¾\\\\Ǝ͢ʕ׸QֺƭѥۇAӃɭƅǧ´ƗÉ¹Č¯@akiwŋēŏėkmƗ±cƣʹǩWĳkƗŁÅBÁQäJĨŞò¾ĜŲNưk\\\\ȿŀĩ´¦·dȗƹ̘̟ÉšϋƟ̜ȫýЯΚǓˌvŧͭޡӋϡŁ׫ž̅Ǽ̇ÑکǄյ̵ǧɷƆПভßĕÖËŻHĎšÇPÕؙȾÅŽ৽Ġ׵ʪƇ£¦ǀ͑ƘʺƀȪ࠸ƚŊÛØýćƒܮ҂ҁȯϾͽȸƐvĩӐ՟ǢɭʜȒƫŀƚĤʈµțĂѹBÜƆ˽cĤ౱ǔ̯Ǽ̌ŌȹĴˮ\\\\БºôȚƚદȆҐʯȸĤϊÅĈĪѼǃŸcͮɭКԈGĶʕࠌûӤŸʋº¶ǎࢸʞ̆ɈäՐܒǲȠ̅̈|ƔȻ˔¯ĀƝТ¹sɳͬUɰǊ¤̩՞ɷʂx\"]],\"encodeOffsets\":[[[57137,-21851]],[[46265,-13288]],[[-52892,4159]],[[-62286,14843]],[[-62700,16272]],[[-63067,16392]],[[-62799,16620]],[[9708,43833]],[[-1206,47006]],[[5929,50728]]]},\"properties\":{\"name\":\"France\",\"childNum\":10,\"cp\":[2.8719426,46.8222422]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÐýəzǊÄ\"],[\"@@qœƹvĬƗϓˬҔµ\"],[\"@@ś«SŴŰć\"]],\"encodeOffsets\":[[[-7359,63631]],[[-6790,63722]],[[-6559,63753]]]},\"properties\":{\"name\":\"Faeroe Is.\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ōY£ŦƈLjŗ\"],[\"@@ÛåĴƤý\"]],\"encodeOffsets\":[[[162115,6978]],[[141459,9729]]]},\"properties\":{\"name\":\"Micronesia\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ķ̻ґՔƜˤ¡ȾϿęɷ̽ɩ÷ҵԪ̵÷ેȅ˝ŗǥŗętŹ˞ɥɍЉèǕ͌ǟĘƃđ^ͳ͏éϫÐÉгȈūǍȀš¯̅ǋaƳƌɧƝĕȍڃݺԿҞ˸éοƸ˙϶ƸPǽÐȓѠʂ˕ƶÞǥ¨ǆţµśì̥רȴć̌˴¸׎ĨƷˠīǤŴϣĐȅɌƞĦĺówϤ^zzJ²Iz£`wĒமEѼG՜hŎǰFඊÖā\"],\"encodeOffsets\":[[13613,2214]]},\"properties\":{\"name\":\"Gabon\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƻďʽàɀĜȺë\"],[\"@@Ů_˗ƟǍɄɆĲă\"],[\"@@γ{̛̈ˉɯʁVїɪ̪ƲſĔ̢Î˨˘زŰτăˌ˝ƉƩʞnĦƍǛ¤Äɵ΋ȅǗ\"],[\"@@ȏ\\\\ȔǴɕ\"],[\"@@ÖȡȿófƔǣÙ|Ģˬĺ\"],[\"@@ďà̆Ȏȵʭ\"],[\"@@҇§ƤǔŭĸƸ˼Žaū\"],[\"@@ƉɠŦSdɋ\"],[\"@@TǇϴ½ɵǧïƀʍBρȪϤȘƊƕ\"],[\"@@pű˩Ìʺæ\"],[\"@@̗ɩňÓҵɫčÄȐĠȓɒ̠N§ĦҐǜś\"],[\"@@đǍٷ̣ěƮɷȭؚŌૢKʘȓڽދ׽ǕΦǰŧֿȍΩÊجťϘÚϞĽЮ˧Τܯ८ӯķă˒΍͕ņ͝Y̮ӄ̙îƧʻɇȠąɼƄиOԐǥøʅŽ̝̋ůƗνÕŜƃϻęࠬđaƱοɋ։ų࣭UՋŎèÛƵÕћmIĹߵĨͽëɳͣѝź҃đ͟ɃчX஺ड़ࢪ`נҊܡ̍ԇǜ˿mŦúʛæџĩɡĪ]ǬߺˠȦɜķ̾ӧğΒ˴ۺǒˤãƖˆį˅ǠȀԺˍMͻ˶ĘʲάưћI΁ƕܡÆÿſķÒŝȌиѠǏ̺ʌÆɓĦĜΫɭŦʾ˛ǝũԙƥ¯ȐϾėɆΠנϷȏЗƦ͸Ŭŋ¦ʦˤțŪǴƘƍĺŘǴϜ@ɍǂÚƚˤpQʰӬ­তŘǦ]³ĵ\"],[\"@@ɜĻҍÄlƆɆč\"],[\"@@ɌýȹӇRɴ̻ňʐ¦ǓƌǪĬ²Ó\"]],\"encodeOffsets\":[[[-1091,51907]],[[-4297,54602]],[[-6367,55387]],[[-5227,56780]],[[-6275,57273]],[[-6113,57155]],[[-5916,57697]],[[-7423,58487]],[[-6292,58886]],[[-7378,59068]],[[-6347,59765]],[[-3184,59920]],[[-3130,60447]],[[-1339,61991]]]},\"properties\":{\"name\":\"United Kingdom\",\"childNum\":14,\"cp\":[-2.5830348,54.4598409]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˂Ə®³SïûÑēẂĜڱɠÁuǹŏsYƑe؝Ýէuȑ«Wz~nmhûųĪítÒ^ÓNÙMaOoWčĳғ²ďÁRß~ĿvÇhǈǂ¾ɞɱׄշͺ̽êПɰÆ¼ÌӂgʚīŢɲĒµĶ³র¥ȚßRö»ЀŧÄƈ½`eEsUlmÆmŎI zĊlȐòƨɠōâŊjTÔuňöeƶũȂLŤloýȫH}ӘǷǾĉȷǃĸǍ\"],\"encodeOffsets\":[[47417,42504]]},\"properties\":{\"name\":\"Georgia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@àāă̇ϼ͍ĭիàğşʘÃҡĭû˂ͻƽڷŔǉĝхǰͯϚ̧ȥɻׅ«ቕ࠵थ˜ʢÄ¼ɼƘǣĤȓࢎɤפƜВĸø°rZePxÖpÿӼ£ƀÌ³jʲTŊU¬¹ľ]ôU־Ļƈî΀ຌXΒéˠȪȘ§\"],\"encodeOffsets\":[[-70,11383]]},\"properties\":{\"name\":\"Ghana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ħǥǔƷ̺ǆȊʳκ˂ѪƵͬȎǬ̐¿ȎЕGȽ΢ʳɣ̛ˢeÐщɔƏbƅƏǃdБȮãmȏânĽÁYǋȚťpɣŅüŉVʃmO¡WŻÜþWùĭǯVě÷ƛuǕ³ơŊȗΧȑ̃ǘĀʎůդɛǈʁěéøï§GÛV]đĳ½ŇLs\\\\Æƪʌī̸ģng\\\\Ex¾ŜJzÙĄʏͶőŜq¬Ëf՗GșįʉnŉǋǕ˥ǝġĳǋǷiť̸ɉĬBͤŉȍɈ͍ĜƵʪbǼëßĉȰģóƑÛPĘª°äƒˬºÜvàFŸŀÖÀ~ŤOƚZȄÒDȊM¦ßŏľ¾Ìń`òǺ¹ĬHæլlťŊ҂ǉࡔÄ\"],\"encodeOffsets\":[[-11662,12703]]},\"properties\":{\"name\":\"Guinea\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@½ɸžŒɌǣࠤǖשiǻĕǭȴࢬAèŠˎîמʷήŴŕΛƟݻːŕƇѷÑiƗۃEĩ÷\"],\"encodeOffsets\":[[-17165,13378]]},\"properties\":{\"name\":\"Gambia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ËovŒġ\"],[\"@@Ĺ°Ɯê¡ř\"],[\"@@ķX¸ĸÀŏ\"],[\"@@©ĻĩİƔL\"],[\"@@Ń_½ËǰƙN¥CȉȃÑʽI¿}ĿÕŷßEu·ÛƓ˫­á«§ÒŌƗģLŀƩ¾ƮĽ^΀ǀƁöƵÓõĠĴ͜łܧƵlŶǽiǃŒêƼǉɱŴ°TŖaĖhƦÚĈ^ʰgɞ¬͈Ǆ܆GʆA˰AGåºīñǹ\"]],\"encodeOffsets\":[[[-16277,11349]],[[-16501,11325]],[[-16283,11741]],[[-16370,12168]],[[-14090,12557]]]},\"properties\":{\"name\":\"Guinea-Bissau\",\"childNum\":5}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Fѻ஭đ_xy¤±JyIy]Pnõ¼ĽrΞڎwŠlȤtMT¯{Ġڼ@ʲ@Ȝ@H՛\"],[\"@@Ƥ@ŋȯ͹ȓUƼɬʶ\"]],\"encodeOffsets\":[[[11605,1566]],[[8946,3849]]]},\"properties\":{\"name\":\"Eq. Guinea\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@˄ºµċȶŕୂW¾ȍѺǊŻʝଫíûžȵÒܷĆmɸĒiÄŢĬĵ\"],[\"@@ėŐŸȈ̗\"],[\"@@ťƎĔǍ\"],[\"@@ŅzBǶѠɚŧ̳ȳŕ\"],[\"@@ĥĬØå\"],[\"@@ǅČúú«\"],[\"@@ɠƠŘ}ͷš\"],[\"@@īA˒Ĩǥĥ\"],[\"@@ċ]ŤŎŅ\"],[\"@@ơňĪã\"],[\"@@õāŢƎłjȕ\"],[\"@@ĉN¸àí\"],[\"@@÷ÐŴe»©\"],[\"@@´Ęɞˑŧ\"],[\"@@ċ¯ƇŎɔÝ\"],[\"@@É£úžoę\"],[\"@@ȘďǭÃɛâȲò\"],[\"@@ĘąƥǗǆÔØǒĽ\"],[\"@@{ÇəɦɎ³ũ\"],[\"@@ŰʿȥÓńĉ­Ǯʜ¦û\"],[\"@@ǝtČĠũȄ˄Ç˓\"],[\"@@ŏuŞɘMȡ\"],[\"@@ői¯ǈǂƝ\"],[\"@@ĠũԒƏŰέˀą©ť˗ŚƟɮ͝¬̞͍ͯÎ͚ƊƂÕ\"],[\"@@ƺɿęviď̡ĜƒİǙđȓĖ˒Ƥȶ\"],[\"@@ǋzȧʲɾNãėȚȡ\"],[\"@@åƥěðƿGŮ͊a\"],[\"@@ɑĞŪŴƫ\"],[\"@@޷ɤʽŗˇøͧȉˍpĔˡ̄ùŌƯίǰƻ{ȪǷiűʁɒȧǜ˷ؗЎtǈʗăϫآܣơ×Nƀȫ¤ŕƲŏлƛֺǥβʹʄÝ¶œIϳѥ̜ϷſϠρ˟ęνǬμँϋ̆ʏˋ̇ҬĿÁɅʹ̀ĆʴүъɼʰɊkƔŸ࡬̡˲Ɣٗʲďç̕²бùšƒwħǅV˿Ь˾lNŒͽL΋ʔġȀûĄćÌlBWÒÚOƨŰAÏĞ@zxXvr¢bǞªȊ̎ŲżÙŸRÚԤfªxŸ°ǶƲǆxʺĢlĸ¸ź̺SìÂŐH¼TĒYČB͂ÖlRp¶ˤEĐ~EɌǑȂRŞ£ĲÓ֠ÌŦÌh¦Uò·ƶllĀdĶwɖīǗʙƍBʅʗȑ\"]],\"encodeOffsets\":[[[24425,36389]],[[27829,36317]],[[23608,37059]],[[28512,36792]],[[26095,37267]],[[27096,37464]],[[27597,37609]],[[26480,37674]],[[27669,37847]],[[25886,37959]],[[26159,37855]],[[25113,38017]],[[26013,38318]],[[26655,38431]],[[25863,38503]],[[24941,38479]],[[27469,38719]],[[21390,38713]],[[25592,38666]],[[21108,39305]],[[26721,39136]],[[21184,39536]],[[25267,39741]],[[23978,39894]],[[27045,40274]],[[20560,40380]],[[26049,40943]],[[25369,41590]],[[26664,41705]]]},\"properties\":{\"name\":\"Greece\",\"childNum\":29}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@@ƢĞĝǯ\"],\"encodeOffsets\":[[-63196,12301]]},\"properties\":{\"name\":\"Grenada\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĩķ΁ĈӪƼ½Ƌ\"],[\"@@ǧàǈĦ`ǅ\"],[\"@@ǁwŗǨȴǊΒÛ˫ʝ\"],[\"@@ּřŪǝත̉ԕŮѲ¾ƓÚँƢŎȤϸOяǈϬƸࣚģӆɕ\"],[\"@@ύ`ZĈδħ\"],[\"@@~ɥۇǗ͗ČறÇΘΪ࠸ڬƘ͘Ĺ\"],[\"@@Οò̼Ɯ¤ɍ\"],[\"@@ҥȑխž৔Ô\"],[\"@@Ԟ̷੹ƻˊܘö\"],[\"@@х͚Ǡɰʦ։\"],[\"@@ۓĘࢴȟË\"],[\"@@ࢣėЏŎॾǠјušǟ\"],[\"@@བྷɞѩʸܼచǯ¬ͭ\"],[\"@@ↂʭ㇓Ƨď㞆ƨպʁ᝚ȱಇʹ㏱ƍʵę̀ī෢Ġᗆ¡ܘʧৄʾ๠´ĜϽབྷەᰦܦᆦȯ૮͈཈ຶōࡈȍෑ̳૛ā§ȕቍǃۖūҩƧ೧áଝî؃ȷ঄۩ᅡѧԅߙܰǠ଺ǉpŹ׍ľѧÑϘȿ޴ūܜÉЙဏŤॅțӏĚΣ÷ؚŋ͞ʩ୒«ԂϱcӝߩŒএʓӫĆҎŽ׬Ģľρώ˶ζ@זέçəݙAͫũ઩ĜX˒͇ɛƾʽ๤ţš̗໳ȉݕňޥ̮ѧƋۿɀؖ˹੩ɏ৩ƶؔƿࡩġǶÏኔˠަ\\\\ᄄЭɍڣ๳͈ҽҐၷ˓༂ƾƎˍϽȡϜøᗨ׉ѩ̣ÀœĲƸҠȖߝܣÁ«ͮɇΡ՗\\\\եǘӹӖ૕̊ঢ়°gÿਫ਼«Čʟࠍțද΀ćßǑࡃɇᏚfęࠟțƪŏ̚Ǯ఼Ŷ༦ǵ୐[Cûعŏ_ĝۇ±łůҳEBūݥƭĆāԗɳڇǵᙡͅԳ\\\\ϗĳͷ¸Ġő̱³ଉ͂Ǝϑ࠯̩࢕ࠅࠫͻ֭ǆȦʧؽʹŭƪśǻͭæ̅Ƿқo֨֞݅æͼĽ̛͙͉ĘˈʡခŽԄǹ̟ǕˇýۥªĲțʼ ЊλԋɏڣÜҦƫΎVÊͿȋǇɯg˷ϝϥPˣŜҒȣɱȡࢃaڐŵƙΓǲʝЍŝȨċ̵܍˝ȱ݅Ò׬ǡúˣǓŏՓĈʠƕȽǭ`¨Ā̅Eǂ̐͛ɍ١ƼXƜͤîȀǨԽȁ֓ƞăƊɬψࡇ͵ળ¡ΊȔԭNƶгṷ́ˀûʦҪǄڛåÐȠٟȬjȾъ˔ԅȇ࣡ېß̪ઌǪȏK¦Ė७ǭĻĐʮɒތȖМȷĥɎͩÀϋκȪ͹нƙŊ֕ґ˱޾ɹƤޘ͔ѸÀՋ«۟ɗǭňοHþ͐ʉÒᆖ۪ົ֯х¿Ķє͊Ƭն°ࢳυǰðʄॎ˦ႬȅҵƔǞĨڝÍӣĊଢ଼ʋӪք଺ų˖¸ȸʮࠧǕহǛ˂κĈࠚƣ֬ŰŚŒχÝƒ͜ڌٻڈڰ࿳٥Ȳ࠭Ĵѡɺ̬ĶନÍྰ͕Ǭ¬օƞÈɞѣƂيQ̛İോ¾ĬɸऺǶඛýʜȔэҲɳϘϿҕǉ´Ǘ؍ùݽƼɺҶЎȶحƩ¯ĸ˺®ʳČ֪Ĳǀʨ˭Ťǹç͉Ú͊ˌۅȚɠǜ̶͗ࡋGѲĀUǮϲĈኻۜˈźɡƶᖟЀᄓǎҩœϵČࢿƽыĞӷċѷØˊȣఉø૭˨଴ɄಷîiɈޙƗѹǨɺŬཔj۾Ƹุĉʩʹ࠹Ɓ޷àؕœহȜΞŢঁyಝ͌̄ʎےŢᖂȞԮƲᒪŖࢄ۞ԨĊᖏmǧʶᒈԬژ¶׌Ɨŀˢ௾íӾ؆ಾ|ᖖѫᕭզ◴݆̂ƿĬѕ֚҄ᅈΩ଒p୧ϸݲö⪴׉ЮӴૉ͈ᶰÇюÎ♣ĠǤي፾ȸ෬ƍߌȚᇚ˫ӽ̺ࡶń㹪Ê\"]],\"encodeOffsets\":[[[-47377,62241]],[[-37920,67105]],[[-52237,71222]],[[-53996,71624]],[[-52915,72556]],[[-26042,72624]],[[-54820,72746]],[[-56337,74539]],[[-18432,77218]],[[-19028,77868]],[[-73387,79182]],[[-18035,81742]],[[-45941,84054]],[[-30671,85571]]]},\"properties\":{\"name\":\"Greenland\",\"childNum\":14}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˶DʔŁRƾ̮ȅÿáˍɉɷǩƳãáǧºǑQ¿īÝÛĩǯsvůс˳ƕїǊ٩¼ܛҲÜΘ^tr ĥȺĖƦŀǪȄ̮ʬBϢ@ɶ@ƴ@ÚDYøTĊø@­¤ĕz·@°sÈ§ÞɟƆη͚ǶAǠCHӂໞAÑྩ\"],\"encodeOffsets\":[[-91374,16270]]},\"properties\":{\"name\":\"Guatemala\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ýƚȐƾÆǗʻ\"],\"encodeOffsets\":[[148216,13578]]},\"properties\":{\"name\":\"Guam\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĽǳĠŝķƧ͋{ǥƛÒŷǩӇ΂ש̀aĘѱвۇȆāУsËh¯ÎuRǗ§ā¯óœ¡£mǛGßğg©ŅʱÊµ_¡ġKŻơGµM΅Ʀʯ˖ŋ CĄÓ_vB̼œöĕ˞Šݮʬ̄Mx¿ÀıǢłϗƲƄҤŵƀċhÿ·ĽWǉ÷gՓפ]ôĢàäÆoƞB¾}ÈmÚ¶ĚάÖ̮Ƞ~øGg`ĵbµm»X¥²í˘ǤɸИȬĞt~Į´d¶ƻȲۈЋׄ֩~̟ǉխɒϮδÅϊϡˀŹՉ\"],\"encodeOffsets\":[[-58567,5682]]},\"properties\":{\"name\":\"Guyana\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȯǵǪӰŗŉq\"],\"encodeOffsets\":[[75477,-54412]]},\"properties\":{\"name\":\"Heard I. and McDonald Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݷȱĝxǷŲĽµ×ƛűɩѳϟgMOǓĸ³îʓɽ]țhĽWsaW¡PÁȓhÿeyÁIå[ùǹ¥_ɹYŵ̾˙ĺÈʖazÏ¤÷Jĉ_ƇĞʡŗF]¨MºO^ԝ͢ȯǈǈRÀ¹ǒâǨƴäɸǪˎɊĀâĆyɎƮ౤ąΞƞ¥ÐфĽєøΐƿʤjиΕǩĪřw`ûƘMƖƣɚDůŬɶŇâƉÄÌ¥ɍ`Ĺĉč\"],\"encodeOffsets\":[[-85642,15234]]},\"properties\":{\"name\":\"Honduras\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŘËͳøɜk\"],[\"@@Ҍá˱mǙĐ\"],[\"@@٦˱æŃ׋̪ٹǾԺı\"],[\"@@ʛ`ĎϊÓė\"],[\"@@Æ×ƕĤĐ\"],[\"@@ƧȬhɞƀщ\"],[\"@@̟ĒĶŪȪȻ\"],[\"@@ÇąȌˏ¹īͪƿ˱Ù±ɣƝ\\\\ƣǎ܋@ݧǘ͙»ȥǧɝƲȫU©΍̮ȵǔͫࠊ֭̈́σÅËֵϢёŶ΃oڥոÁì̊`Ы˦ŁВʯǼȥϝп˿ը̤­Ю®¶pŢŶpK¶áŦÿƊlƀ£ŌSĈvYOÐäÝÖ̀ňpĺQÄÍ¼IbкǮǸŸĚUöq®]ƮËļÝτ˽иǥҨƨbĎĂȬr\"]],\"encodeOffsets\":[[[18031,43796]],[[17051,44029]],[[18092,43927]],[[17189,44310]],[[15741,45030]],[[14836,45732]],[[15166,46057]],[[19360,47035]]]},\"properties\":{\"name\":\"Croatia\",\"childNum\":8}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@cÏɋêǗƎЈƧ\"],[\"@@ƇǫÖŋN«aÏĻĳĵG[W¼ïÊăĢÙtÏșíâýÊĩۇÝёČ̥½řůӽ΄úƦƆூȑΎŞ|ĎϵͬĜ̴؟ʀȂƊӦdΖſ͖¡²ll}ǛǛČ÷\"]],\"encodeOffsets\":[[[-74551,19229]],[[-73366,19657]]]},\"properties\":{\"name\":\"Haiti\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĺDˢɯƾqĜƍ݃χ݅ਇ̣ūħėȑqd£`ȑh÷_ȗpǉėًſčāaƧҧзǦσ˾ĽÞƫÌ­^ț̜ǅL̢ŦUͦȞŖɉŜժäʤԬȣ߲dÊǴ۬Ȉ˚Û͐ŰƀȚ߲tˆǵ̪Ê\"],\"encodeOffsets\":[[22663,49568]]},\"properties\":{\"name\":\"Hungary\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĹVhŘѴʌ ƧЁɑ\"],[\"@@ƭʚĠīť\"],[\"@@ùŐľƋ\"],[\"@@ٮө¢ãœƙɑóʙĂҙΨџÊŃǀ˲ŶլÈÐÕ\"],[\"@@՟՗֯ǕţÞĤǈŃĤĶ̒˞ɰȸñƌȨВȺ^ġǲV£ŭŝoĜʣ\"],[\"@@Ň°ä¤č\"],[\"@@õĺŜŤwƧÍ\"],[\"@@áJ¾ʴĢ÷ýȅ\"],[\"@@ʗǊƈĴeï\"],[\"@@ŃǧÔÅ̅u͏ŀȂ_ʶ˺Ȝˊōßɷ\"],[\"@@ŝǝǿêʾȶ Ł\"],[\"@@̹ʙ˕ȸǪí͔úŲé\"],[\"@@˧âȞŖĊǷ\"],[\"@@ÅƺƤĝȁ\"],[\"@@Ќæŭفõ¦ȜŪ\"],[\"@@ʞÑăíǟÆFú\"],[\"@@्ʋȣìïďʗeСŐ՟±ďƈÈɺآƮۮ˱Ѭĺ̚ơѸ˘ÎèƉƄäøȇȉʃ\"],[\"@@ñȶɒƀ˃ǁ\"],[\"@@̴ĐőǴİǠ̷͑Éòć̓mċƴǃƓेɑɭþ Њˢƒ͸·ȪʇƎaɠŖΛɀ¹Ǌ̦xŀǏ\"],[\"@@ɎɃҹω÷ɶωǎũǲЄiǺĸʚõ\"],[\"@@ĿïĕȦǢatœ\"],[\"@@ˡʃγÄȯĉƪ˒ȨͬŔǈă\"],[\"@@£ĢĖc±ý\"],[\"@@ȩŋիfδېǶńЌ¤Ȁʱϟӟ\"],[\"@@ǱDrˀъӔþëûÏg̟ʣ̻\"],[\"@@șîƠZºć\"],[\"@@ş¤ĈÆĩ\"],[\"@@őFOĈŢč\"],[\"@@׽ĳͳŶŢƢǚhނNĊñȕŧ\"],[\"@@Ɓfjüʲßƙ\"],[\"@@ŋtŜúOĭ\"],[\"@@ǵ΁ț`b̦ôXãɦΠɁ\"],[\"@@ʘǩ֐Ï̈щ฼Ɓ΄ѰŚWǬɁ̠ҠȵϞĠʛŪé@ȻȀėРÇӖú˶ƅmԥǒ̫ૣОӗĹঙĔݹƀ૙ώғʏŉ҅ÖՏɄۡĔÄˆ˓ŀ߉þĬƞĨįƞˀŎZè˸ǦǞـƷȆǎ˞ē\"],[\"@@ƓSׄ¨ѯ\"],[\"@@ŏPĔÞ|í\"],[\"@@Ł½§ʲƪȳ\"],[\"@@ӵɯʉɬŮ®ƪřŀŖIȖʈƨɻ\"],[\"@@åïʘ֜eɏǋ˛\"],[\"@@ɍƀɖGĥ\"],[\"@@ăĆìA\"],[\"@@ȟƴĘƺņñBɻ\"],[\"@@åıɿÊĨɀwʬ˪Ű¸˅ūǡŋ\"],[\"@@`ɫşØé͝ǸǍǿÕſɟƕP·ƦưɺòӼȆȚĘƏ\"],[\"@@¨­ʧǂɀœ\"],[\"@@ƕĩęǔȲ~ī\"],[\"@@Ɲ«ºļĤÏ\"],[\"@@ʡą«ÒͺƸ«ƃ\"],[\"@@Ɵ½ĈĈØ\"],[\"@@ȳŝJҦǦǦԭ\"],[\"@@̮ʭFȯҙǅЅȀƃƸˆٮf\"],[\"@@ťÔƘAqÑ\"],[\"@@ՀĽǆšʒσ¯ʋ߯Ҁ˧CĿԕȀ̅ǵ͑ʔȗ˵qɲ˒̚ږƸĕʺŮɪã\"],[\"@@ũɕ˼KǜɌǹ{Ƴ\"],[\"@@ŷȕǓŠȱĻ§ʐĒ̖ƞ͆ƕÚŏéƗ\"],[\"@@ǁáwʜǺǹ\"],[\"@@ȣðȚɬˉ\"],[\"@@ǉ̀ºĐŐЏ\"],[\"@@ʶܑįûĆ՘®\"],[\"@@ÆɽƛÛѕƲԬƨ\"],[\"@@ȀMłƑݫŅóŬôǘҪ\"],[\"@@சǧ֑āهʪ\"],[\"@@īĀŰ©\"],[\"@@ːڛϠğǧˑ²Ʃ֙ȺǳզշŜ˜Ͼł¢ĬǡhǔǄzŖƏ\"],[\"@@ĩpƮÌǝ\"],[\"@@ӹÉƕŜɄɎь˟\"],[\"@@tǽǔŸĦčġȥVďƭmʾɕʃážĆɀʰV\"],[\"@@ȹąZʖɤ­š\"],[\"@@ēDŔƚ¯ç\"],[\"@@˯ƘȍΌØȒɎbˬ֣ēų\"],[\"@@ǿ¼ğʞ̠ͯ\"],[\"@@є×М̱ǯĵȽƙ̘č¹əȘ\"],[\"@@ťh¬ŢúƉ\"],[\"@@ƉŴÎVģ\"],[\"@@băȏoǮĴ\"],[\"@@@ǋDᲗħͥĨƓBᇳࠉޢĪɮƳƫҥóŗǨ̝ɋǖմ˹˰ΰ¼˥°ȵǚɜàΧўţͨàĘƥŞŎɃuȴٿѨ։ń՛ʎڅäѡ̺xľưbԵOĳŲơkʝ˴ƎΦş¡ɷœįХŷƍ˫JƇ̔ĬŸıɎٽьɔĞдğϺ̐ђƽ®ƤŶºħĈŊǈ߫Ɲս~ʅɄýβ՗ƖʡǐɒÈʺҠŸӸ̈ϴ½ԬʷфeŚđŻǀ̣Ź̝öӳɞѯpɀŨØͫŢrʧ̪ƅȢp̺̌Ҁ؈ִƘČâ¡ƺֶ̞သܫ۪ćŀƉȎE\"],[\"@@ĮōȑǉėǐǼň\"],[\"@@ĬűÝšɴǗĳ×řİƉLƎƗŤrƒŌÑĤô\"],[\"@@ŉqNȮƐKǯ\"],[\"@@ɳSôŌǀķ\"],[\"@@϶ũÀş˫Ï͏ɲɶɏůċ½ŮśÏˁƂłŘϚÌ\"],[\"@@űAİʲĕȎȆɍíɯ\"],[\"@@ȐęҷĀĄǨȤǍ\"],[\"@@ũP¢ŴĈƃ\"],[\"@@ҋĢ`Țиȕtĥ\"],[\"@@ĝpÄ¾í\"],[\"@@ϷƶpĘɲùƖǓ\"],[\"@@Ĭ]×ƧőèþĞ\"],[\"@@ÞƕñǽŗȀƿĢƔȊ\"],[\"@@ŭðo˒ƾƍ_ȳ\"],[\"@@ϚЭģ·ŗãȦǕĨ˛ДɶĪł×\"],[\"@@PŇЍɸϾů\"],[\"@@ϱѳ֣ƑЧlɥƖဝ©ιð͗ɓƭϵ¦̟ƬˁɶƝŴˣК~ΪіͦĕʼƨԠD¹Ć˼ôǪß°Ň³ȏЋĔշջ͡řǩǝʝb޾ࡻĜʗūΛπϵƄhr˝ŷªԗǙÝʕϗÖďƮŌШ؍Ӓƌ̔CΔơĘȍkͣʁƨُaއšѹŶϏГ\\\\ȟĭƇêǓʠȠڔ|ШſѬЇqŃŞë֪ʸȨȖҬYѬǘфǠȎŐƱĹٰŦň³ǖĖǦ̚Ѷ˨įɠͰǶÚ˔ëǀƧ܄¥ͶơȔĆܪûԒ͌ΎψƐ\\\\ļƷ́э\"],[\"@@Vʏǿ³ùʐʤ´\"],[\"@@Ű_ðǮǌĬ¾ȲϺƠ^ϻ͹ȕţ̎Ʒʐ˫ޕɌăƣúҟϔէ͇ǀ̕϶bѼƝ˖ÐȦƯʖǠנ;̘ṷ̋ľŋ@̵̝ˉäƓ\"],[\"@@ȏŢƸaĿ\"],[\"@@ƃcÝɚ͒ʦòĻÅȿƛƟ\"],[\"@@սʞùƜƮÂѬ̽Ž\"],[\"@@čiČĨBý\"],[\"@@ËǘŨïÛħ\"],[\"@@CËéĮî¡\"],[\"@@ġŶŐqmŃ\"],[\"@@ūtɬǂʟ\"],[\"@@ōƽ¥óƒȢb\"],[\"@@ǹ^ŦĘȭƢȸȠŨșÝʝ\"],[\"@@ğāʾ͗؃ÇʒǑLțɒŉœň·½άяɷʓ৐࢛ϙƗ˵¼ʅȌ¬ǭȁƅȇг·ҹĊϓկϝƣƮ\\\\ʃБϧŰ@xśřǻɂƅǯǱ\\\\̋ƏúǇʧϿਖ਼ӗƗژãėď@ǮěŁŻèͅƩāɔɡ§ʹ˂¿ɇǳœƃá˅äΩșжŅƘٝƳčÚÎòǑĥŇŊˉÙƇ߸ŗŜpӴǏɜѹǢĨƚɁȺŖΠʿ˚yҴȆƢĴķ[ÆɌʬΪɂĘùōĬɿܐمԄǂתɨŎĜʞʒĶϼPÂŏԮǕɾǖԠdˌѺɪͤɮĉĤɖňŌǪRȌ঄ƴžռnӰЊƕ\"],[\"@@ĥĠǀûðǢƐɏĕɍ\"],[\"@@ࢰoלړ¸ˑ஦އږ࠳̪ȭ¹ʜǾ^βӃҘɁ̶ԋբɛqƍϧǗڐʢ˪ȍĪȭ̝ȩoƛĖēÏġʂʻ՞ŷžٿˢɯǍуːȌΨSծ؍Ǜяòǿĉˣ²܅śڷͱɦɣǑωȎ̻éW٧ۚઙެ·Ҭңδ׃ޚ˄ҟज՛ܺѕʴӁౚݧдġЦǗňΟԌѱȮܭ܄̹ԺlʀͶш˃̠Å\"]],\"encodeOffsets\":[[[125900,-11171]],[[124809,-10844]],[[126379,-10549]],[[122893,-9599]],[[128070,-9740]],[[118385,-8980]],[[125929,-8750]],[[122332,-8950]],[[126278,-8555]],[[119441,-8820]],[[127270,-8529]],[[126900,-8471]],[[142229,-8589]],[[120378,-8568]],[[127566,-8336]],[[130892,-8293]],[[125730,-8818]],[[134003,-8518]],[[121081,-8517]],[[118219,-8350]],[[132955,-8145]],[[129845,-7851]],[[130478,-7806]],[[141861,-8472]],[[134478,-8191]],[[135150,-7374]],[[131759,-7355]],[[123674,-7289]],[[116577,-7275]],[[118147,-7138]],[[107779,-6799]],[[137766,-6596]],[[109951,-6151]],[[123421,-6449]],[[115425,-5950]],[[135995,-5991]],[[137981,-5843]],[[136117,-6043]],[[104825,-5610]],[[126594,-5398]],[[124972,-5568]],[[125589,-5395]],[[126137,-4660]],[[136777,-4347]],[[126201,-4211]],[[131649,-3671]],[[131355,-3762]],[[119219,-3547]],[[119095,-3960]],[[129906,-3161]],[[109452,-3077]],[[132869,-2934]],[[102836,-3259]],[[110805,-3069]],[[102609,-2806]],[[102240,-2399]],[[129081,-2510]],[[129049,-1832]],[[133482,-1731]],[[127969,-1746]],[[138726,-1630]],[[111568,-1658]],[[108591,-1709]],[[126564,-1745]],[[131229,-1700]],[[126170,-1199]],[[112344,-1209]],[[138205,-1142]],[[101544,-1820]],[[134146,-1347]],[[138633,-667]],[[130356,-799]],[[133762,-541]],[[124790,-416]],[[144357,-2672]],[[106982,-342]],[[130629,-326]],[[130304,-507]],[[106227,-356]],[[133953,-4]],[[100823,-543]],[[107294,-180]],[[105764,555]],[[105501,765]],[[105907,1074]],[[105643,892]],[[106522,1209]],[[107096,1246]],[[104886,1014]],[[99822,1501]],[[104952,1495]],[[127887,1020]],[[104150,2129]],[[130799,869]],[[99671,2126]],[[131537,2102]],[[98779,2417]],[[111501,2976]],[[108299,2932]],[[108837,3233]],[[120483,3360]],[[128674,3519]],[[120714,4287]],[[110916,3779]],[[120397,4271]],[[129861,4131]],[[98809,5355]]]},\"properties\":{\"name\":\"Indonesia\",\"childNum\":107}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@̽ĥ̤ˬZȅ\"],\"encodeOffsets\":[[-4517,55486]]},\"properties\":{\"name\":\"Isle of Man\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʬ@ĤмӼþʜόώeլԟ͚ƺ̃͠đUz­ƓíȘșKąuū¾ǅWǫ̑âʀ˵ɶĉɔÛʄǣaīֶɹĦ­rÓ`·O¹yiŕĿœāŭƛíƃ½ůBėoĻÁÏqėĽhƀěĈ³Ā¯¼Mbn|Î_Ө˃ָϿP¢r^¤YÚƨĝƐíƬ`¢[ÛpßҲůä^ÀjĖQǐ»èeɚĪŜÁɂãň¥£\\\\Aĥ¥юɳĐsɴČâWªš´Ǵ׎ǵ˄ĶɬǏłÂμ\\\\Ŭ¯Zz´ƀ¦ŜGèĸįƄS¢ƎԬFĀxAÀ`ŒjŶŶèȐï±СbûÊÉ¸SeķákĴǵʒũƺɈÏp¹ĐI¬YƮnư~êþŠͦıҠdŞÞ|@À¹źIƞ¨ĐP°K¨hֶӠ£ʨҎϬɢࢎƈՎ̰Ϧ×٢˿áƷfÙǞɵC¡ůdſƎԙࠩԵšƕRʃċjiF{şɫ˗ʽĩȱŴįǭϯĭƍëŷǿϙ͡ŔȗeŁÜ޳aũ£Ŀˋê̝ùųęǥ¯]±léĂçv·ĵ±[ÐÍ՘w¦đǎy˂ñφǝIÅ\\\\¥K@óRÿƷǻEȟǕ½įǪÝŋǕӼǄͲ̈́ŨĴ{Ǿǘ®ĴĠɸBĢp\\\\ŒêĂΙȎ஽Cб¬ɅÖ«XYpȊC͎ŵɬĉåmŃɕɩ̼ÉBfƉ{IɏƑȐůeåW®ďęĥƵƛȷ}̘ɱɢðƁö[É̙į@ëȏ¹ãBùKĕǛ]£M²ÝÈÃâsĦMƊěŦiæ§VM[ĭ[Éō˟ÊĽÀµvȥƢoy˿jǯŊ̛m˳ßBĐʅǋúħƇGΞĉĮµϱśƃŦŕǑÒŜϐɇȢǾɅ˯ͧԻƵȷƭĥɓŐͿȋ͗̽ʳŋ őףȏßHPǈɋŋÉƋɖ֝с֕۩ำ৑č҉йȗЏPʳӡ˧Ř̓ƹȫ՗łԃÉɟǎؑųȔÿěɾȳħ̵֟כƓ֧Ět¦šUܽѯÇׅ̿äț͢şγÜҷƏȓǵŏэҕʱϝȦљӲȓҤçЎŐ͙êEĥ͖ųƐЅੴٹৠӁྰεӤů˔Ō@Ƈƨ¼òŷ¤ǡ̄ԍᓶĆіřƫĔRȂƦkǗîĵϾȐۼãϐǅɈĤČķSоʐӍ­ƂɴƭHƸɌÖՁļåċȥɡƢāǓȩ̿ࠫΕʱDӻ̔ঁ৒æŬȎŵݴʌˀѢųű֥Ʊέöԁ˼ȉ͎̠ɾҕɉÍɔİÒĊnĜbĈAŚCHʨXxh^lNhIzDvìgÈ\\\\ÌcĬAǬPĬEȸěʘĺǈÌɎÀfQ¯p«ä´O¨Pbææh°C¾B~ÙŢL vwÎÏŔÕƞȍ̢EȲáÁiµGƷtƑǠ¤πǜէɌĈ̶ˠʦżȄĂż¤¨ƆúîCŠïÀƗĚ¹ÜJʼİ̞˞þfî¸ŊƲƚƐ̎¦°ҾɸВݾάƆÞÌ ¼QºÐbêĢîˤ̼@ŊÈļÚO]ýÖbÚºǢY¸ÑǄ`ª|®æÒĔ¸˨ŠÊ`ĬâŜWN\"]],\"encodeOffsets\":[[[77130,33061]]]},\"properties\":{\"name\":\"India\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¿µáƠĆŏAƨƁ\"],\"encodeOffsets\":[[74232,-7554]]},\"properties\":{\"name\":\"Br. Indian Ocean Ter.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ˋÄɨt¤÷\"],[\"@@Ňŭˎ࡛λӧŜĉӅñÙøࣽΣ̏Â¼űϵŽޣġǲǨԃãѬɰدÙδ˖ЗZÒӮőźɰŦ܊ŎǧÜƹĵحÅϜɆƔɲ̴Ģӫ~ӝƦsŖͬ²Ƴļ˖à@Ø˯_¸Țȣ¼ĒౖaßĘЬʚՋ͘ǪĒɎԜĢRʇ̌ͨ̈Ņɍũ˧˗̡Íƀē̩ƱјɩʂUˊɰ̜̇δ|\"]],\"encodeOffsets\":[[[-10186,55208]],[[-6367,55387]]]},\"properties\":{\"name\":\"Ireland\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȝȃեĝϜȂIŖѮHû}\"],[\"@@͂|ొٸ˜ʇǽƃǂȅʝƑԄϋɶrüқǰʑ߬ǋ͸ͣӰɫ࣒ķೠʸŮ@ȣÝʔ±ѴڈńǚʶКɰݠ|ƚƚنƈȱނʵҰdТơźɏԞʑɺ˙ٺLþϝ¹ǵČğTȻhÇE³ƋõiΓŇǝgĥã¿S[uTuvańŽȷYƁǱ@͑ôĻ˾é̙̯bťŒͧĴ̍CçƱCğHǻ|ƑYɎȢ{˄Ăą¸ǳEƅwçȋțȑȡЧщǈǏİķب࠷ܺ́j͵}҇ΐY|Q¼±HwÁRǕQ]±wcƟܙƥÓőĩXʃţ»{ƛuŷamÍ©McT·ĝqʡyë¯MĵÿؽƲŹżġĿߍƜ΅ÃȽŘ௳Ȧʣࡒʵ˞ԡ`ଝՙїǈҕ|࡛ԈǹʘϏǪχʻɤǻԂǏŨRǊǙìsɰЗтćɸѡƛѷʰǒŜȅé͕̻ƃËēȼ˅ưIѲ˥Z@ͰØǚÜǌīŢĻŸáÀƵʰfƏOҩ̰ǉĄálƻNgfYª@¸¼ôJ²ŁƼԻҲŪȴéɊĤŘOȌȲȘĶªü lÎŀşǞÈŲŦæVzė¢͡BΏǌķ˺©VD¹¾ʍ֞|ŰȃŨbɴ͇ǔȨΪŵªuϚȽҔ̮ǖ̆Ȗı֎էՔŇ\"]],\"encodeOffsets\":[[[57537,27568]],[[47222,39811]]]},\"properties\":{\"name\":\"Iran\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŗPģêɉũȳԼұłƻI±»ó@·Z©heɞyǊăҪ̯ƎPeƶʯâ¿ļŷĬšÛǋ×Ǚ@ͯ˦YJѱˆƯǺ˕ûqċfǳìƅ{Gy˭ĪзąȯϳŗǅÙóƋƍƧ൝Ŋ߉վ෗ਚഃۀğ˻²˗¢ҷèŮĴĜǥɣ࣊ᇴࢴǪ˸ƆܸµزĶŌ̺êӐјĆhưĸĘĦTĀÌSžӪşƊGƪúĐWgbMųä×Ü¢ǢĲÂE¾Ooʎ֝º½CªUĸ˹ΐǋ͢AĘ¡U{åťÇűŠǝĿkÍûķ©ȯȗȋ\"],\"encodeOffsets\":[[46733,35404]]},\"properties\":{\"name\":\"Iraq\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ߔźѫɋΜėŇɋκpåǱʴÈҤĻƿƏǦˍϏʙ˹H÷ɃϝƣݽťڵʻধŷŋƫקŇಙŲʝŌäĲȥÉуǨఽį¥Ɍǈû˔¢،˸ӷÅĒǜ̢Ĥџỵ̈ɚଏ³ǧŀਦƶݬDĦŞؕR֒ɂࢷŐ࠹ơӛİȒø͢ÛȡȨАćˤÐҟČʶɅŘ̀NeƂθǗ̠ƃƤGƊуŤϴ®ՍÔƠúѦBࡨͻʅʅeѼϧ˚̶̌ÅȺѼ׾˧ĚʶҌĞעϙŽΤ͠]̚ƭͮȨ˄Ý̔Ð±ɂʔÜɜQϊʉ\"],\"encodeOffsets\":[[-15916,67818]]},\"properties\":{\"name\":\"Iceland\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǷÿGkcȋÉNå¤açjģlŅ×¯Ĺ¯ƫȹWqsPclMÐlØkÜÉɅŭÏȟӐĤБྣÍßփบĒìDÐƨƎ£¸NPǎʮβীʬOϨ̚ЛŁǷ\"],\"encodeOffsets\":[[36647,33521]]},\"properties\":{\"name\":\"Israel\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Бٗǒ͹Ƶ̯ԣĢ̝ʲȥEء͆ѽĬǣȎʤ̨ƚů͜Ƃкǯ૤Ơ͊ŚàÏ\"],[\"@@µċ¯ŮĦ¡\"],[\"@@ãĪľç\"],[\"@@Ƣ͏ƋșåएыÔ÷ɳˉȗɼňՒŝàẦɿ̠ɘ̈Áր΂͚ȫbœ\"],[\"@@rŧʍzɜĮ\"],[\"@@ǰFgeqË½¥M}PmlYúLÂǁƘģģýûƸΟ@޵˙¡ǡʢɯɳȷŮлঘշϒݍѾϏՆʻ࠸ɛ͑ႮܛьηįͱɟĬǳ˾Ͽ¼ǹƌɃͿׯӾ̯º͍ҵǕÑ͡Чϻ˩EßĄȜӢˌŪ\\\\ƴѣࢤدȾEȘƳǘΧÍĶŊΓêʻΤթPϩȎ࠱یзĒvŪϫʹǋ˝࠘டЌٕҝљğŨͮˋuΙǔþа̛ȬόƠÊŢ̗̠ȘƺkÖoǖ֒ĔöȬŴîÈÀÔôǗ̢ƙP_£ÃƨƕÐ`ư̾ĎɶĂ]zBĐƧ¨SºAŰ¨Ćl°KĒĽS¢Teŀy¶xMnÂv®¦^¸LȠÏi¸W´PÎ ŊvSĎAĠOÐ«ÎeĊKÈPj¾ÐÞĢǂNĂ^ȼWͦĆxOJ[p¥Īċ¾Ù¸µú}ׄċƶ]ŜEǮgµ[×ƍćlė\"]],\"encodeOffsets\":[[[15951,39138]],[[8683,40006]],[[8485,42025]],[[9864,41864]],[[10645,43887]],[[13744,47322]]]},\"properties\":{\"name\":\"Italy\",\"childNum\":6}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ފʱŞȧ˃¡˟ĞùĿƧíƑƁĲͿɵʞʛĪļƈ˾ØԦÃ\"],\"encodeOffsets\":[[-79115,18901]]},\"properties\":{\"name\":\"Jamaica\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǻ¯`øǜ\"],\"encodeOffsets\":[[-2067,50413]]},\"properties\":{\"name\":\"Jersey\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ůįYӱŭɛÇԱŽɹÍɍÃ࡬࠯į³ǋāgcacãƗ¿őka׵Ň©ĥƑīƟǋŝǵŻऱŸnǞВྤĸْiƂdȌHlǸĀӬ̇ϒÏ࿦ࢲɤࣉǦěŭĳ\"],\"encodeOffsets\":[[40085,32896]]},\"properties\":{\"name\":\"Jordan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ǩúĆƐ«ç\"],[\"@@Ɓƙ©öǾŶQÑ\"],[\"@@ƥS^ŜƈŇ\"],[\"@@͡ǭÁʑų·ɊԌǄuƂǸHȕ\"],[\"@@ĉNPƜúƩ\"],[\"@@ïåǝĺѴɤȥʷ\"],[\"@@ƩDµļĠÞŪÛiŁ\"],[\"@@õ Ǆ͔čγ\"],[\"@@ŝȂ®ãý\"],[\"@@Ĺ\\\\¤ɺƄhǛįġ\"],[\"@@ȔōǛwƮ\"],[\"@@áĤĦƲÔŝėŷ\"],[\"@@ķǘƺßř\"],[\"@@ķQĲàğ\"],[\"@@Ѯ@ƅˡ̠g£ŗżȡ˻Ε˕ࢻɡxƱ΋ȭø׈ķXĉŽ͓͙Ĩ­İŮxŴőƘN˒ϐѼţ¦Ʀʹ̄ģÓ¤ɇŶD\\\\ŵʉÎʉǙ¸żŭˮˀǫΉ͔|ĜȠkeĬҐǔĴǚȚĀȦ³Ȇɥ\"],[\"@@Ʈȣ¶Ô\"],[\"@@ÿlzƨļµƉ\"],[\"@@ɼ{ĐͿ̣ǳǏ̡ȉǜ˛À̅ŵʷѣơ÷ƋTÊŠǷ\\\\çќ͉÷Ԣ̌ʖ;ɐƋ͜ìlȐ̄ĖΆû\"],[\"@@č»ÍĄƜ\"],[\"@@ĝïƁü˲ɀÑɋ\"],[\"@@ıbƸˈÅ˩\"],[\"@@ōqĪö Úŗ\"],[\"@@ĳPrȾɈȦ¥ȫĸSȗȳ\"],[\"@@Ȑsֳ̰γưܥÛˋ̇̕á̟̝ÅūǃࢅΫݑʦыΓǷđˡѕɡc͎ɪʐəÔƹȽtɓǛŲȋiƍρȽȁ̘Đ¦ƹČѽѹթÌЙçǴǆʽ¾ûďtʬý^ɫ̹̈ȳuġѱū΍ԫȃÙȱÈ˙Ϣwʀˆˢ֧Ůб§ɹƿۛȋС±˿àƕУͽǶۓÛ{ʊĬŌ̌j೎ईࢶGৌȬŸȅ̔mȈĔǊƊẘՊՀŪՠЖŞΡͻİɽȖëɤǖڲɢӆՂДɊςڂɚزÏȘɅÆɨ˸ó˴̜ȼÂ̜ʄOĸ̫ǀĢƶ·ł˖ύÇDĪŔɄʖŏ\"],[\"@@¥ĴńÝŻ\"],[\"@@ų¤ĀĐŅ\"],[\"@@Á¿ǒĐŏ\"],[\"@@ݠǁռͲȕ֑ǚ̡аìމ͕ߝĳґϳǉΗ୕ӠύΝǣɵǴȓHŻɟۘЧŵÉ˷àɱʟʥí÷ŤĦ˰ɭ̬rʮӔ̼̊ظĻȤČ͘ৠƫ֢ìȶɪĞߒ۵߆ҭ\"]],\"encodeOffsets\":[[[126862,24863]],[[127277,25105]],[[128455,25337]],[[131337,27293]],[[132095,28387]],[[132560,28886]],[[133758,30990]],[[134103,31127]],[[133511,33202]],[[133205,33004]],[[131754,33571]],[[132175,33629]],[[132600,34021]],[[132911,34559]],[[134323,34410]],[[135441,34760]],[[132383,34943]],[[137583,35079]],[[137577,35312]],[[138172,35112]],[[132491,35179]],[[136572,37073]],[[141665,38730]],[[144619,42366]],[[142829,43091]],[[144687,46203]],[[144459,46421]],[[147277,45176]]]},\"properties\":{\"name\":\"Japan\",\"childNum\":28}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ķȤøÍŖøĤ£ǲ»ǢŸłEŶRÚ^́ǋɉŋĵ½\"],\"encodeOffsets\":[[78898,35953]]},\"properties\":{\"name\":\"Siachen Glacier\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ǁèĪŨÑŏŪÿ\"],[\"@@ѝɑѩڥťȉЁŌ։ƟǅחȝĳŢճCࠣǺ׷೹ʠƝ÷ʣɋĀˑ·Ʌǂ൏˽ƿĻԢƙŃԯβ޻ͩıŰƛ˯śNқśĨűĢγ½vȍƴĀbᅛǔ˹řUӝTûR§GěđՓØ۳˰˕ĝˣŉęʥyğÒƹåVă¢Ϋ´ďÞǭɣâџÄȷ¯û`Ɠ£̧ͥ®ûທەӍңWɇɿȳźÆȂƩƘਏcǯۆЩVúࠢʟħʳζӹͼϳƍਡÞ৻ŗࠛݸᏟঊᓡһBᶡҗsӣ֚؝̶ࣃƿҿ̯ĒࠖוĠʁʐˏ`LʶЃװнŐáŖƂƌ॒ý҅͠΀ξຈuΩȮ̤ԴÅ֐ӱŔ́Ƌ߭ʀકѝҏÛīƳׅɦbŶͶdڕ޸ֻĄǃÁȑаͻưͤˢ̂ȕǼòˤҒ֊ɶjՊѩΤÐőֺזȪƦȚؼǦҠτ̶çƲƟ݀Ƞ̐ȑ٤@ڪχΒщòЎ࢚έڲξѨβƧͮǞѨwѲ̳ӎ×ÐŅʐöȸɦ̮ƝѤbϔƒƔ϶ࣹ˜ιʂ߸ͺȃ˶ɰʠ࢈ΡȈϯº~ƄʲÞұĊɄͮזÓᒂπՄ͜ʄᖮ̔¨Ƹ٪Ȕ৤ȏҲŤϖץý͗ފMƴĶɖ͑ƨǊԜƩМîͿ˭ĎɓϞƠвōČƆ٦ȺǼǐ୴̒ƵʟȝNÂŇୀهᅂᐳπƞrȦʌĢͤđ±ȇˈWàǻࡸWɤƒԄĐӴȁ͆҉֖ƫȲϏߖĭдɸ£ǵגБ\"]],\"encodeOffsets\":[[[51389,45932]],[[89419,50264]]]},\"properties\":{\"name\":\"Kazakhstan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Κi²ƿk§mŽNţɒ˷ݒ³ȾƁڒяŢćŜ}Ȑ[ƀIݘťƎĸŐƪªĆޢΠɌǹǚħŶDĠdɌ`ŬAɩ͙ɭ͛̓͗^ᶻɪ̋ƬȕĂĻVĹɟȿ̓áPȷɇɧΟůęҿɉ˛̵ݵɥǷഩ৐Ϟḭ႘নǾδɀɚÒƦˈǞƬЌBŤYǚå̘nÀϩָǎO°ǌGŁďäj´­hſ˦ǜǘǠǜɔɊȨȠǦǞƸƲ¶Ņ\"],\"encodeOffsets\":[[36174,5494]]},\"properties\":{\"name\":\"Kenya\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@·ƭé¬¿¨ɛ×Ūȓ²\\\\Ú[zl֝ǫʡǊৡ¿«ʪúz¨¸kÈTIÒE~мƴՐȓ͢ɾ˂͜œςʌɐWZŴǞ©ѺʬЉʛƤÍGåsuXKþa°£\\\\ÁmÿnãPiĮÅĒ^³tôwO}Hŕ»¹AáWǥ_Yʁ|ȿÔŃƨҫƞ֨ϬƦ ǒîHpgjçā³ec­ų̈ͦƔ¤ü_ȸ°Ͷ½ĪEɤãǬĒÝά³Ą¡æUÑƺzĠĚʦˤŊ˖Ğ۴˯Ք×ĜĒ¨HüQӞSŘV˼ᅜǓÜġþ»Ôµ¼ÁвÏŲġŜħŉWaeUʳcÍg×ą࡯˵Ǘččãa÷ȇǥƕsšJăřԁ á_ëīƏ¡icãíćŅë¹Ý»â͗ŅǍFĹˎDɽŭŉuęGśÃÅ|ċΙǇƙƁcÿ«Ã¯ďy£iyH£ěOy¥ěuë[ƉXéc§}ďŁYϿr\",\"@@ćXÍ`]@LgÐÓ¬Gø|\",\"@@nƀů³ÎeFÁìăAaå¬SüC¨R\"],\"encodeOffsets\":[[74384,40332],[72361,40812],[72916,40850]]},\"properties\":{\"name\":\"Kyrgyzstan\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ұȲʃđĮƴȆǃɎƭȍǛOwҠƩ˂]ÉǓ͐f˲ɋȴƍݞǮt̨ҪʒǐೢĄʜǛ¬®²\\\\TFwl¹·ĖùƴǪÏüĝÖ«ƌE¶ņyàûŖsä|\\\\Ƃ`t`ôSòWü¼°Â|{uÈÔ««iĀ^rC°ÂS BƸƨôPĖŢƿӟɰׁŉ΁֓ħĕƱљ˙ʉ}]ɗͣÒŽĻJ˹ʰɍFȱʻÎćł̋ùęɧÈBǭǑƕΣĻ\"],\"encodeOffsets\":[[106933,10662]]},\"properties\":{\"name\":\"Cambodia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƔĭͷƌŤ¯ÒĊÝâĶ³iĥ\"],[\"@@ÄŃőÞÎ¦\"]],\"encodeOffsets\":[[[-161118,1901]],[[-163163,4018]]]},\"properties\":{\"name\":\"Kiribati\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƉöƠŰӂ°yƣҝı\"],[\"@@ģÖȆĎġƣ\"],[\"@@ƑŘÒ ĀƷ\"],[\"@@UćƳvŞȞË\"],[\"@@ÿ½ƁňƮŤÔǭ\"],[\"@@IōýfWǘĠï\"],[\"@@࢚ೃ]ࡍƚCŹҫ˽̿ӅkÉȗ΁Ŷ˓ÉBȝʽĐÚǓŻƋŵêÖǬ̋ˇţÖȇǕɣ̠ɖrÌńơAŇˤ˔ΖĿÜɞȌǳʜ«ѸʳCiä˜Ȣʢ·òĽĘĪȗɊĥӴϦфߖr˰ˆ\"]],\"encodeOffsets\":[[[129359,34021]],[[129264,35196]],[[129201,35565]],[[131140,35642]],[[131831,35634]],[[129558,38643]],[[131456,39551]]]},\"properties\":{\"name\":\"Korea\",\"childNum\":7}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@āYĉǀĔưƎǑÕƃ\"],[\"@@٫SȧϨݵĚƌƎÚôŘǆȰϴиĆĠiȎÿvŭŚəƣȹȉˢ͢ڿ\"]],\"encodeOffsets\":[[[49434,30336]],[[49606,29228]]]},\"properties\":{\"name\":\"Kuwait\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ϤЋâȓÞDxödRŒŁĉΑÁȄʻĚ©Ɇ»ƠéϺȾĀżýȠƣ§û­sÑrcĖUĺJ`ÁlgŲEñAÃħĩYÉ·çŽŕOʉØǓMEe{çXå¿ă¯sI੊ջAµĵxù̀Ɂ¼ÝÎÿĒȷˆ˓ɚǕÄÕþšÜ£pÝP±ZƛĢƃêªfUıϸʹGû}ƟéoĪƷ¸·Ȏƙ¶å¯gÅÑ½ÙÝrÃjU­Jĥ­§ďOóƷƧAT­ÁqDÿ]j¬Ó¬Çv{|ɵđós_Ɓ_{[tãþŕxßµŅƋFÕ¬ûĞǩÐƳĕú¸mºCx¼lĊ¤ä°®¸l¼tɆpöYĠð@ňŀȚpĈDÒeȉŊNƄÙ¦Ƴ²ďÊȓʲËƴMȤ`Ǌ´ȊÛƊʽȦėİŃƢŭȒĉĒ§oęlƍÆšķJß]EauÁg§µëğȳé÷­JygK`eĀÿhę¾ǡƂNÇñóÓ³fóŧĻËQQšÿȷȁ¿eǑĔȢҺMŦñĶEȪ҈õ̎pƆQ¾חJīǠĺΠǝǪċßÿsXPºN²°ǼÆŠÜÆèzƂB¶IhËJw^ÐƔɒ͆Ǽ¸Č¶kĩÅQÃZ­pu[ƌ ĊFƌëpN²¢bPÝĒrʔGƠM¤ǱΪnªªªŔrRlIæđƸ¨Èu\"],\"encodeOffsets\":[[104579,22917]]},\"properties\":{\"name\":\"Lao PDR\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ϧ̙ʫPҐ঒ˠ͌΄z¯ƃƦÉäǯʳʝòï͇ñ¤ƕƓŹ\"],\"encodeOffsets\":[[36730,34235]]},\"properties\":{\"name\":\"Lebanon\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@àūìЭɛίʨƟʲĀ§òǑÒĳĀWƴÇ°ʓƻՑV˿|ȅ׵Ȫܻ϶१ࡰ࡝ԢǹȀȪ˜͞ʲȘȄÞʾ®°ƂÀÜʠ¨Hðê÷ʂĜɜǇŰգÿʍ̄ǗȒȘΨƢŉ\"],\"encodeOffsets\":[[-8690,7740]]},\"properties\":{\"name\":\"Liberia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ʡˏĞտɏБɶࡥ@᳿@᳽Aေ࠽M@нủཤ↏Ⴒࡉϕٛ̓؟Ҽౙ˴ϯڞۑȦʑÅşĘɉخҫؠɢ͢ʠŕךƘϤġୢе߀ǬĪ͂ƄņżƀǠďֲƈȆǜ¨ŐǌǾŶƮüƎìǄöŮÌ~ºCªãİ@ŞLĬPÌǼŸÁƀsϼȟЊµѾĨཤѯѼ߷ᅀн۶їϢűӸȈͰЌƻܖǐʹо̦ࡠ̚Ҩeݺʥ`ʋƲı۾ǡؾsɮˡ\"],\"encodeOffsets\":[[25755,32415]]},\"properties\":{\"name\":\"Libya\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@³ĕķŰƒȒZɫ\"],\"encodeOffsets\":[[-62356,14154]]},\"properties\":{\"name\":\"Saint Lucia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@|ÙſŊń¯\"],[\"@@ɪaϬίѠܣŪ×¦ʃϞܟY͙ȋЍލϑϧ~ƟŦȣ֪ũ଒ĦɵŪ݌ƜʾY̰˼ą͏ƚÁƎ\"]],\"encodeOffsets\":[[[81792,9268]],[[81902,10049]]]},\"properties\":{\"name\":\"Sri Lanka\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ɉkɛ̓Ñęʭ͝˒ƛ˴ŗˆȦĚψӢȊÈŀĀŰàȪðĤlZ֨ёîȕĹ±Ŀŵőǿϛǧ\"],\"encodeOffsets\":[[29335,-30849]]},\"properties\":{\"name\":\"Lesotho\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@µPǸˤƁ˳\"],[\"@@Ù~m¦xʁßÉ¹ÅkƩXuĵkoϙçåx~Ս×jǠë¶ñĥédJwfépÏLµïŖHÐŠʸɏǀгJ۱ǚDǆƧ̞OǮO ɦĲ˶ńβüڔUþ_Ú³ÜNÜަđڂŒƖǓԀăްοCqÛ¡ĉ¥ÛW{qƼWâY`iƥţʹR]ÙķçŇ_ėwŗǛTŅMuyÃÙ«éiTiŪeÀĥǉ\"]],\"encodeOffsets\":[[[21461,56606]],[[26187,55440]]]},\"properties\":{\"name\":\"Lithuania\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ţ̃ƍ½[}¿Q©R}nyZÝ`YĐɼ|¨¦ÐĠîĨYjNEMïz»È·ÊyǸõ\"],\"encodeOffsets\":[[6643,50994]]},\"properties\":{\"name\":\"Luxembourg\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ӑ́ѱϫƍޯπӿĄƕǔځőʵÆԯÛÝMƕÔړV̓åÝU˵Ńɥırوքغۚź؞Փ̢ıؠɼ¹ԶIĄոžƌ­͘õ՜ˍȠÏθàȄÏŞYŤCÎÿɐħoTO«Ǉ̋Ɩl[ĥĬşĄ¯P¸ĻnÑT±­į\"],\"encodeOffsets\":[[28824,57491]]},\"properties\":{\"name\":\"Latvia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@řŰƒ࢖Ɨ˲ϩ̦Տۄ̥ĘlǨþ®_˞@˒Ěڔ˫êFמƵTЋːǓĮ˟ŮåƄ¯ÆĕOċUïǨī±ǓcS͇ĔŹZå÷gFGł]fFƿËF¿\\\\ÕÀĥ£qÝĉÑġSí½·ėµÏÏNŭǁg]«\"],\"encodeOffsets\":[[28890,46542]]},\"properties\":{\"name\":\"Moldova\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĥƷǘ͠ñǧ\"],[\"@@ŉkkŀĲÀƓ\"],[\"@@Ͱ՝ʢඇȼչɱәǁƄŃ̂ȓÃƦ߷Ó˟ˉΧzփīο஭₵́గ͋ލϗ̥Ӎãճ˩ʫOছӚ̫אª٪ϧ६tϜǰӜʤƪԖ੎дǭ̔KˬǋϞ»ݬϊׄ°Тζ˄ȊĴïɌĐƮϪÜȰƽËǰŦǚϼʚƂǷMʆɔ͒Ħ¬\\\\ʝʞ̺ǆǇʬȈΆĥź¶ŨĊÈǺĻҔϞļάŏ̲Ūɲ̠˨̑\"]],\"encodeOffsets\":[[[51135,-17308]],[[49503,-13684]],[[50728,-12730]]]},\"properties\":{\"name\":\"Madagascar\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ōAɼìŭé\"],[\"@@ƾǸöƩɳ\"],[\"@@ĕ¥ŘŘñ\"],[\"@@zĥƉǆŐß\"],[\"@@ȩȴŘиύŚʝ\"],[\"@@ĿƻǤêg\"],[\"@@ƵĴɞÂʣ\"],[\"@@Ûȣȡàú̚Ŝèȡ\"],[\"@@˹Ɋùɠ͖ɩȿ\"],[\"@@ѫ೑ƥཉâͻϖҕÿʓtʚ̵Ϯӊહؘ܇Ɣѵјҍţ^ʚŇÿÞҎÉ͒ƽ˶̇ނɜ֘όǨϼ¼ƿ͊ÓɒƘËɶÿUזϲ͆ǜǼŜࣀ҄ɠଔʜϬَƁÀČƱxˬfǰƝªɩŻ̩еұi̳ȷȋéȄ|ȟșFÿż|ɕۻĵƟƣɂr˄ɛ̯ȑuʃЗ˝LyſໝBGӁǟDǵBθ͙ɠƅ¨ÝtÇ@¯¸Ėy®£@÷SĉZ÷ÙCƳ@ɵ@ϡ@ʫAȃ̭ĿǩĕƥĦȹqs]ÛΗඳ౐ϩȚ©·ΦǧևƶØĪǟyËŎƋšȆË˭࣡Пԁ̓ƸӍ¶ٟ˴ȯȖޭƺঁКْ࣏ٿĔدɚЃцࡵИҗ֖ƿΆΆǌÇƦƹ²ɲʼz̸ȇņǽ̴H˶ūʨ॥ੈۣӺȨĥ^ňρłˣϼȖ]թˈùżȭ³ŤɆʻšǁŔʲȎɮê«ƅʀǧƪɫOǃ̈́ηźǷʾÀˎӻĔ࢑ࢪݫൎXѺӝƖŕǲǁÒǛĹڅͦŦɇýЫ˨॓ڜջɌχʚŅĦʉȈóŘԉͼʩϼ܃ƎćăʤȎƟɺޗԖޟxѵʖȭÂȪʀƑ̆љɌƳÙˏѕɟ̙װ૏ߜĳ[ɩʢF؜ʵբե̴œ̦ĭŽ˛ÍȱȶԓɄāǴϡʰĚϼ·ɨöCąȜčõȴě^Ǿаݛިإͼ͙ࢢȟƔȜˡ̦¹ƜĐĮȑŬɽҊ፺ƴġǧẘষᛠJFϚ๠WʢˉচگЌ߿ͦʓߊ͙ɶǾɸҊ̄ĴۢāּԁϪܕڔٻ¤Э̊ԡผәȖø\"]],\"encodeOffsets\":[[[-93884,19126]],[[-89026,20791]],[[-109058,22130]],[[-113220,25604]],[[-114746,25135]],[[-113766,26646]],[[-117934,28744]],[[-114895,29702]],[[-115871,29750]],[[-99477,26585]]]},\"properties\":{\"name\":\"Mexico\",\"childNum\":10}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@аˏƖɇó͹ōI·ŹķġkʹǅwǵƱŷ¯©wԣeɉàȃ̂ÞԎƆ@¬ǔʂĎȐÑĒĶƠxB@Ɇ²ѼV\"],\"encodeOffsets\":[[22881,43330]]},\"properties\":{\"name\":\"Macedonia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Nᅫħ՛ɹտ˕ǿ_ŃύÒ·ïෛÍ̑ʑؗÏϟŮѱWʏȑޣ̧ŝʍЉºʋɷÝʫʡV­ͅȍćΛȀǟăƫƿĐ˙ɇķª˭ɩɗӵȻϝȫ˩ԭ\\\\řMų©W¡ŃĥéNķºEd¤úD~¹ˌțƁçtõÐmoS±KÅnĵoɏMÇǗ̱ǔɵòˡɝaƆɓƐÏъˡfɤ̜ΡʴHȾȍЖ̏Àǫͫȍѩƶιˁȉʴ̹ǅǓƸĨǦAҌȵάǑ­ȇˊĀȰ·˦ǫɄ«̎ƨÁpjºɘԶìòƤŀ WюЋɄɬي£жîAĮl¢Ú°`ŵoẀKŸڊűƆĳńyȬyȾyȾyȼíظǙฮ̵᨜íظ³к{ȾuȒʴ@ˠ@ˌBی@ᝀ༷᣾ၭjʅϐəØƩௐѹŀσŕʵȤĭܺƀ\"],\"encodeOffsets\":[[4330,19603]]},\"properties\":{\"name\":\"Mali\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŉíƀǸĿ\"],\"encodeOffsets\":[[14916,36714]]},\"properties\":{\"name\":\"Malta\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ã±ƤƤğı\"],[\"@@¾ǳǅŬňÈ\"],[\"@@sǥÿz·ȌƬ\"],[\"@@¥ưŦŅÿ©\"],[\"@@ÁģÁÊń\"],[\"@@ĽũřC˼Đã\"],[\"@@KƏɤ¦ē\"],[\"@@ÑHĀĢmĩ\"],[\"@@ÅćoŪǴǲĽɓ\"],[\"@@ā¬¾ǘɃ\"],[\"@@ǟƸɎC­Ƴ\"],[\"@@ȚŉąũKĥƚÐÂ\"],[\"@@lřčǒâ·\"],[\"@@ZăĝɐĄƋ\"],[\"@@·ċͅǻõǉi}]ÏxÌIJgµƁAçyÛÅÅş¯ǻM±ĳÀ£ÃRƛĉɗxǳΉ§ƃ˛қë̙¼ǕʏÑܹ̹ÏɒȑØб؜ۑȆթƦò¬ÅÏƝȍŋֵ̭ƏVȑ̲ԭӊե[ֻʀЛǮ٣Υ֧εύ¯ЃŝŽćբǮʼÈԖŔňȫf¼ФąjàĒđۂ̿ی§˧ÆUϖǅЮĠ@ǧǦďࡢŁŨŢҤ̍ƧӔ̉ʲ¶̵ťˏ˫ǣȯɚŖ˕ҽɳ̽ϑó˺ƛɫȟO¥̬șɹԜɗΗǽß̬ಬΙ঎ÚRƧŸqͨĭ͙ȉńǳ˾˨ŋƤǞ͗ˮĄŘϩƂĵǱŅǼÆʬȧǙÀƎŽȈYɣͱиŧфŶŬʨőƊUЈOĪźB¦wǌďĚǦúŴé̞ŀˌŪ¤b ޴łÛȘf͢œȀϚìŸĮƎǮϰųİĪȲ˘ʾpŤàØ°E|kjČQʄŢƖࠪԶԚƀƍŰcD¢ǝɶeÚâƸò¾ʚȆĖjŎÚČĚƀ¾Nϴ˥ȤՕżĚǖëôڋ­ԅķĭüǫ˓ɷǅ_ŏɹǅç͍Żā©ʃƪəťˋծǚԼVƃǻžɽηҰĹöğ˃۫،ćpɧǨɷϨQЌʄºƿ\"]],\"encodeOffsets\":[[[100539,10172]],[[100567,11216]],[[100920,12027]],[[100881,12191]],[[100420,12688]],[[100776,12901]],[[100675,13414]],[[97081,16199]],[[96745,16329]],[[99917,16644]],[[95940,19133]],[[95964,20028]],[[95736,20370]],[[95243,20403]],[[103567,22086]]]},\"properties\":{\"name\":\"Myanmar\",\"childNum\":15}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ϡʉ֢˯ʑÉTǳɳÑőŸ̽ϥ¾ʭݿ׈ĠæáŖmǈb|z^Ŕ`CĆ¬ĚÚ¬ĐÀìM­¢NTÄąŞV~p`®Sª]TªP|Crë\"],\"encodeOffsets\":[[19680,44493]]},\"properties\":{\"name\":\"Montenegro\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ܷ˵ԛӉߧˋēcշkџ୵ƅݷʛҭȇįå×Å¡ËiНÂ@Ȁǋʵ£ʉ՛ɊлðΗÆƷ¸ˁʆåpé^͹ZӕÆε®đNџğ቙ȆۏÍѳҲ˫֬ǙðrȨՙÖ৑ԀؓúǫqŽCɁvţϏP҅Šơkǹˢ˸іIÎ£ÔĀØВÙŔÒÏ~ëfǿʀÑȂßþa¶clĹtóÙŎÍR¡ái­FǻƬçrγuÛ¢­áZſÌę¦QĈ¥ÈēhēÌˣêäŸȓìõøŊĴ³äRUĸD¬nòÞǐφǖâXroUĐzÐ~nÂŸ_â¤ĖØdSƼΆǆԐňº ɘĠǲÈVNØC®̜ƠʦCôRƎƎÒ»ǚī°I¶xÌÞVîWƌƣ॰¡Ĕ˫ɔǕ¼H`ǲ@ƴĝΊoҘòȾć֞eȈŵŶVȖƜΐĒȺʎ|ȚœÇ£ǡ˸ɸоҌˊɆˈࡺ̥ĨeǐMȪGÊY܂ɕǄ^ɀʔËH«cTĝµjȃĐģyŏࡠ͓ˢ¿ø`ânɶmરːۮƛŴ\\\\ǦVŘ_ȖĭČġĒ­øĪEʆGʈ¤ʙψɏĬ¯üeԼXǼÚu֞ċȔ¦ʀÝĲp̈́ŚŎªþ[մèΒĞǠsĞbĞŠ¢ÜÔĖżÞńÊņÆ؊ɢϐɖăɬǃøÄ_ƆSňKàtŌǪºèCŔǚµŎąܥ਷{ĹJğUćū¿ĩ±üɋʀƿĄræàƀÌðD¾_ŔIŜtĞJŠa¨aĲ}ǺŝÆ]Ζ˰ؘGÎļķÎÃĶŘÄՊчƾʕƻĳkïCūnţYƛrǡĆħt­[É¯×TËSƧXă\\\\ŷïWˣůǍÐĝC_[čBo{Ћvʝĉ̋ͷ`X¥³ѡɿѥËȱWƱƭ{şƿɃŷñáǟÙȋŏÅcҍÄ˽ÖğćĀó ʣJãfœcзבѾҫ­œ\"],\"encodeOffsets\":[[114564,44729]]},\"properties\":{\"name\":\"Mongolia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@èĞ¦Ïō\"],\"encodeOffsets\":[[149250,15497]]},\"properties\":{\"name\":\"N. Mariana Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@MˎÃȨfɜĥ¼఺ƽӌɇΈɏࣤŢĒࡂࡄÛƊŜАр֦ǷԄÔʈųƎʘӦĭఐÒƞࡏʄס;ڡz̒Əո᠂ࠒκүبŤŌơחʛҁʂЩ;χƮśƯº£ÞGÒZdlSʐ§ƚ©ÆU\\\\ÚƺĮǸȬĠ| ČĐࣈuzgǊƁǦǛɞħŢŅƌȝɈͷǤÇȆEĜƹߎȼЌ®ĐƖZŐEȈHȤQðkºFÊhżŊłCƞéþÑ`½Ī֤ŞͦťƚƸĂǐʊӒĳиȸۢɊƠüЌ̚ŰǓĿēĢÅǍуň֟ЧĀţť̇ŎCvख़ĶûÍ˗ňİÎʟȏͭũ֕ߵǋÍ®šٓҋ߃ɧݳйʱɇ҇ٵş¨wţ͍ōݿۍʣĤĚĵ§յɸ˩ʊ܁¢طÊµÖ˶Öŏ׷ǣۭƞu©ȭлӭၽ۷̷ћɒɛĘƺkƙӟEe҃YŹzñK\"],\"encodeOffsets\":[[32884,-27483]]},\"properties\":{\"name\":\"Mozambique\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÃćĐŒƀ}Ƈ\"],[\"@@ŷډṿL³ƦSk£Bĭгíً¤ɃɫэЌʯǙËƱȽűǅ¹oiʭŦ˛Ȱ̵φʯЦ̅ĨĥqγζׅĆٷǉЃ ǝ˝ěmƯá@ϖÔ˄ζઌƵबʧ̞ǬŴŝȠيȁΦǉeɇϞĹ¥ȝ_þČβพD६BϪBȖ@Ȗ@Ŷ@QŐOĘQŢSŢՠ·˚ĸưŖöƀĔĴà¾hƾx̌ŲNц@΄@Ҝ@Ŗ@ɮ@΄@Ɍ൞@޴@̼@ƾ@Ǡ@@Ī@Ǝ@ȌAȎ@ǖ@̪ἢኑۋ@ˋA˟@ʳ@ǔก̶ᨛǚอîطzȻzȽ´ЩĴŃŲƅ\"]],\"encodeOffsets\":[[[-16766,20180]],[[-5488,16674]]]},\"properties\":{\"name\":\"Mauritania\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ó~ĖÁ\"],\"encodeOffsets\":[[-63640,17143]]},\"properties\":{\"name\":\"Montserrat\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@˩¶ĈȲȮǎŔȇşɭ\"],\"encodeOffsets\":[[59035,-20976]]},\"properties\":{\"name\":\"Mauritius\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ŏFƕYYÍȻЋƺߍFěÈȅ͸ǣȞɇņƋĨšǜɝƂǥȃďࣇċğ{ȫĭǷÙƹV[ªÅ¨ƙTʏckÑYÝH¹¤ ưƭŜͽψʁЪʜ҂טŋƢاţЧՄƕËƷːŃĊʠ̬PѰҌ̔ƟóǐªΠÑɰ\\\\Ĥȸñʲ̴ʤĝƌ_QĮǻǔtì\\\\üďĒďžŷeÙǸࠀəĚƦ˚ȣȾёĈҩ¹ʍƔɕĮ« Ínī\"],\"encodeOffsets\":[[35799,-11856]]},\"properties\":{\"name\":\"Malawi\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ßnnˤ²̑\"],[\"@@û²Ėŝ\"],[\"@@ȡa¸þƪÛ\"],[\"@@ćW°ƺþµ¥ī\"],[\"@@ÐęƥăćžǞ \"],[\"@@ȪÏǎʹӀϡˌҷpྕ̼̑΀ܛ˭ŕrŏǰTƙʟIǷĵĻǼՉʺளࡼJ̲ӭ״ä´Ʊ̎ɫഢȋϪŤȮìŏΆ÷ĴǷưEÑЅŎőϊɪĺŇǐ ȒΖ\"],[\"@@ЉƖӯջmƳŽȋঃǩQŇŋɕĊģͣɭɩˋѹԟcɽǕԭǖÁŐϻOʑĵěʝɧōשԃǁ܏نīʀúŎȢɛРܾ˕ǍƌȪӨ¹ȪȢDÌ̤ఎΚ޾ࣨŞ̊Ӹүƾ̘ÿ˚ɾƴäѓƸųҠȠưƈœːƺǄŘÏŘæܺନĎų¿ȃ˺̨Đ{ÄəˆƑìƋ¥̉ţįфƚĦǅƱÙå͊ČȰǵՆƯĕůʳŗշÙƇ̈́˛[ĻґŇʽþĹơ\"],[\"@@½«aŨǚüFŋĿ«\"]],\"encodeOffsets\":[[[114063,2474]],[[106723,2798]],[[120714,4287]],[[102696,5422]],[[102245,6621]],[[104552,6393]],[[120397,4271]],[[119954,7341]]]},\"properties\":{\"name\":\"Malaysia\",\"childNum\":8}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݨƈϪɦ§Ɏȋ̋yͅșʋ|եν͋ϰስˍJᵥࡃFᙵ@ᲃ@šυĻȏƃÉƙë܍¬ܧǂċǒVȜƝŘōĐĻµ·ùmŋµŇŝíؓնͅӤǝ݆Ɵǆŉઆ˯ۨๆࡗಂʁؚ׭੐ֵިɀRфƈnĤ¸ǘĘEPǄMՌȬʠËҔ̱ᅌfሼSҺ͹ਨ»Ҫſೠƶࢴǒ\"],\"encodeOffsets\":[[23942,-18064]]},\"properties\":{\"name\":\"Namibia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@č_@ĈĎç\"],[\"@@ņ]eƝŹsŷȼƤ²ný\"],[\"@@˟ƎÚƂĴőêȰYĒΫ\"],[\"@@ȞٌХЄл੾ەxțǑ­ʱĶಓ߼ُںğ˶Ťĕ\"]],\"encodeOffsets\":[[[171566,-23166]],[[172044,-21944]],[[171419,-21668]],[[168144,-20731]]]},\"properties\":{\"name\":\"New Caledonia\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǠఉΦӋgȅ͂͗ȓωɕᠵङঃޛଵ¶ȷĎίƭEēϝȅǻĹǇȝ౉ɺЛȷ¥UӍϫΏVϛðʛŸ̡Țŝƕ^ؙ˱ɅĜщҨīJ̃Đ̅ĜÛ[­mĵáӝqѡɳǙֵʧȵ©۫ڑׂσƋp˙ˇΌźƂķȢґÇӟ΀D˖ǲMө̄ǁɦɰǿɄ®ΐؘÐ̒ʒොÎ¸ðώÑ`ń˖ȀɺրĨ՜Mᅬഞ˰൪୨␤ᕨౚ˳ؠһٜ̈́\"],\"encodeOffsets\":[[15339,23549]]},\"properties\":{\"name\":\"Niger\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ƇoòŎÖĝ\"],[\"@@Ɇěؚ˲Ɩ]Şվ͑ϜïΐUӎϬVȸ¦МొɹǈȞٮ̀ƮF˜ϑŎƯĄϹtƓô÷ȸ·Ďŭ¹փ̛ȋ¹gïGÙ÷ÑǉɡƏɥķηŧœÑЇɧř­ĻÍΕqËŉųȻÓýƧßŗǻ׋ǧȳÕĂŽǡƑÝ¿{ǉͭɑ¡hÕȬßẩʊǉƻĵAó^ilc oėÙƏı­go¯ġÅıƛħЯсʁܷǙˑɿƶº̋ձħŊȷěǩƚàǝșĻŽˬþ̏ȑ­ŖsœʓPļćŻǟ¼͏ʸŝʤÃƸþręCŤƴŘƍÓƽŎɎàŇĄǷÇɃ͔ί˔ࠗâɢƞʋÕāŅՇw|ȎdÈl¦k¼kæUńôK˞`xdlBçݨÔ֪ɨɾאɸȎͼŀRÀǄßƌʼk±´ŵǾFĖÂŐÄÎÆc٤ʨȶǚֶѢɴӞrĶâ®nÜ\\\\ڶǵъҧ\"]],\"encodeOffsets\":[[[7476,4525]],[[6968,13423]]]},\"properties\":{\"name\":\"Nigeria\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ñōǥ§׷ʼɳč֥ȴƇŃྦྷེîàƊĹò¶ɺZ¦`úǺæ\\\\ÂJfz«˔OÂX¢tbľXȜg^ĀŊòĂ¾¤Z´íǔķPhNLdE²¤¨ЊˢŲɪǖȒǸűĞwݸȲĊĎĸɐ_wqÁĳÃöÍÛĪÝĤ΃ȋ˿Ż֩²ރĭ¢ɈƉǱØБñ½Ǖľ¬Ƶǹ˻Ȏ͏\"],\"encodeOffsets\":[[-85649,11180]]},\"properties\":{\"name\":\"Nicaragua\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ũVĪĚį\"],\"encodeOffsets\":[[-173878,-19541]]},\"properties\":{\"name\":\"Niue\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@£ħīɪƐƁ\"],[\"@@˗ƭЁçŎ݂R\"],[\"@@łù́¼ɀ~\"],[\"@@ƩƪŮ@ĥ\"],[\"@@ٷżʜ²ѾĿɧŀƮ\\\\ȣǚҊоʊՎʖhЄʸѾŚو͎ƃƑՍ˓ŹʌëʽʥÜħ܏Ƒɀ̑ËʫɭįǆĿ¯ŻʥrĒ͆ӧłƷǆگé\"],[\"@@ŕLͤɍ©\"]],\"encodeOffsets\":[[[-69842,12437]],[[4328,52620]],[[4044,52982]],[[5004,54345]],[[4328,52620]],[[5454,54668]]]},\"properties\":{\"name\":\"Netherlands\",\"childNum\":6,\"cp\":[5.0752777,52.358465]}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Hıōɒņş\"],[\"@@ƅCÀĤĆğ\"],[\"@@ʣÜɨ¶|ő\"],[\"@@ƷhВİlč˅\"],[\"@@ЭJʀĞǮħ\"],[\"@@ů­ȴɂăǓ\"],[\"@@ȌܱȇÒƒӔĖ\"],[\"@@^˛ۉ Ր˲Ɯµ\"],[\"@@ӌˆǆȱҙȗ෽ǱॾΦÐάӆɒʍح\"],[\"@@тù­ʵϳAͽƷɭ¶ǈʔ̠hŤǸ\"],[\"@@ǅ{ÎŜĸğ\"],[\"@@˃Yzńʘ`Mŉ\"],[\"@@̒¡ɯǗҥȭջiȀǮ˚\\\\Ϫϴļƫ\"],[\"@@Ȫŝ΁ǄƘ¥\"],[\"@@ϥɡǿƌԘƠÎÉ\"],[\"@@ʩIÀƼȪƱ\"],[\"@@ԥɱЁu̩Ţ௒Ɔ\"],[\"@@QȵֱĈýǟחœΟɵĵžЦʞǇǖ୧ͦԵƃԏRϟȉ˗םڳͫࣳǴѽƁލÒۉҮѷ¹@ơϋIы_ȚƟͅбඕǘ͗ӷӻŜғǫտϿɶ̷ࠗӅ¼Ʒ߅ƩÁۣ۟؁άįÂʓƱƅٍ¼ΉÙԯ͹ƧʯʮࡋŭӃ،̳ƣʕ΋µʚҩđ˿گѝİʫŽ̧ƟaéńҭŮȩӤΓى˱§ʇżČšఫۛঋķŃńʋ­ÎƔߟɖŵϜҚĕɞŊɝ£ǭŬÀǜ϶ȼਯ͓ÌͶȘŲʦ«ώƂУԴЬȌPǩЀ̠۽ƓࡍקºϘО͹èůȬіȰͻıŅÈě͸๨ĔɖǃDŜӄĴɑøĆŔɧɧӕľǻŽ޳́ðĕȶ˰¬·ȌDƘࣰù׸è௵ÈĽȊ٠ɎƦÉк¸Ħ¼ҳ»ǼǠદĩĞюĊ઻¥ǦǬՌƚѼOѮȵϹˆВƲɱƀǺĒҺOhőҔƒ˘ȝتÐƎժƲǏĀʂĖųͣŅjŵ݉ɏЧǎ࠾ײߪ˜ĠÎ˱¹ǌȆ֜Ǡ̊ã΂ȬлŽʃĂҰԼ̀°ȽŦੂǔޓÇþΈؼźʵĦϨǴ઴êࠉÌѪʮՎȏĈƢϋæ²Ǝϗď±ŪˮƐЦqʱĶ׊ƈʮ̇ĝμଌĠ࢏ĚೲԾƄ˂րœʧžӪɎѲåָ̛ѪɩԥζǮɆkįͤҔqɨľҖƭԳͰߺ̨Ģ֚͟sȊࣼдƁŀͨƦԜƃцT؋سലۦÛѽͼĐǎȜ̦¼ʽȚ̌Ũڜĭгʟ̾SáΛ՜Ԭހǻ˞²݈έֱű௫ڠīǈȽʞUŲŨǆŝψ¾\"],[\"@@ҢūҩɣÖɬĞ\"],[\"@@ߞ˴Aŕߛǝ\"],[\"@@̝ļ˔HŃ\"],[\"@@μeɌ̉ॸß˭ƃຈȡጇЩŌʊํÿ،϶஥Ұ୊İ\"],[\"@@ܮͅ࠵ȘӁτ׊ʕ\"],[\"@@ղMີ«ԺĬҊ±\"],[\"@@ࢢęƓΏؔȀʀ˽৺ǥ׼¨ٺ̭෱ŋ᠏ၽይվ̵ɰטbȎƐᄨĞĳĎᛗŃ·ɎՄmఐ˒ਂүŒˬƈଫǅʢ̱ş˝ú§ʳѷť߯຅״ߪȩ̒щb̷ŻЃ͠Èɺ̄åҬĔӮěOĒஎîũਇũٺJגȗӂϢเۓѷצΰ̰Ҕţ\"],[\"@@࢙UᅮĠओĉ\"],[\"@@ୢǙƊ̒ҶÔĚʋশƤᓂǛ˴Ʌವч෋ǫ࢙Ʋ၉[؛üϡĐठƂႷXЁƚԎĜ߃Ěபṳ͞঒ȓ\"]],\"encodeOffsets\":[[[5208,61755]],[[5078,62551]],[[8298,64858]],[[8675,65196]],[[11501,66423]],[[13284,69504]],[[14206,69904]],[[15573,70598]],[[16139,70207]],[[17924,71267]],[[30676,71472]],[[21278,71772]],[[19718,71749]],[[20242,71902]],[[24183,72243]],[[24595,72261]],[[24004,72516]],[[31611,71459]],[[26201,72850]],[[-9168,72540]],[[19681,76177]],[[22127,80482]],[[11521,80498]],[[29745,80806]],[[17190,81825]],[[33307,82042]],[[21400,82176]]]},\"properties\":{\"name\":\"Norway\",\"childNum\":27}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@R¡ĲƃķJç¥ś³ſyYקmɫǐ˃ĵ׍ǶǳµõǂáVɵĉčtэɲ¨BĦ[¤Ň¦ɁäśÂəĩçfǏ¼ĕR¿i]ãҳŰmÞÞ¡\\\\ƫ_ƏîƧĞÙ£Z]¡qOֹЀӥ˄Í`m{a»Nÿ°ĉ´ŽĜgľĘrÂÐpļCĘÀŰîƄŮƜɪȂzjº¸Pǰşà®ƌȴȌ¦Ǵqǂƪə޼ϛάί̒ĆðuâvÁ¢ĵ®Ŀӊ̏¸MǶ´¶MUBióģ³øoǖaɤDæµæíæũ½cÎr^Ű¸æýĢ¿äĞĺ¼dÜOzq£Ƹ­ðĸ÷Ųa˨MȨÒȾ_Łأ\"],\"encodeOffsets\":[[90096,27786]]},\"properties\":{\"name\":\"Nepal\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@§ÓėØƀC\"],[\"@@lë̓ǲɨƔiǝ\"],[\"@@ďÑǔŗ׿ǁɼ̐cǨƠJǄƕ\"],[\"@@ĳŉ¸ð¼\"],[\"@@ǡŁuĘĝoƶȫƳûĩäØƺʗzʂĚ͜o\"],[\"@@őµƸǪ¥ų\"],[\"@@ۦ̖ů̇ǜɺʬsɛȇ˨Śʧ˙\\\\ȭǘÏࢽਡԇʝĤéǩğƖjĨƩɢ±OǕӁmĮƷşɕƔŨǍ߃̱āկūBĪŅ΍էÚƽ̙Ï؛ԡ́Í߭`ǋȲ̅GʫǼƝý՗ƺȬɡëÌŸȍÙIŐѠĴǥÈǌĪɍWRÚƪ¼¥ĆʊċØĶǡƖȞÃĴǺŖ²ŋfǀʪƨĺÍ©ƐԎЂ؆İSŘ֐Ȭ΀̼ƀeýØʸ`óêŢ¢ÎËȢʾƕ`ǄʈȢƢ֔ϲɌǈӺтΰʮAǯqyĽʆƱńα\"],[\"@@Ǔ¾ŞżǛ\"],[\"@@ƮútđՌǑƁƬ®ɔҏƹW΀їãҁӞŷðǳƂJç؎ʾɑ˰އঔ̉آςѸŗɥܟʕƝÉѣ͕Ɣϑůř˩ƞıɣПܟࢱ֡ͭŧǌʅM_ǜȗÇѸ֘ü˨ĉƦūƎࣙϊƝǆæưҮƪǘƬǢݜńü˽צŰįǐŌŭŠʱDʋϘǴğQ̦ĿÜ]ïǻńĹǶFğȾʹĥաۊǶȊȿƳ¿¶ǓȦØǄСҼ˴vãęʲͱ\"]],\"encodeOffsets\":[[[173239,-53757]],[[170211,-51979]],[[172181,-47986]],[[170987,-46264]],[[-180405,-44790]],[[178089,-41844]],[[177271,-42269]],[[179757,-37149]],[[177428,-35773]]]},\"properties\":{\"name\":\"New Zealand\",\"childNum\":9}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@åO@ńȲ˾ÈƏȓʡ\"],[\"@@ɄёОЩ൲ϵրܙͦŵmʏέ؅Ѝ͕ΟץɝdƦÙSʵ́ŭӇĈ։ࠣɛωٟݻŧȉɏhɝǯʁ࠷ϩȵѱĥछጊᠾ࠾֐၌ϣמ\\\\˦˨چÁĺѢĺ³ŸƕxՀǤðÂǷ˘Ȭ\"],[\"@@Źn̚ñ`˨ʎĩי\"]],\"encodeOffsets\":[[[60132,20704]],[[57742,25579]],[[57650,26267]]]},\"properties\":{\"name\":\"Oman\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@MΥ٫֕ۖߕÄ޽ںՓe˂ȕDƳ¦Ȟ_d[iűĩĒǖJ̆ƷáśīÉ_˧şĕ·ãÑ{­_©ÒǃZ·¹ǡaÙüÕ`NĻÙŇÇ@ˣ̻ġíaéÏR¹»ÝËΫƅГݽһɷ§¯ƍ̍Ʊƙ·ŉeí˟ý̛ʻįÛIęº¿Ƙȍôƅù§¥āŻŹȅ˟ʣć̵ըɋǛ£οƐǟ¼iľI´HÄjàHȱȎ̡ÖƟÐővÍuKÚšA}½¯Dgååa§O³Pão¬R°eɏ¿ǅËʗĹõNç¬Ù¢īDǫMīBËdÇ[ëhuC¡¦kMg_WuGʧȡFěaĉmıÑ£ēɋŲǇų̟̂řӨϿĖG̬̿͂ǉĝ˰£ළřıĻԋȀх¥ÃţྥqjbzêrʤĜSºNdÎªbnvŸ|Ɯ¼ʄŤĪWÔŒܚƦdƠ²xR^QǖÂ Gx²»{RΏZ~҈iͶܹ̂ا࠸ıĸǅǐ͌ğٶǿЎĹࣼöҀėʜŸל^ॖʴĮ߀МϮԼyʈĠƅƌӨʠξ@ɬƙΈʬиɔӲٔɦ̹؀ٞ¯ͮĆːŉƊվո£̨͗и¢âࡢԨ۸Ŋ\"],\"encodeOffsets\":[[74844,37750]]},\"properties\":{\"name\":\"Pakistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȽĸŜê|łʏ\"],[\"@@¿ƌÞr]ƽ\"],[\"@@ēƇʂѵ˽ͿȉŐśЁѩۨŒ~Ūʜ͎Ʌ˵̨ĽċƧĞUųĕɰӓ̴ΝwƯĳŇǱÆ׫͍Bŗϔӛսɱȟ¨ƍԼǡɱȣĄȉΔγ¶ÛĮϋVƽÙ[ƧůɢƔĮbUŪ½ĘÄżĤ¯ØĉÆ·H@͜^jX|~`ºlƂïäÐÂ­ŊāǿŶc³ƇƖąʢnĩƶҐ̟ѢĚװ˔Ҧ͜శ̥תӝ\"]],\"encodeOffsets\":[[[-83561,7509]],[[-80791,8473]],[[-79231,8867]]]},\"properties\":{\"name\":\"Panama\",\"childNum\":3}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ԷσȕŗȳÏLŃo{iij{sªÖë°] {WýƶЃŶħgRI«°ñĊÅŐƏĆġHŃĵũĳũۤĉǖбۼ^ȊŘØͼ˺|^Èty©m­MÝଢ଼À~êß¸¦OªFÐbżÄĘ¬ĸEƒkĄFݦಧʙͅāګǠУЩՁ]ƗǞɯȽͻǢя̾ǃǃřXƓԓҷk¡ľşVÑ@@AÙÉĉÛƕ­¦ʋĽǹЯśޙ֎Ǐ͚޹Ӱ੕юୁڒίњͳɠω٪İºδԝ࡮ˏʐÉͬ΍͂đϜϙغӛఈԫڀԯࣈ७ײmƴȞ¤Ǧϡߺ¬̆پۜƮĞæǁ¦ˡeq³őv«i¹b¥JĎEùŃ·T°Cø ĄĘ¸^ÚĎ¿Ĳ±¢}ðRÖZ¼¾^ŋă²×ÎóÀ{æAĢl¾j²^Môf´¤ƨĔ˂ʬܐĖÙ͊Ь঴ΚӸΰѦԐŴӎZƄwS̤ƑƴÇƈÏ¤ÑLʊgǞü˰űlt­ÂÚ¾»¤¡¢¿êɩ¨ÝǊ·ÊÍºwÄÑǖ©Ƙύʦřϓƒ½¤¯؈MȠØªÄ¼Ä¾¨\\\\ǌÑƌġǚlêÊòh¸hɚŕ¶ÁÔYʀő¦¯äÌe՛ऻǤíEÄhJ}¶ÖƗŴģ¨×KÅu£KÙ ġ]ß°u¬½ŁcǅRß]ƥƩܷŻΉȳąĭīśĝùµŏw±yýљƵʡăuÍĊ̱\"],\"encodeOffsets\":[[-74892,-6621]]},\"properties\":{\"name\":\"Peru\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@έƽ̀ɚîÛ\"],[\"@@ɂŕĭÏΗêʄļ\"],[\"@@őYŃȼȎÞɠśȗƣ\"],[\"@@ōýbĦĬg\"],[\"@@©Û·ôržêfFƻ\"],[\"@@ËoKľØč\"],[\"@@šUWĀźé\"],[\"@@éœķöǢ\"],[\"@@ƾĤ˙Ƒ̙Ȑģþɿo̵ŔŽXίͧ͝Eҗ̩ࡰŕÏʷӕǪȋâУˑ͉ĩЄʯǍ׷̜œƠýӶȆ͸ғΠơSďͳʛʘɅƝ©ǊƧЉہƫfȚˎض֘ǲŜɸ͒ɨΒɩ¥͑ͰƲǨ̶˜ŚΆɮēÌƄʐWwخ҈λ\"],[\"@@ÉÔèȄĊɑħ\"],[\"@@Ѕǁƽrĳǌ̚ˌƌrȮŏdȩ\"],[\"@@ǏǢƠ˒pѳ\"],[\"@@Ļ}¸ƺƀÏûë\"],[\"@@ģ¡AƶƐŐ©ɣ\"],[\"@@ŗIŅɖʯƎƋ˸ÒŜ͔ŀΖƔ͐ɰĜɈÏ¶ţͿޓWɑƞ˩ǃǫ\"],[\"@@`Ѥո઴ܽʯɫˣ֭\"],[\"@@¸ŏáBjŎ\"],[\"@@ýÓŎ̄༾๜èиȺ˺u̡ƈϟˉơƫɡ·ŧ̅ևऽۇ\"],[\"@@űč´Ŏþ\"],[\"@@̘|ĆƉ[ΧɊБŁıŻƬ˭ȷŖLԨĽƲǻīԦȴǉ\"],[\"@@ĿMĻưŴlĈǍ\"],[\"@@˼g´ŻɜĂȽˇʟƓۇ͇Ų৖ƿǰĨϾɽ\"],[\"@@ÿYëɚƦFǵ\"],[\"@@ņ¬òǩʯGĿʖǸŏ\"],[\"@@șŪƲ¨Ƶ\"],[\"@@äǥǺŉԇè̙ƌǁхĄǕǒįǼÞǨң͚ŵΖߐ\"],[\"@@˘ˑJǵӑ϶ˇʓâքЖʝ\"],[\"@@ãȽùȎàɢŦ°§ʡ\"],[\"@@HñƁʸźȅ\"],[\"@@ðŷ·΀˘ɇ\"],[\"@@мːʧdбū˳Ɓå˃ʖɫքʿȲÀĖʮ\"],[\"@@ǚÝġɑƥľîǲ\"],[\"@@ƭčŗŎƾΐǊǧÁȧ\"],[\"@@č̋ÿ͐ǎ\"],[\"@@شˏǌĞƆĲyħڙ̰ґ͑߃ґɃXɛǷ́ʮӳËŽŜ΍ϐȧÜÈóŶάƜʴŉƘοǐðnȎиȋSīɍÛɨ̓ƃ̜ÙéϿƵļÒȐՙņŭͮӋϺŃkǘЭÉǛȉ˞ԉΖɵăƁǋȽ~ɉǤǟãi͒ʲʰfŸ̛ȤJͯű{ǁ˸Ɨ¶ʹ୼¶ÒˢɻǬÀU౺ȰܶтĜ\"],[\"@@ă«ĲƘmī\"],[\"@@TùſîŬL\"]],\"encodeOffsets\":[[[123137,5383]],[[124068,6222]],[[125024,6583]],[[125888,7587]],[[119890,8073]],[[120172,8412]],[[127803,9363]],[[126667,9460]],[[129031,9545]],[[129085,10001]],[[127585,10023]],[[128707,10153]],[[122795,10738]],[[125594,10725]],[[126087,9282]],[[126332,9677]],[[126728,11555]],[[120127,8643]],[[122739,11802]],[[127565,11616]],[[127600,11769]],[[125437,11894]],[[122920,11985]],[[122983,12460]],[[125599,12605]],[[128246,12829]],[[126686,12583]],[[125025,12652]],[[126746,12753]],[[126241,13162]],[[123602,13803]],[[124841,13866]],[[127339,13960]],[[124963,15366]],[[124008,19063]],[[124848,19349]],[[124438,19827]]]},\"properties\":{\"name\":\"Philippines\",\"childNum\":37}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@áŦŔƾ±ˣ\"],\"encodeOffsets\":[[137826,7560]]},\"properties\":{\"name\":\"Palau\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȌġǧɡĨéǌ˨ŷ\"],[\"@@ƅÁćÞɎ[\"],[\"@@]ßĉĨ\"],[\"@@ǺÂÅȧɫĒƷ͐ʰʻ\"],[\"@@ɔÑĘȿϩÔöÑƨü\\\\\"],[\"@@ȡŎĊžĤµtȕ\"],[\"@@˒ġ^ŝϝǘĮ¨\"],[\"@@dÑĳʀĦĘU˅\"],[\"@@ɝĪɔoJù\"],[\"@@ȵǘ\\\\Ŕɖĳ{Ƿ\"],[\"@@ȧƧ̿ŢšΎϋ̈́}Ф̬Ƨ̼ѱ̘ȡŔʳ\"],[\"@@ƝŀłĮȭ\"],[\"@@ę˔üĆĂǡãǷ\"],[\"@@ŕ¸Ħņpƽ\"],[\"@@ǜìʐŅ¯Й̯ɅƆʁÇďǯę̍Zʉً̯˿ۏwɩǲʃٗϔĂǔުĥЈ¼ŌÜņμä·ćȧĢǷ׼ÞΪФ̂Þßֶ˔ă\"],[\"@@qóđłĄ¬ù\"],[\"@@AᇴħƔĨͦCᲘ@ǌྴׯԖġҶ̽ΊiԠѯȺζοkӣ໒ջȢɏ̇؏·ƑħȤҙ޾؍ĶϙǢşŐ̙ԬhÄϹؼǅȿıĨǧࠌȇ͹Ñǜǯ˝ŗʫÞəȌအʄكִ­ˢ˩Ğԇܾࢷɲġƞ̓Ä̯ǅЧʠʌНĝí˅zĄǙࣷķƩżşyɦƣ˖r˂ŇɠʍUǗ؁̭ΕƄअ©ƁĒ\"],[\"@@ÕÛŷǒÑш͛Ҧ৳وˑøäƔ২֭ࠠܕĬȷƕͻ\"],[\"@@ɫBǡƾɠøǞïPǇ\"],[\"@@̶ĉșĻևuĠȠΌ\\\\\"],[\"@@ȁèĲƺǙ\"]],\"encodeOffsets\":[[[157221,-11751]],[[157984,-11634]],[[154521,-10818]],[[154707,-10260]],[[154142,-9570]],[[153954,-9721]],[[156295,-9174]],[[154734,-8943]],[[147033,-8685]],[[151579,-5966]],[[159701,-6847]],[[150709,-5562]],[[158359,-5563]],[[149524,-4839]],[[155562,-4399]],[[156335,-3208]],[[144360,-9337]],[[156637,-4870]],[[154048,-2725]],[[150598,-2007]],[[153360,-1590]]]},\"properties\":{\"name\":\"Papua New Guinea\",\"childNum\":21}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@βছثНВȷ¡ѭºǩδοċÁĀɹıķɕ֥ГˣʗµÉX¯ºŉX·uĽŢ÷ʷQÅRϟņ͋ǞҹNǯēыÐʱǡʧpdƘ˧ȎʗǕˇĤɩ̲҅ƀŹÁȹŨÚǆʋ«҇ƢĠǅ̍œέ˒ǬŴřèɱ࡛͸UŅñqñEJZĔŘòy˸{zƱ¼]jzêŗǤŴȾÓƘÃzg`Ò¦ĈėİɕŘĿĄV°żĀÚâþDdDÊŽϒ˘ùsƸ̅ņဌ˸̾ɜ๜ʆμŻ˕¼ʹ̿٤øԖ࿮»ӂSN¶ÐKêoexIêcĦòìµǟ\"],\"encodeOffsets\":[[24049,55235]]},\"properties\":{\"name\":\"Poland\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ūɸGŋw\"],[\"@@тÁPś̍ɥ਍jÉ̶ĘŔࡼ¯\"]],\"encodeOffsets\":[[[-66995,18541]],[[-67716,18888]]]},\"properties\":{\"name\":\"Puerto Rico\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ƈȝϛĳЕЃ¡ܗ̯ŋۣԃߋ̉ơӗ͢ĻӴϯ˯˅ߕqϥуɝĆɅŕ̇ȲΉɕĲ˓ôǾŴџ¢̈́άФň͕ĴȮО£ȨӯȚŗťɵ͞ѸϤऌϐوېǲȎȥࠀťŠȂȳ݆͊῭͒͠ǚҨ˾ęLŭɾǫ\"],\"encodeOffsets\":[[133660,43557]]},\"properties\":{\"name\":\"Dem. Rep. Korea\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@мġ˙ăǩĖĐ\"],[\"@@ϼGQÕҙAģŌǔ«\"],[\"@@è͝GÿĢͶÇ\"],[\"@@ǛÖŨ´ħ\"],[\"@@ʻļɒpªū\"],[\"@@ũYlĒľ÷\"],[\"@@έƣٙĮͳõƸͰÉࡠǴmŋĀΏÏǬȖøȖ˨́˯ȃĻĎĘҒҌٸŸ՘ÏߒōÆĢƪіǒĨ˙ؾlɎŮѺÜɧˤş׹ѭĲ֓ȇƧŘũáȉţĭΗiҎԗ̃ԉȦɵŰNУϭң\"]],\"encodeOffsets\":[[[-17603,33658]],[[-26264,38750]],[[-28822,39376]],[[-29328,39450]],[[-27725,39571]],[[-31884,40353]],[[-7583,38072]]]},\"properties\":{\"name\":\"Portugal\",\"childNum\":7,\"cp\":[-8.7440694,39.9251454]}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@lÕ\\\\±«{p¥pǉÂîʵĥڧYʻলŷ˞ƺ¬_ïĚñ²_ǖ@ŤwĄđNđňƃâޅjº¹`ė@Õxï¤ä[üYĨhĊp̜ƊƼõÎÍňÛɑŽۅĉřǳIţaίʭɋͥǝȓʑßq¹ËµFåËåµÙCƋúǳHɭțนɾνĲpÂͬМ˾ȨɈ͊Ӣɑ˴ଫӘףЀߕȢȳǜ׵ЌΓӎƃƤƙöíºB|sx̾ঘBцѦޘเ̈ޖVވѿj̅\"],\"encodeOffsets\":[[-59555,-20648]]},\"properties\":{\"name\":\"Paraguay\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@đëì]~ɼɘ D_ƫȝ\"],[\"@@ÐȠɆŮÛÊ×lÏkkNOdÔȺ°Ƭ°ĺņØĤkêi`æ£ÊKjƃķّӏģ\"]],\"encodeOffsets\":[[[35173,32044]],[[35718,32121]]]},\"properties\":{\"name\":\"Palestine\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŨIĿƅŊȥE³ƞɌ¶Ɨ\"],[\"@@°£Ə¢ĠB\"],[\"@@ǒʳóĢŔ\"],[\"@@ËÈÖIć\"],[\"@@ŧemŎƴG]ğ\"]],\"encodeOffsets\":[[[-152905,-18114]],[[-146883,-17018]],[[-142360,-9927]],[[-143437,-9652]],[[-143434,-9124]]]},\"properties\":{\"name\":\"Fr. Polynesia\",\"childNum\":5}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@÷iíkÏ@³RlÓì©Ģ¼XýіȾӨɒƠʀȿ·ͅľЅƱ͓Ƈ½\"],\"encodeOffsets\":[[52499,25198]]},\"properties\":{\"name\":\"Qatar\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĘēŒ¯˲©MÎĦiˢĨƲbƐ£ŚġůΕёï Ǿǡ³ʱধ̧~˳Ǹϫ˵ŮܷƇ׿˱ᓝƐ§ĨƈŊ˗ƈaVǋƾºĘÆlæM^Yáŧ²ū}ųīěgƷŀɯħäƍCvP¶HàNZjƧøĞƲl՗ɴgʀ]R[SeUeE³ÑøȇĘįŒrȒĘŬĨ̤݆ਈ݄ψƮºìæÂEǤāȄLߚÃʹǧТƾȌlȂɈtÖÒ¤zúŘvƪ~̦ėՐۃϪ̥Ƙ˱Ƒ࢕Śů\"],\"encodeOffsets\":[[28890,46542]]},\"properties\":{\"name\":\"Romania\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ýÎɚbƛï\"],[\"@@̢µջ˯˝ɑ}ƱāǦظՄ\"],[\"@@ֻ˝ɋ[ٓӕ̊Ϟ՜̶ƂŎķɤjШȒtŭȧ\"],[\"@@ȭ£ѠήӺƾܫӇ\"],[\"@@ɻËӆ˂ʉȵ\"],[\"@@ǗcǶ̒]˭\"],[\"@@ѱɕŻ¬qǢϲĒΖ̸ƧЁ\"],[\"@@ȥØǬŊĤeéƻ\"],[\"@@ӂறƙ݉ŦϛѢଋݮൣ֑ԠˇÀՃħѿृa˫ֈߋɦĂ͡ů˧űѾףŢсڃȷ҄Ǫׄ×ϔǾΨ˅ئɴیÛࢾŠӼПќ½ҌǐѪҞˌƀ͒¡ưϖ̷͔ΪĨ\"],[\"@@Ļƣ˹~϶Ŧ\"],[\"@@ɠ·С̵ɑǮȕé̂΀̨ĕ\"],[\"@@۲ǙдIɐƿşʷGÏðŕԇFࡹಉÊ̶ϲҞÖ͊ʖ¶O̥ʟʹáǌ ˢ\"],[\"@@IũݥԎѲdyū͸˛\"],[\"@@ĵǒĚÛš\"],[\"@@ƏÿʒьھǦ˯ࠗʁ\"],[\"@@ǣȿƤʌ\"],[\"@@̳ÀűƾӘ±±ǋ\"],[\"@@ަƻƲǩԄĹƅɔÖӝȒ܆ɫ¿Ïሴҝ{ˑ̺äŸóÙ؍ΠïĠǋʺňhȱʔǤϩǔŪʼϵŮܶ°ѮÛƓĩÄĩÈź֢ХĦ৲ŏઊӵāāʬ¶ĿϺu­ŧ׫ŏŁȳىǂˆʣڧ_݃ƼҨȍÛƯ̑w͂ÔƁܹșʆuċƋоǷ˱AƏĨµǕ˅©ɀͷƥ۹̒ۗîϫǬȩϮ߳ŤεġޣOѵҌǊeȂ͚˹Ƿɳǂƹǳ̗lęʃπ͑կϙ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶ@ȶ@ȴ@ȶBȶǜ\"],[\"@@՛˛׹įЅÀĳ϶ѴȎ͊b࢒˙\"],[\"@@͓ъ΢Ȟا\"],[\"@@ܑìНȤвĬࡢőƣʩ\"],[\"@@UǫګIœŪҥvεΦѺŤ୸ѳ\"],[\"@@ʐűƛȹٯˈռä\"],[\"@@ƫɼ૆δ@қख़Ɠ\"],[\"@@ȻëխĚن¸Ťå\"],[\"@@ذģԢʣཡȹӫÖ@Ҝ़\"],[\"@@ٗt݆˄Ԯů؛Ǉ\"],[\"@@ܱňҀȲ˲̹\"],[\"@@ЕĐdŒٚʧǁ\"],[\"@@ϿŷâԸ\"],[\"@@ठěʵͧ׿ɍėԩং۟ঞͅЕŝٕŨĪƕڿŀ࣯W৽ǌʌǶТطǸDǄఉ¯ΩƢÒ΢֜¸ΆǨɊ˨˱ļڒŀıɢಬǢѠá\"],[\"@@Ցµ˒ߎž־˷ߝá\"],[\"@@঄˝Ğ˳༕ä޹Š݃ąતіऎ~\"],[\"@@ؙh˨¼Ͳã\"],[\"@@ԍßǹˆ܂Lyȱ\"],[\"@@ԕʱ੻ɐ͂VǤƼબů\"],[\"@@ͲDĿŷ֙Àͨô\"],[\"@@ǍƟ˕¶ƎϠÂNă\"],[\"@@൘ƄƩሜãƩǱࢣƟધxᅭͰ͐͜ɐǯ\"],[\"@@йiȺϦЂȩȁǑ\"],[\"@@٤Ǖ֜юসɯࡢ@ඤ˩૷У܋ÔχȄǴ͂ՑkğʣޮΡջűСƞกŧӱİӧʵࡍŠ१Ѻ˼niͶπTūǒծƆײèै̱\"],[\"@@țſࠩþÎØॸU\"],[\"@@®ƝҿƪђK\"],[\"@@فWࡐŒɍĹ\"],[\"@@㎅ޡ࣡ʵȌđ۝ʛιêǗǧыZêɫ܍ǳUȵϋÎȖƯӟʕ҅Í஡ƀקđҋΒ݊ǌזϮڞÞүŌޔˤׁƖȎÎ҈ăɰɆٚSϜ˒ۖǊ୮Ȯ֎qɔǮ๨రŢᧂՐ۬ÝϦȏ঩Ё\"],[\"@@࡟O੒ƾȱƭ\"],[\"@@̹ЊìďĹ\"],[\"@@ƇȞđǈըƦǂАC׌ɯٮϸŞ;˾࣬ʟƬĎÔ̪ɀĢΨդʲࢰӮΎƽʶČȘ̹Ķۙɵ˗RνƃșțౝKȓʺÒ˔ɃɖBɒ̛דкη]̣ȎסϗȞ΂ɅŠ}̜͏ͤө੘׉ֲӗƊəÍৡΌᔹɗݡйuŻӴÇĀЃֵеݹ৏ƶŃïǱڷȇӟ˥৅ʼōĆǙ¶őéDǩ·ŋÝsŉLƅTÃ`÷ɫǄɕĄϏ؉ɣŅÅŃÉŻÝÓĕÛş¡ĝĝaǟtΑĝճçý\\\\ō©̓řıoɿÞęGĹ֝ČÙvǻԻWùfĭ°χɐ£ʚʇʅHĩF÷đ®ċĢȕĮŗ`ǥUų[ۭƜયˏϏ_ŗvÙnį\\\\࡟͔zŐďĤiȄ¶SĞdG¬ŏ|ƃȿǃ]܁ɖÉZȩHǏNħfǝĮۛȸɅˇҋˉɷнńŉÞǭ¤ÈÚWºo{șȷʍէɭŵUȇŸ֝dȽĈҗñΉpƳĞĳJýI_»G¥ÄǭŒēˬ९¢ƋƤëXÝUËµw¯J¡ŷàÑ¼¹[ēű͙M̛Ɵ­×DMÇUǱƷûßc¹ԍŇ·ǅTƻ×cĕá£ŷ`mÁÏ}ďyVqpWáǕυµÏgĿñ«mķC©FȷċÿRבВ¤ǶгɷߕĮȱϐ֕ƬͅҊӳȂԃďɣƑࡷXßǼˇX²ȈͣĒʋġqȥοƝᅁᐴିوÁňȞMƶʠ୳̑ǻǏ٥ȹċƅбŎϝƟčɔ΀ˮЛíԛƪƧǉɕ͒ƳĵމNþ͘ϕצұţৣȐ٩ȓ§Ʒᖭ̓͛ʃՃᒁοוÔɃͭҲĉʱÝ}ƃϰ¹΢ȇࢇɯʟȄ˵߷͹κʁࣺ˛ƓϵϓƑѣa̭ƞȷɥʏõÏņӍØѱ̴ѧxͭǝαƨѧڱν࢙ήñЍΑъکψ٣@̏ȒܿȟƱƠ̵èҟσػǥƥșוȩŒֹΣÏՉѪɵiґ։ñˣȖǻˡ́ͣͼƯȒЯǄÂּăږ޷͵caŵ׆ɥҡɁǃȱܓ̍ƛĄÈųƭʿե׵ԌͳžҡƺˢƷ܋ठ৅ځէЇêӋѾˍàǽĊӗǺG|þȬkpţȁKƵŪõfŇÓviSáŉáþ¡tř\\\\ƩȏñĉkyōJÅnknVYƅ¾ÅϿŨõ¼Qșàয¦ĵ´đ¶ɱšş¾Ź®Ӂh»ËųWॿۆ҉Ōˣɼ̗GʓɸӝƮ˂ŜȃèŪ²̈ŽθĘǀːξæÆĥĔƈʺIӡˈŭȖؠx½ŲܖʘćƎƟFăą́sǮĤҡƛżѦҀȶ݈Ʈ͎Ĺɰǅ¤ŮǼǰ\\\\ˉƾ΢Ȳy˚ʥIԗʆɍևȒǱōԽЮګǝхǘѳɻ֦Ȼƈ܋ªýΤɶĐ֍ӄથʿɍ̟¨IrÉĂ¡nqxPȄiȐ}ûÂ÷Òµ´xĚĺp|Vζ÷ʖ]˞ƮĞÈb¼Pɇˈȿņǩ`ƟIÇfÒŀXÆW~tƍ°ȋîĕĄĩƊġäĴE^}př ƻôOn\\\\°t®ŰŖ@g¦åðÁ²GzVpäÈLƢɿĆ͡ƮǇQėR±YµãsħeůÉÍ¹ºlżࣷİŗò®İS²mÒ·ļOǯǐUê|\\\\ƕkǈ̌P¬SpɏĨwà`ıH¢ŜŤŐȤÒɵ̎Ëӈ׼ӲśĠʢɶõƸƀΰiǘƞࠎŁ¦ìϛȦշEΧƸŉʪ׹şཤࡔ఺޺̆ͼ̑˖ৃѶњʊTƮЇȲ˔ϿǠȈƪǿĔĞ͂͘Đࢋঔޠٶեͦօņǵʤʪ̝̐ÂҪĲΠɶטŔþǠֲćRȶ֬ñϚĨYŦ࡮șýĵإÔǚǏԺQiđЎ¼ˁ̟ҘȮᆤı༼пט˯ड़ʅɊ[]þӒˍӰıͤчƛ͏࣯ѵௗșᥟ˞ׁǸ˻»Ď઩ǌȁȰࢇÚ๖׿ʛħلĕӢɯîƷ̵̹Ոߥ٢ĕӀ˩ࣞǃѶŖĀŤĝȔ٧öҹ˼÷ǂ̈Ȟᝂԃʦǎ͘PիӒfȼආѴؠͬ࡮ĕΜƑģŃʪfɖő˚ްիˈΠ࠾ܷΜ׸ĿༀËڤՋঋûՃ˿ֈȑ˖ʛԜù঎ƨȀԞ߬ĆáǸͶsᛶ֘͸ƽ˚Ŏͅľ௪͚ׄE׍íŒЇ֝Ɨ৺x͖ýҴ̮Հæ࣪āࢠ˰ݒĮ˂ɣɫʛՄûƜ̖ӾnώɐٙԖبɌ᪂ʿפʋᄚ̽଴ҹ٦՘ԇbҋњ͋ĖҹĠƗŝ͚঺šĊυeÁɚൊԐ૾તłą๚zાȇȧ֭ץү۲гŅဵ࡞УϝʧÓΏਁٓЙƤɹۃƏ˽êʸŦ΁¹ͿƆևaǡƲǭ४ȣࡦdҸħ;ðĄȔୀκʂΚ׎̐ͅռǂ˦౺Ȍ̐DټёÃׅԈǫॴh૫ƌÜςˤÎ˿զ൳˨ӣHԗůࠓ¬ɑֈ٠ٴ੍ܮӮʹૐʦǣ֖̮ӶҳϽ˳¸ԯആǵֈؚȥԸHŢÌзQ̿ɮ๻ʊͳ̞۶ĺހǑϤĮǻŞѯikĶوƼ৔F૸ʓݲ̻आ¢Ўăމ΃ƅ֋¶ǝծҸƊ̧̽̇ͰĽMƸ֌ɨӭҶ͒Ӥ˫ǆұ¨ҩ˸੡Ȉ^ϰΕʂƆ˴┰Ÿ්Ɣऍϗݔ˥ا̌঴ƄϚǒ࠿ζӍÔͨŒфĽ˨௃ʀΊƞϚő͞ĆΨȠѹ°ÊĐ֒ᑜϲ὞˒হE̴Ǆዎк±ΟǃܖĨWĩᆒ̐ञǵȕȗʼŎsǦࡧ̂ႌيï֛Ĳ¾θശѤ୼Ȇႜ˷༙ʍᘪÉШĝࡡΏસTϮǺ᧮§מǧŵċ֪Fˣ԰ǖʔ̟ʘ|ʏ̑फɘцɑʌОƉڧλᣭ׋}ŷഡЍޭÕӻʑЫm࢛ѿӄº٨ʬ੮೤˄Ѳ_࡚ɒউZҰɰڜßÚĪΚq˓»ƢşظĳհǼǒ£͒ɟɓǁˬħ̧џҌǑϗƠ֞Ғ́ƆໞǔᲄƑΏÕuǽૐɣᑔĉаvřĸҞÕϲȨōЊࢨîࢴʭրĎʢǵЖǴ׬Åଢ̳уǽΘmȞƕۧƛܨćňɫЍñ्̖Ł࣐ҫʤƊɀƩԯÛޚҙٴȑȂÐɞǻ࡜мԲֶ࢈Я࡜ܚȈҀT༌УăĀЂĊͩ¸ˆǲҞΰƹٲ ɕ̩ͦÈۢȪࡗwƔϮƔఔúɫʰ੆ƛ⇈ɻcû௫ԙĻŀÇᒌĒ׽̍ĮǊЅöCʇ׉]ŀȗݒĦৄѨሪƍѠɥ߿čãĕൎƝхʙܶżԬÿєɛˣغů↨ɒଐ­ૄȽվЗɷσ঴ɝŀяɲĭϡϋ׮̮{ЌՈȜࢊĒᴴǷࢊȔϒϥࡐǉʤʙެϪȂ΍ҎΟ˜КᚔʅƊļᐜ©ᬐՕؐɳ@ᾕకϵ٫Īܱ̪ҏג¡ƼřŻÙࡏƤ౗ɵ౎ȄʜǗǭĵઊƬLˋɈŝ̜ïƺŪŸē̎ӿʓ½ʬǯ¤ŪԄͥŇśʾˑϙ̭ໟɺ ƶ˅IŖǹᕩإݟěЯʹɱÀ¨ƁїŧEėງՃɍЁ̱ĐًѼࣷmއƕߡҧŗļǺь੣͗ŋɉέǾΉƍlð͡͇ȷûЕ्ܕƱ̷β̟ɚȚӔƃϑεXЛŌŷˬâϣʍǁǧlǱƔΈʒ̯ťȕϋƝ̡ӽ͎سЙȣ܏tו̑șͽƴջρĞ۹ˡɯľŘƅĭЫ͛ӕ੍ڭċȏΊſैɇ̚ЫှÅОάଆܮԄņƨŭ˂ԸhǺȄԞU޼є՘Ԟྀࡲ˄˄ൢϚſĠϞˌǛİͺۦ͠ƬԢąǬÖ࠽ɐࣱŹˁևȪǇƟŇȕŒϳൃރӽīǦ͚ӵÍѦ߀ٍƥ̧ǮळƧԍ͓Ľ଱࠱صʱ֫җťʯےáǄɓםvϓşˇŲ˫UҗʍлĖțĵٕǣǨड़Šދ˴ܩÇƸ¾ࡳǶӝŝŞţ΁­ƅȄIȥġЁƀرūࠏǂЧʉеȲጥԣŉຑ޽˿Щ຅܉ࠃۛᎯ৑IǯԀůߒßۇξd]̢ѴĐ˝ƷжŹӥͳה¶Ӟ̘şˍʛǜZȾ˪ή֎ė͚ìֱּ࠘ʭǉɷ˻ÔΔȹĻͻ̒ɏıɏηʧ΋ۍĔ׽ƋƝ°˅࣓̅೫௻Ƚћշ؋ಗૣɣīر܇षӟ܍ɁϙƮͽPJβωǿÔǨٽ֧ϗ~ŀőŭȃ\"],[\"@@ǵÕࣇè੾Q\"],[\"@@ЅΙ୚˂նɥ׎½ƖˍӑƇ࿏ŵ೽Hෟǹჸା֊ÿźƪЖƭ\"],[\"@@ૺű߃O͵Ƃ\"],[\"@@ળŴŭǐᓘŁवȁ\"],[\"@@ો܂ĨЊų\"],[\"@@٧|ՀŒŨƍ\"],[\"@@mͯߎʖ௸ɳ͉ϟ՝}ݚ˧ౣƣᝋʼѕک̌७ĀྔԐʜÇ፤ņ\"],[\"@@зì˞ÒƚŽ\"],[\"@@ûɻথ`ǴɈࢮT\"],[\"@@ফzіǄ࠼œ˥é\"],[\"@@Խɏ˰ᆲųܛqχǏ\"],[\"@@ԓFÆňҎō\"],[\"@@ࡈ¡ȨơࠓŎೃˋƟļࣃᒌȲ\"],[\"@@ûǽࡱǕٯÜՅÁµ͖ᓚd\"],[\"@@நȩᝣ˫ƖǇਭåƀƂݷ±̅İ੄ȔৈYƂʲࢄĘ\"],[\"@@ޭĴŰࣀUɅď\"],[\"@@ࢿ¤ୈĖˇŹ\"],[\"@@ๆįञȱීŃ৷ĢԻŐ֤ȴ\"],[\"@@ʶǭէÇࣙɄ۶ĐӖÝ\"],[\"@@ٿźᇮ̀ՔɟჁș\"],[\"@@˿Ý૓Ěඔ{\"],[\"@@૾ʿ܁ȑɰəᵥɛᅋ̌ศζ֛UĲüᏘͰՠTؐǣ\"],[\"@@وŅף§õǕႭfȿļጀȢ\"],[\"@@ಛÐഔP·ß\"],[\"@@ƉĦॆvĂāࢽ\"]],\"encodeOffsets\":[[[150236,44794]],[[149717,45566]],[[152166,46406]],[[153281,46738]],[[155651,48023]],[[158526,50496]],[[159664,51510]],[[160159,51874]],[[146188,55700]],[[140471,56423]],[[141252,56415]],[[21746,56591]],[[170650,56156]],[[154205,60436]],[[167563,60010]],[[36676,66747]],[[71702,68099]],[[-184113,70595]],[[51472,70847]],[[165343,70555]],[[173262,71251]],[[61902,71614]],[[54174,73078]],[[183155,72527]],[[141271,73224]],[[-183169,73295]],[[79496,74027]],[[81410,74468]],[[76453,74623]],[[123148,74844]],[[56648,75068]],[[72371,74850]],[[145598,75670]],[[85555,75850]],[[144395,75776]],[[116109,76187]],[[88733,76781]],[[84145,77230]],[[150319,77180]],[[139212,77220]],[[143410,77649]],[[98850,78109]],[[115178,78460]],[[152730,78500]],[[69392,78068]],[[98597,78876]],[[91663,79042]],[[133824,43318]],[[110281,80007]],[[105354,81157]],[[78079,81563]],[[94908,81598]],[[52644,81863]],[[61122,81875]],[[100019,82083]],[[51254,81997]],[[58449,82280]],[[54806,82110]],[[59348,82047]],[[55722,82405]],[[48581,82795]],[[63660,82775]],[[51485,82870]],[[81948,82789]],[[62609,82894]],[[56033,83063]],[[60030,82987]],[[64895,82637]],[[93765,83089]],[[98844,83022]],[[59198,83504]],[[65179,83568]],[[59695,83677]]]},\"properties\":{\"name\":\"Russia\",\"childNum\":73}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@aM¡Ýľƅà{ª½¨ĕÂӣkĹuÕÇ¡PµSÁoEŧòʓēƿÞ¿̓ƛßʵ]ʍǴóĽĵîcȢɊǤÆЌ͊˨Ⱦ¬Ėœΰͪ¬X¶EA\"],\"encodeOffsets\":[[31243,-1092]]},\"properties\":{\"name\":\"Rwanda\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ÔôĈț̙ǪºȊńʋ\"],[\"@@ݶęȨϧ٬T̮իWƟφș¿¯Ȗɍضѥš`Ǧ̵·ǩĽVѶࡱĞĻ¸ÿâãľǍk´QÐ@îløjÐÖNďȗɒ­pǩߴ३ᒤʽèèϤם֏။ᠽ࠽ុΑܵΥӽשř˱ʣƑƕNȻʾ৉͙ŀਙđлǈȑƁu֛̫ˉыࣂҙϚѧژЃ֭ࣞі̑ľϝӬƵ˰®Ǭƅ̦ØװԇऴқЊ́Ě̥ѺîŠį˦࿿ᘲϩĄćÅ˜઎लŷǶżǌŞĮƠĤƒª׶ňlbÀŒäƘbdhdǌĂİ´сѐ̽̈ūŘɎÄɺÎԲžɜÈӲŮZŰİȊ˰£˖¡˼±ĠഄڿෘਙߊսൠŉƦ\"]],\"encodeOffsets\":[[[42996,17117]],[[47649,29795]]]},\"properties\":{\"name\":\"Saudi Arabia\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@²·˦БAÍęÄSĹªܣɺધड़ۃƿƳsWwWuµmi[ЃŃȡőµƯƋIá_ĝh©C[gŻFÇùƧt˟̇޹ŝȕlǉpǟ¬ЗͯఽϣőҷڳƱߝƇıǗŒȑȅϽȝؕǥü̘³ˎٵӄ³ܢłԤБL^ǵ֑EɢʝèԷ৏ઑЁËكҠͯǳōʝбƥŕɥڛFƙɰڳXΑŉةּ½ȦիÝŧɿѥɇݙ͓ȅԟŴÍʤżȎpМډआÀΨ˥ȠUΈĝàĵӾΣdđĦ͸ҐĹЂζ̦Ɓ͜ʐƠɘτD̸ƞƜܮfRṴ@о࠾NBဲᢴ@ᢲAƘPŞǚð¯©ŷ⯀B\"],\"encodeOffsets\":[[37757,22525]]},\"properties\":{\"name\":\"Sudan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Iޓĳď֡Mʁҋݼ͟ƊʃլӅɰګʆ̫ƷƱǥǝȧȟɓɉǟǛǛǗȟȡơơá³Яŀ֋ƣǗƽ˳ʂɁĿͩĞˁʛåŒƝ@ßǰˁŬѣԖǩtȳȁлĨʥƳȡvͻʜ͓϶ɑԪՉ̄ǥ͘®ưࣩږćŊhɂ̇ˢҽżŧ͔̾ȆɈݚʀѦŨլÞ¾ȥتֻΒŊڴWƚɯڜEŖɦвƦŎʞͰǴلҟЂÌ৐઒çԸɡʞ֒F]ǶВKŁԣ´ܡٶӃ´ˍû̗Ǧ\"],\"encodeOffsets\":[[34896,9689]]},\"properties\":{\"name\":\"S. Sudan\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¬̍ǬɃ¸˥ÿȯȈˉǒ®ȶΫBҋࡓÃҁǊŉkŦի˯BʅB܅HƵùǑĉɝ«ʯhć]ƥÙĕgŕb¯S£ƞˊìŽĘũŉgДĪøۄFjƘѸÒŖƈݼˏΜƠųŖέםʸˍíçşࢫBǣˊŲŖƣ̓ՖƫöĉÝùĔ͜Ɩʮ̺ɮφĔânưĜǞ˞ЄٸǊ׆ąδεĦr̆ħʰХ̶υ˜ȯņã\"],\"encodeOffsets\":[[-12575,15165]]},\"properties\":{\"name\":\"Senegal\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ˍKƘĸŶī\"],\"encodeOffsets\":[[106465,1364]]},\"properties\":{\"name\":\"Singapore\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ͳ´ŻːVѺїʋēڧѸصƠZŀͯސµ\"],\"encodeOffsets\":[[-37993,-55363]]},\"properties\":{\"name\":\"S. Geo. and S. Sandw. Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ùMÚĊ`û\"],\"encodeOffsets\":[[-5828,-16381]]},\"properties\":{\"name\":\"Saint Helena\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@őaϧːӺʭ\"],[\"@@ȕÿĥÈȜļĠă\"],[\"@@͞Çɦ̳ӱĘȽŶ§ǢǉVĺΈƵ\"],[\"@@NŧŧôˢƸɭ\"],[\"@@ȂƇ͔X϶χƛÅ܅ƒǅʘ\\\\Ɔŀ\"],[\"@@ȪŧʫºÂî\"],[\"@@ŷ¤þèĊÿ\"],[\"@@ƛ«yƞǐ|Fŭ\"],[\"@@ƩŰƖŨTʗ\"],[\"@@ȼʡ«ƿǶƋǬձԃծµΤĽƖƆ¸\"],[\"@@ŔɝßėșƔ}ƨɋÁíÐɰʢɮɵ\"],[\"@@ǳĀÆŬƌÕ]ƕ\"],[\"@@ƩǺ¦ŒȼűķǙ\"],[\"@@޻дУиɶ¹הΥΌʡǩ\"],[\"@@ƋP¾ĮĎĽ\"],[\"@@ā˷ĐկּӠɇƌɥʚƛ\"]],\"encodeOffsets\":[[[164431,-12081]],[[170121,-11015]],[[165597,-10636]],[[165425,-9856]],[[163585,-9495]],[[164013,-9211]],[[163010,-9342]],[[161903,-8892]],[[161167,-8922]],[[164608,-8513]],[[161550,-8439]],[[160944,-8302]],[[160449,-8113]],[[163717,-8739]],[[159580,-7267]],[[161267,-7506]]]},\"properties\":{\"name\":\"Solomon Is.\",\"childNum\":16}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ΧŔ˲ÈĒ¯[ū\"],[\"@@ÚăIy½śFwh[ĤmĬ̷ƩʋÅt[R¤UG¾ĒĴ^ÞUE{ţĻǯįÝʽȗȃ͝ʱȩ˛ࠓЖL̰ǽŹĒė˜ǉÎĽǺǀKǈǤʍ«qɢŮȝƘǸjĴǌǠĢǔ˦ŊǌʊmȚİ՘HÌer«Œśʐ͵\"]],\"encodeOffsets\":[[[-12826,7615]],[[-11016,9611]]]},\"properties\":{\"name\":\"Sierra Leone\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ȰԞ͡P]N¹^§ErŐÊŀƈĝĊ`øIÐ£byÇʕű˹ىĐƤćક͂ʓƪ Ɩт˴uŰǰt\"],\"encodeOffsets\":[[-91507,14762]]},\"properties\":{\"name\":\"El Salvador\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@įehɼĈɕ\"],\"encodeOffsets\":[[-57617,47963]]},\"properties\":{\"name\":\"St. Pierre and Miquelon\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŝ¯©ƊȀƬÀƉ÷Ļ\"],[\"@@ýìĄRŋ\"]],\"encodeOffsets\":[[[6820,124]],[[7602,1606]]]},\"properties\":{\"name\":\"São Tomé and Principe\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@tƱ­ăĿƣ_ŧcĳO³»ĕũɃőıAMWQBqèŻR¥ ¨U¤uGÅQ×Pć¡·U¡̃ȏĪmuĕsyoQÄm®á¶¿ ±K¿O÷ùϳČȅĂбۈėѲ˿b΁תǪӈÑŸǦƜ͌|ĸƨğŞľǴȌώؠě˴ƻWǌɘþۄFټƱuʱͱ֓ňځˈΥ\"],\"encodeOffsets\":[[-55331,3717]]},\"properties\":{\"name\":\"Suriname\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@]œƃÿƿŷįWƍ̩É˅Ƕ߱sſș͏ů˙Ü۫ȇÉǳ߱cԫȤɿ͌òǲƶȰԼ ˞ƪÚǊ֠Ɉˈģʘǖ˨ȍcƗʨoʲǢьÏǰĔҺM͌ǝϠŅÆQ\"],\"encodeOffsets\":[[23080,50251]]},\"properties\":{\"name\":\"Slovakia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@õręVǷŷйǭaJàĿoĹ̿ŇÞÕÏãPZćuŋTſ¤ƉkťĀ·âmLiyãíµqЭ«ʧöɢÜYòƗĤÁǂùKkZOnN~¾¦ÌfrEhǯkĘƎĈØ\\\\j¶܌ĵ̀ǦࣄÒŖƼǆKȜ̛\"],\"encodeOffsets\":[[16913,47616]]},\"properties\":{\"name\":\"Slovenia\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@će˚Ԧٶзࢯ\"],[\"@@əŇĀʷٗБŞƎűЊͶɰ̨îƨã\"],[\"@@Ïµ¤Įǒeƥ\"],[\"@@ࢭÍכłūɝׁǃūǕ´Ǝǉλˇٍ͎̃ԃᅿ׃ʙƳŴčʗęɛĈŌʋǟćΣLȈɳɑ̭úƵɥÇůĸܿΆƑʜ®ݮӁİɥࡋͯԄɱʇવϣٛc׬ťɫ·@޷ʫړѭӭ࢛wŇ̑±ƽŧłʯƗŋઋ^ô˲хҖˤuŧƪǜXtƒϱʐࠅ৲eȆƵzďԶ¤øǊêŃƠbž̨įʬڰўḔʙҪΌ¶Ƥʖ؋̴Ůӄʭࡌƨʰ԰ͺΊÚَ»ƲƆÁʔΫİۤ؂Â۠߆ƪ»Ƹ࠘ӆɵ̸րЀҔǬӼś͘ӸඖǗ͆вșƠь`ୀџܚŹڈ΍ƹгɼýʙ̈ˋʍҷϤϓ\"]],\"encodeOffsets\":[[[16926,57642]],[[19535,59224]],[[19617,59313]],[[24736,67385]]]},\"properties\":{\"name\":\"Sweden\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ħ»eɛÄȧNˍóz}MwţkǳZŏǹGɯ^Ǐ´ǯłĿǔ¯ļÛNYlR̎ʈζĴŚņô ZGьȇvX\"],\"encodeOffsets\":[[32715,-26580]]},\"properties\":{\"name\":\"Swaziland\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@DýƅƪÔ¦îő\"],\"encodeOffsets\":[[56874,-4805]]},\"properties\":{\"name\":\"Seychelles\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ӏї̹éĵŋ¶رƅܷǩ˷ᇳࢳ࿥ࢱϑÐӫ̈łǸМƔź£Ɩ͈òñðʴʞãǰƥÊ°Ƅ΃yÕڔśŶÚɸ®ÊØMƈßvDǌƜzƘɖÀJ|ēǎR¤¨ǐÜ~rĲSƒ±æ¥̶SôǒÆƾ¨ʈĜӘǫŠDǜ]ȾBŨlƺˤòׄɮ঴¸Ƣ¤ĜêR_jIķ\"],\"encodeOffsets\":[[43376,38000]]},\"properties\":{\"name\":\"Syria\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǂ·ǇFþ\"],\"encodeOffsets\":[[-74068,22376]]},\"properties\":{\"name\":\"Turks and Caicos Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@QṳܭeƝƛC̷ɗσʏƟƂ͛ε̥ĺЁͷҏĒĥΤcĶӽĞßV·˦ȟ¿Χ̭Þ؇̓ó̓އݑαɹ୕ǁÏđȈƱқԡޑ½ܩεȩ˄ƕƵΝƧБbÎɜη٨ڃլ̗Шɢʎஊx͇̌ťʖđϸªؚȟւ͕Ѩǻ²ƱBōư˛ϒčΰµȸޜଶच঄ɖᠶȔΐ͘hȆΥӌǟఊࡊϖ←ႱỨལ\"],\"encodeOffsets\":[[24556,19965]]},\"properties\":{\"name\":\"Chad\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@řԛӈ͝²ՓǸʽrႫÿIȺוŽßλŃϙ̨ǯͰĞцœǊƾڸˁͼĮüҢʗÄĠŠßĮլϻ͎Ą̈ßĂҾƉ΄\"],\"encodeOffsets\":[[923,11258]]},\"properties\":{\"name\":\"Togo\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĥŁt͠ĨåuƷ\"],[\"@@ĝƑmŜŌv\"],[\"@@ĿOqƞŲƍ\"],[\"@@O¹tWƬŠǞǩĹΟĬǟזIT½oƅö̍ȩ҇FòĵNťȡҹ Ų½ÀfȸȂŢĀRRļÌôŨ´eÔòôÈ MǢƁĚ½ĀgÄō_hL̸ǤĠ¶ì¨ÂhbvFà^ĸIŢƎÅĚk¨pĊđŮȑńơĘįʾȥÜƉ³ȉ_ǉNȣÎƳȒʱĐÉƴ±Ú¥MƃȊŉfCÏoćĿț@ŇïZğoõsɅk»­·ã¯ĉ£»k[S±«­ʛǜೡăʑǏ̧ҩǭsƎݝɌȳe˱ǔ͏˷и­ÿףҀ޿\\\\Äٺ̟Ŗ̯éȵȭČǕŁ̗rѧە།öࢯӦpżחŞƉäĮȫɠ࢓ę®·ɖąTwȊăƧɚΉԂ˝ЖJԔԻȑΕǏĹňωɩōŒÒІƯFĳǸ΅øëŐţȭΡκrȖƕĨŘȧbăȸƻČuƜəƠíǒĽôƃƓĭ¢ÁҖϰ஠°ЄζώΦ֨ǭ٤ɿМ\\\\ּӉզ̱ԮUȒ̮ƐֶȎŌÐƞ«Æƥñȅժ؛ے×вɑȒ̺ÐÒܺǖʐ̚»ҜìƄ˜Ί¨wǴɘƜĊÄQ¤Ĵ¿\"]],\"encodeOffsets\":[[[100771,8092]],[[102473,9817]],[[104886,12277]],[[102526,20805]]]},\"properties\":{\"name\":\"Thailand\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĕÃÏÔMh^@Î_ĈW\"],[\"@@̟ɝՏȔлƳF}åÇ·ly§ù¬ʩৢÀʢǉ֞Ǭk\\\\yWCȔ± ũɜØÀ§ê«ΈƮЀqłZĐ¨~êdƊWJ©{ƗǖɕğĩĘȹȌÉɄĶ҆ǗèܟȌǹȑŹ_TċÒÑʻr÷E±ΗćăPuløÌb[ÁX©`ĽtćQƟ­˅šȧȧ࠯˧œŰćʂŲڂ}pÃAćsÏIb®ɄÝŘѧĬˋ̅ǟŵ]²ķGč¿çÍœnƏǏ_őÑÇkó~ĝ]é»µ¥Qí¨ȁƔ£RuK}Ua[]Y·T­Sʁķó£]©oo£RŧÓġnĻüÙĞÔ`ȰҊ،əɘϢοÊŘʑîÌȾʘƀشíƨʪȖÎÁŤƖ˻Þը~Ë̴Ŵǚ̚ġׂ͆̌ʿ͉˳ʀƷʲ\"]],\"encodeOffsets\":[[[72361,40812]],[[72662,41205]]]},\"properties\":{\"name\":\"Tajikistan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@¥GקȌǭˉɃIǵQřŕ½ÕƯщŃ¯ñ˝Ǉˑŗ؛ƓƗĥțÝĹ¹ƛā͉íǿǬϿ¬ɵǔçSSȼċĠºǶýϞٹKɹ˚ԝʒŹɐСƢүcށʶƇȲمƙƙݟ{ЙɯǙʵڇŃചƏɔ̱ŎƯÛầ̰½ŋĸ^Ȯнà¢ǵșɾÏ̂Ǯ՞ǜǵЄKɈƛѐµŢ̬fǖԝϖʓԊ՝oǍıŽɝѕ̙ӤӀ̰ࣄǀ؞̵Ӥ֙Ҙt࢔·ĎòŻю˜ɢѰÈǸʢϐǁ˓ˢ˚ĦĮٞϣՌĥȧɒƛĿ\\\\̟̬ƭڎɈò΀ƵӤय઀ۅҞƷબا̞LՔɏãǛ]ƽAşXġ\"],\"encodeOffsets\":[[68119,38245]]},\"properties\":{\"name\":\"Turkmenistan\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@΄ŶƋȧȷò\"],[\"@@ěʤŞp¤ŮǱU]ĢɌʜǠÔਨĮ̆Ŧˤĝ͋ʓ౏һ˷ȣ\"],[\"@@ÇƟÓŜŔ\"]],\"encodeOffsets\":[[[127014,-9565]],[[128070,-9740]],[[128662,-8335]]]},\"properties\":{\"name\":\"Timor-Leste\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@êßőǥƀǜ¿\"],[\"@@īAĎÚ^×\"]],\"encodeOffsets\":[[[-179365,-21677]],[[-178128,-19086]]]},\"properties\":{\"name\":\"Tonga\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ݥÅ΀ǘlˮơĬ؞ĺĭƝl҇\"],\"encodeOffsets\":[[-62476,10378]]},\"properties\":{\"name\":\"Trinidad and Tobago\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ȡbpŴɮÅ»ď\"],[\"@@ŻÑŎŜnÉ\"],[\"@@ƇȅĐ֯ſǟŅŽ́ƃʛ२ÁȼĭϜׯЄȃјȡİ˽Ҟiؚ̦պȶĘèĴÛϜ״šŶͦ˄qĔतͺŴOƣĴ˒£ĆΣĴ¥բ˺ÔǕձחĪʍΎɅĮͥίҿӓͯÍȉɌ˟΄TƥȢĦʤˉ¯¹ʪÉCuǅOËKɇäıD©}¹ŭËǃõƍëƭû¯¹ƍûŏǋǛ§\"]],\"encodeOffsets\":[[[11221,34532]],[[11549,35588]],[[10522,32446]]]},\"properties\":{\"name\":\"Tunisia\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʩ@ɀĐªď\"],[\"@@N£ʂ͙ŷȥĆ̗ԼïД˱¤«ȕĲṶ̈̄̅ȾғvϙŶ©ȧΩ͈ǓaɳȄŧ{ůp½PÁFǡıÛ¡JÎNŴa hďXƩùƇHӫŠŽƋ SėĥƯķągĸ iL^Qěéơ£঳·ɉõιƷˣñƹŧkȽAǛ^şCӗǬʇěƽ§ǑÅóğHŝRķEã¦²ƑıT}qÛ§ǏQ£Ċȉɕ¿yƗũÅ¡ĕuCƇà×Nçͦ͆̊ŝɄտ˯׃ȰࡑՓݳūΕŰ̗֛̐ɠשÄǕԃٍħϹƘɇ֑͠ĆʇƫÆİՋҪĴȦǔࠕ©ŲȠϻдƀÊRɈ߉ʢŴ̪ȞʱЂĮȥ~ťȒɂƬǗØżƟƪǼɎډçWĐäΞҴΈҠ²ǆŕɆRĶ¬ĭĎŤĬowĵ࢜jȁŦƞĆݠŊءƬʄᄚħǠǲ܊Έࣚʎ଴½ɌĚŰŗƦƋɖāв¢̖΁̺öʎƯ૆ɓ࢜ƶ۶ũیʦ˦ƌĄĀǈà}QĒÂҒ±ĎĴpXbPÚNÔM]ÑîsŴĩüng}mXy¬Ȓ\"],[\"@@ҐnƸΑܠ˗čȅڅÔ֡ěȭʉУǃӍΟ¨ȪҐʾֽ_ÉĮʘȒAʆʚƎǘɕĬîŶtÐ~¨dɨvêƶd¨b¨[ưŏ\"]],\"encodeOffsets\":[[[26594,41100]],[[44476,42144]],[[28135,42954]]]},\"properties\":{\"name\":\"Turkey\",\"childNum\":3}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ĝʮʌǏ˟\"],[\"@@ÜǳûÇʣʀńϚǀϝ\"],[\"@@īҍđÚvψǈl\"],[\"@@Ḯ႗ϝപ৏ΕୃÎɗ֠׉ɏгCɧŢsZǕŗεŮнǄȿìڵبϵЋ̙ƟûۡɉзȷӑĴǏʉƷāƙͥŦ֡ŝī_¾ýÒƝêŁDŻŉÉgũfȡRȉGmĬÎĭ¬ƓɖºʎćҪȽђ˙Ȥęƥ߿ɚƏîہɦqĦhËjŧMįĔěŶć ɱIĝ¼ÛÞ½öğʀ˃զÿɎčƔęĺŧĦƍĤõÚĳȈ¥äŢuŮVºĘǄV¬YÔ©ŶǙѢeìDÂà˶A ˆKȔŰϠպ͈͠jƄ}ŎÑPėõd¹rmfQ¨¤ň£¬dzüǀhvFÂp¸T OÈvÖlĺWĊÞKͼ§Ė©¾ß|ĽƆÞN¢bTHŸXÎÊZ^GlG౶@ಀ@\"]],\"encodeOffsets\":[[[40665,-8168]],[[40445,-6322]],[[40822,-5023]],[[34717,-1026]]]},\"properties\":{\"name\":\"Tanzania\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@BµF«WίͩĕŔȽ«ŠతǼʹRː઺਎ÛȎϓƼİ͢ûǎŸ̰Ëè˂ʜͪĝɂŀ˴ʁǘƾ֌ƤаĿâ´ƢƢȠȢƀ˥®gk³ĒãłHǋP¯ǍϪַm¿æ̗ZǙAţƫЋˇǝÑƥȿəǽγধ౿@౷@iF]JÉYÍÕeáNSG\"],\"encodeOffsets\":[[31243,-1092]]},\"properties\":{\"name\":\"Uganda\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ś£ӯĒ¯Įцƛ\"],[\"@@֝aؽ̡ȡ¤؛śڿѥɠƤ¥Ɗ͉ɁƢЩκ͓״Řͼ¹Ƴ˟ѭ¹ͯþ͓ʝԯåһ˫ϫƔĖҜ࢟ʲঀҘÏŲƏȑİ؍ûթǖƪŰϟľڲáǼŠ҃vʇӐĨҿ˹^ĦƇůԙÛӝֻӹŧÞϱřĢƏ¤Ʊaˡħĥj]ol˱ªő°ėĔ¬^Ǆh^°mþÐÐĘ¶¾¸TîĢĊÒrÞ¤¿Ħ[ÖEÀǀÌE^eHŁhEȠÞ͈ēTǔd²ǧĬVðPČq¸ʱŖĭˠˏǔSЌםƶéEړˬˏę˟@­`ǧýkƩ}ɻȥɇsȁȋkСƽͳǨߙÄȁKǥĂÁFəŝěƌƽrˡɰķCVƎŸİĀǀŔƄ^ʸRšø³̰¶Êˤʘ֦ДɖĲĸHðćǊČÂγπ§ǸþĮîGÖ[ðxLŰÖźĢèþத²ࠨŷƮaĸNÌQżŽͦqTāƆĪ֢}Êg¤ïcKĲĜàl¨Tx¢vDȴȵۄĄʐǡƶæiªSÄ¼yÄ¨þìŀôæú¶ŔĀȦHņ°ȒFǄM̠§ˀɎદ֎ӃɵďþΣ܌©ȼƇɼ֥ѴцǗڬǞԾЭǲŎֈȑɎԘʅʦJz˙Ρȱˊƽǯ[ŭǻǆ£ĺɯƭ͍݇ѿȵŻѥ\"]],\"encodeOffsets\":[[[32781,47313]],[[39132,48222]]]},\"properties\":{\"name\":\"Ukraine\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@½ɤĄĴĤ¾öJÌ´Õ˴mxfÈĸʎΦ˹Ά͝gŻ\\\\óŌTȸǲrNs͒͹è²ϖǥ̵̰Ϫǝƈ̃А˫õëăęíéó·{g¿@ПƊñ£«Ï¿Ɨǩțŋ͏ʑ؝ə٫ƂӛĿޝϖօqӏӄؘʀʎŘǆĂàŴHÖÂYÈjÊGÄyÀlªŀĔìǆjàŠȄrücƖÚà\"],\"encodeOffsets\":[[-59198,-31599]]},\"properties\":{\"name\":\"Uruguay\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ʥ¸ƕ֮ȔɞWɘՐɿͨЁٷљ\"],[\"@@Ľ_ÝžƜOō\"],[\"@@ǬhʎǍΙŷÑǒǽŮĦðĊđ\"],[\"@@т»ŭĉα´ÞĒ\"],[\"@@ƐűЋXƍɢʼĮƎȵ\"],[\"@@ȣmƱŎǮƴȒGiʋ\"],[\"@@ýMǨ¤ĩ\"],[\"@@Ǖƿ˖ͤĿǣ\"],[\"@@ș֊`͂Ǻࢋ\"],[\"@@b×ɡժɀӑ\"],[\"@@ǳĠŌèş\"],[\"@@ǫU͊ČƝõ\"],[\"@@ıkƂĘë\"],[\"@@¨ÕůJĽŮȆá\"],[\"@@ǩĄưZzĝ\"],[\"@@˪©ɓ»ÕĦ\"],[\"@@ũeź¶Ьˏãǫ\"],[\"@@įŵŦǼuÅ\"],[\"@@ÏÃ֬Şઓ΁ۑÓŖǮʲņߖÔ̐Ɗȣƕ\"],[\"@@ɉlǈĢÂō\"],[\"@@ˍcǶĊĘå\"],[\"@@ĕmĪƺSƋ\"],[\"@@ȋĦƌĦĽ\"],[\"@@ĭpŌþÿ\"],[\"@@Ǆȝ̝ʪĨƆð÷ŻÅľÓ\"],[\"@@úśüķ٦ŕŨåˤúĴXΠ»˰ŏðƃÈ@˾tԲȳ̀ŖǠNÍૼœࣞʴՔȯҊǳ҈ǱࡪΓӨȫǎãǮ̙ȌˊHŪΗ̦ŬĹĻƫ֢ʣ̲ƝÈɛ̆ౙ©ą̗܋Ӄ̽ɱϞʧɂ@ϸǶϼǶЖŨپĲࣘ͐ɐƈÅÔöę̢Ɯ¼Ƃ´ŀɘNܦEٶ@ՒԪ̰ȎΘʮͼǖȠ|ĊJᥬFǄʄϴgӌՔʐڬٞيǊĨǷלŔήɛJଗ̴ĽÈίȰGŚ˻ǡŷկĉǽǉāĲʣJçȽɻæ¦Țϵӫʛ÷ðÇđ{ĨŽȅƁêǵõҭבăȳǺǝηʕʶđˀЅΦÎȩɞŎYŌį|ʅשţưϽȋhɌĹÃĳĪŏΓ୵ÿࢿ҅Ĭʮĉǎ˭˱͕ʖŇěԣ^Ǣؕ࠭Ƈ©¶ǐՃ̂Đʦ̊ǎ˝ŷƽǅǐҡʮ˅ĉƽŰƑݩੱȸˆҲǇdO͠ǉçǵƀBƐȺtǑŐŅ£ƢŦƉČǎŊčĠêļɸ¼ŅŌĎïØˋə­æ÷ƭųŦţŋ½ƐבʃȲR×˞ϙѵʬmćģŸșǞКȕʏYȻȐJڂϵãǽůNԱОҾзȴćǷř|«ĥʭȚЊϟį»ȗȘԳĜӠſƺɵШ`Ϻࣿ΍۸ƹƢ̣˟ƔCŏķ×˧čƥǶPɫրZ[ɻȖɨĂį]ǑͱʗˇóŖƏďʡĆѶɏɟɻʓƐĂŉȘëʎ¤Ă­ßýܙȫĭņǡ̷ȯƫ́sȖ¹ɏͣLλǋ̑Еƈ¥ɧѻ̇ŅnOţΟƕɫXƈ÷ėœȇƈĞțΙ˱ ùǋȽìMǥƭþõŹÃ×ͭɢࡑ؎વ½ǵň̷ŹɶF̄ñƫJȞűƮǿזೕÛࠋ̝ԓՁûsƠǐơĔɁ϶̍ŶȱюŊǔǯœvΆȕĥǕǰɯτʸ̨ɧĎÄƽōÉčŘǈ࢔ࢗ࢐̋ƬɟÕƁ޻ȑāò@ÚĊëİ˓ȸÔƒŵĵחȜ˦NőòߍŹǺüWŜơġǗǏxČƣŇ͑Ǻ¼ȃ͸Ľ˝٧¤ΓÏɣƯҋǠǥùåřȦģπŦÖ±ųğƸēȘŤ ȏ̯ǙפΕŝƻãÄşčÇǴ׹̀ĘǛƅșƕǆ̹ƏҏƂŞ|ćȸɟQ͇ʀȯŗ¨ęƩޏȆյ­]Ɋ£ʓܳʯȞƐɃAǞɿŔ˧͕Ϳ߯ЍȊŦοǇĪȀɁɉĭćäÅȏˉ§`éĚĝ̝ůŤƕų˻ˡňÚƛǪ¥ÍɩĴЙʐѱȕ÷ปӚ̉Ԣ£ЮړټϩܖֻԂۡẴĳɷ҉ɵǽ߉͚ͥʔЋࠀঙڰʡˊ๟XEϙᛟIẗসĢǨ፹Ƴ˵٘ԧΪˣlăɰՙĂϱʴܿ¬ƏĞ[ҘǕòǺ͑ɂӿռÐѪӳ̚ĕˮ®Ɍ̀ˏ˃МÒ ڐ¤ܱöŅˋΉȔÇÇúǪڗװōܲѱԂʈࣶϽଔ݈͠Ȃཔ»դ٨ÅȵİԛRz˚Ċơ´ȒȉǠɨĎɥÔwåȥעʉˆ¡΀ؠǱࡄāǐÂĺɋĹţ°ˉ΁ǼlŧOfâѠφţʳĈˍǅÙ»ĲǗǓ˜ÿɖ¡ΎƈȐɳŰĞŒɕƠƢaƐ£ĞĽb¸ÇŞ୎@෤@Ϊ@Ψ@ܒ@੼@。@。@　@੼@ܒ@Ϊ@ܒ@ȤAN͆ʨÅM¶ɋ\"],[\"@@Á¹ÁĜń¡\"],[\"@@ƯnÔüƳŜѲÛȡƩ\"],[\"@@ѭ_ҼȔǳ\"],[\"@@Šŋёōɚ͎Ęĳ\"],[\"@@ȉØļ¨ĎĿ\"],[\"@@ƑjΚǚɇȃ\"],[\"@@Ѿ³ڿƁÚτZ\"],[\"@@ŽBŲĬƀ·ųµ\"],[\"@@ԱYࠪǎŇĎɢĔļ«Ùțҳč\"],[\"@@ˏ̼ú«ŕ\"],[\"@@ԾƉсċυƼˊÚ\"],[\"@@िћͲͪʺ´þǼϮPŗƍ\"],[\"@@ȲĈŢÅ˃ǧǆ«зȃޯŷըȐĶƠǨ«ÊÊ̩ČÌň̪Ä¶ė\"],[\"@@ǹa}Ĭǎǚęů{\"],[\"@@VŰŤóŹ»\"],[\"@@ŕìƜ¬ŗ\"],[\"@@ĆƑʞūɱÈ௹ˇÁǂ΄ʤ֠Ť˦Ë\"],[\"@@đāÔƚ~×\"],[\"@@TǇəŚvȨȐƹ\"],[\"@@̕ǥ°ǚʈŴ^ŧ\"],[\"@@ȴCóǩ؉Զ˨ùȢˍ\"],[\"@@[ßƣØǀH\"],[\"@@ŎÆÆǏʵÒɔ÷\"],[\"@@́ɱñȒδ \"],[\"@@ƟRŦĂzē\"],[\"@@ǫʁɓǞ˃ȱëɂȆΒ̘ľɬȑfȩ\"],[\"@@̨gĚȕоǏΦΏ˵ĨĵķǶTǰɑȘ_õеࢭԪƈÌÙǌիǐςŖŉĬ̷Ñǲƴǌ\"],[\"@@ɉĀŐĦɮųƏ\"],[\"@@iƓŻ[̹ŲɾΜˀɇŕ\"],[\"@@ħ²ǰćó\"],[\"@@ʀƃ£Ļø\"],[\"@@ǛĘȒɲǿƭ¥\"],[\"@@ɂǍǯѯȫ§Ę͊ʏ͎ȘĀźñ\"],[\"@@̶ÕɅÙ³ʙǬƞ˫˛еҶԦK\"],[\"@@̯ÓöŐ̈́ĉy\"],[\"@@̌Տ½уʣʬĈƈϓŤŌǤɉȈ̛ȫUɬ̾ɈДƷ\"],[\"@@ЀD­ĹɢŃǑĹѹɘŹԁĳϫƣøû͓ƵȠǲϙźăȇ˫ѴҶǤά̃ŹҶ̔ōɪÄ´ƪʼÙ¡Õ\"],[\"@@İɅɢŐ͢ğ_Ǖ̱¡̠¢ȱՏƼŅȷǿvփѴȺȺƬķ¦Č̪ \"],[\"@@φcΖџЁΔ͌׉ԕʹ|τνܼȲǋ\"],[\"@@ϊ¥āōǗÖįʏzˣƙϟĀ;ǮǢeÍŚΦ³\"],[\"@@ų´Ȭà÷œ\"],[\"@@ǱüΔńǡǿ\"],[\"@@ȿWǊĊ¶ñ\"],[\"@@ŌӲΐƊs׹ѧ\"],[\"@@;ÍŚͳҳűࠫȴʟǖԌV̢ƒ˺B\"],[\"@@ʖѡřëŔʸ\"],[\"@@ŇɭēĸȜŶ\"],[\"@@іƃͻ|ΉȪʰġ\"],[\"@@ή¯آĂضʳ۴¿ćԓʽǷţƔࡻ˔ڃÿī̐ʄ¿\"],[\"@@@݁@௯@݃@௯@݃@௯@݃@ӫȪȦÖæЖĭʠŪψVžH@Áµě¡õˈřҨ˭،͓ÔʻèYƊîŶ¬˂ĠȠDĦʶǂjŀԴľˮ^ˈƑĜʑɢõʆǅÂÍĤ÷֠̅ɬɽɰɱϜϗĜýŢŋÎÝ¡­·ÅƴŀkÕąȨÃǝ̒ۖʗƠÂĝˆ[ìƃǙޥ̣ɋɱǓ̌ʤƈ͇դĂņفǱǗ˻ơÄ©ż̨΀ʘ ˱ʙƮգՖաĮƵЂ҂ÛΙɢ˺̩ ƍãʷȒżϒ˧ʇӉȄӳߺśǻΌߧЙƔ˛WũΠǼÜǅqŏƦÛʃٙɨÏƉϐÃŊǇɒ_Ɛűҟǫ޽˴ࠃӬ੏̤ɔƞBɌȎ˽ÆǬȞ`ϋƪࠧʩࠩǊ@Ǹɗŭੳń৛åŔ׹ƺǮˬҵʏճĈȊƢݩàƮèȷðƀ˄ºങȇĩàɈɂӹƅCǥǱwʦŵ͑ƻѪîž÷ϻзۯTŅĜǟ˯ĭŲñƳǡ ǉǽ΅G˝ˁȽ¨үģǱÜÆĸРŊ̔Ɍ͹Ĺ͹ŎϨвϖޒʨମŭࠓʜԶˢҗȃՕl࠙ˑߓ׷П~̬ʡҩŽĲŏҹ¿ѳЭٔǑgǣ܍ϙŧٕť٩ϕփǩǋ̋ງӗřĻɶįȓőñĺǕǓ؝ƩŗƹģǺؓʭݏƓ½ŢȰ~˅ÚҳЕʿñȳǎȿǅɉĢWůǡÝ´ʂ̺Ø৬װМĪˈwęęǞŏĆĮΒÅȻǜȦʶ୒ӌȲó^ȶ˸ɒЌȖ͒kȟƢð̺ΖŤʛºƘҤ˄ƔͰ˩ɍࢣɛʿȤàŲ̂m˻ĦɋƇŋj҃Ƌ؁ьȿùωȚݑɃĩŉڅsΞŴäˆ˱ŸϊӽאϬΌ؇ΩĪɻटǁϳĄݑԔ˝Ҥ̎Фķ­ƭ̼ƤɨƧʸƖСĆː¤ƍÈȵĕवÌȸƮΉ¶LĘʕơʡȞfǜʵT_Ė̠ɧĜϺÈāȘњ̼ξpƚǴǟïMʜΒĦqƺϺ˜ĹķğȞøǼ¹֔Ȃ˶ɚʸÛܾĘ˒ɖǫζхƶҸŨÜƪɱƜՇğࢡχͫɸºȓӍƒ੟œএň˳ŪÆǖљȘ٬ňਹŘֹȢහФ٦Yũǀ૆ɨ۔[ɋBŝ̡˴ō๘ДȪΞýïŪڝÞՃͦƴŤ٪ЧଠŇǊх¶҅ıϫŰŘːຽèӿшᖉن΀ÆƞϮঔEনżဤજǉƛࣞŤ݊ʌɂʿ¨Ȁάx׍ĢʹŶ̮üÂŉૼĤ௄Ң@ĭݠƝӉǉƤïڴɎࠆʡ߲Ōذ§ɐÑƓǃՊ»Ƨĝᖨ¤ೂʃཐµՀŵဖĞіéદ͉;E@݃\"]],\"encodeOffsets\":[[[-159315,19469]],[[-160613,21272]],[[-160242,21435]],[[-160986,21725]],[[-161586,21972]],[[-163197,22459]],[[-82989,25311]],[[-82311,25746]],[[-99502,26788]],[[-82111,27934]],[[-93996,30209]],[[-86945,30355]],[[-91365,30807]],[[-121188,34187]],[[-122924,34733]],[[-122759,34898]],[[-77357,36086]],[[-75912,40634]],[[-74250,41970]],[[-71657,42256]],[[-72202,42370]],[[-72951,42488]],[[-69823,45397]],[[-125331,48533]],[[-125514,49313]],[[-97078,50179]],[[-180517,53036]],[[-182148,52890]],[[-181399,52958]],[[-180831,53112]],[[184042,53152]],[[181674,53128]],[[-177718,53388]],[[-176603,53527]],[[-178869,53284]],[[177893,53617]],[[176960,54286]],[[-171995,54626]],[[-170614,55195]],[[-169821,55369]],[[-169534,55436]],[[-166193,56164]],[[-167399,56301]],[[-163343,56476]],[[-134491,56402]],[[-163709,56452]],[[-136050,56212]],[[-164177,56666]],[[-164541,56643]],[[-136504,56877]],[[-159299,57161]],[[-134122,56821]],[[-136771,57692]],[[-135966,57598]],[[-135283,57456]],[[-157909,57872]],[[-173829,57995]],[[-135932,57883]],[[-137205,58210]],[[-136567,58372]],[[-156679,58496]],[[-138209,58728]],[[-156567,59212]],[[-138987,59643]],[[-137912,59558]],[[-156074,59761]],[[-156145,59889]],[[-164781,59983]],[[-151574,61507]],[[-151281,61249]],[[-170122,61833]],[[-149907,61901]],[[-151202,61902]],[[-176888,61909]],[[-175578,65168]],[[-144386,70425]]]},\"properties\":{\"name\":\"United States\",\"childNum\":76}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@§QûD«TæBbëĄÂfE´ÍŰmſ\"],[\"@@d´fĂèhiGo࢟ӹҬƝńƧɀÓǂ@Ā{`ZZǦƺt¸Ƥó´s]ÆđjĭäOĀmÂn¤[b¯LývWŴ|ʜƣЊѹʫǝªYųɏXρʋ͛Ŕˁ_ʱɿƸ͊˴̋ˀׁ̙ͅĢųǙÌ̳է}˼ÝƕÂţȕÍƧʩسîʗſËȽʒí ŗπÉϡɚɗ҉؋_ȯÓMx«xýI÷ÙQĹ£ĽtŃČȭʱoWĢBŠ^ƾäǜՓɐ̝KફبҝƸ੿ۆӣरͿƶɇñڍ̫Ʈ[̠ŀɑƜȨՋĦٝϤĥĭ˙˔ˡϏǂǷʡѯÇ˛ɡżэčñ࢓¸AᶢᓢҼᏠউࠜݷৼŘਢÝϴƎӺͻʴεʠĨùࠡЪUǰۅਐdƪƗÅȁȴŹʀXɈӎҤຘۖ\"]],\"encodeOffsets\":[[[72916,40850]],[[72650,43263]]]},\"properties\":{\"name\":\"Uzbekistan\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ÿŊňÒǛ\"],\"encodeOffsets\":[[-62642,13474]]},\"properties\":{\"name\":\"St. Vin. and Gren.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Ñäźļ®ķŕç\"],[\"@@ķǦĈíÅ\"],[\"@@ËȳСĂǄĖƺíưŊ\"],[\"@@|SwÌǷͯΏɷeғˏ˧ĉɏ¸ʩśŧΥЙַ̎]Ɲǔ͑\\\\ǱŖĴɛϖΥƦ࣭ւùɋӛȋǑ͵ݱΟ̳ΕéEžƃŠ͇ǕʋeѻϦ˫খ΃ͺȫ@ҢԺ̍ϖǋզ~ٚ̎ֈOɀ̓ĠԧŏߣםۤԛŘ͡ē݅Ǜ˴ɝźèٚɳ˺ŋКɗŴʵÅ̠ԄŘמừψ̤ʒЂ՜ǐ՗ʕĸ͉ǌƩõeŘ˱ѥۻв٣͆Ħƀǀ̜ω۞tδਤ΄ŖŮʖWǖ́¡ÿɘìǲǖä̼וڮ¡ήɫĒЅƀǑཤŞͪ̿؈ƿɼz֌̠Ϧџ§þ᎚ĘсǍ҃]Ȓȯ¯ȝǆŨȖΗČČÊ»CƂâG˺˿}ƶƬäڞ҃ȗǥȋү̷E˄ƽцƴՒrŴÉƼȱcµĭ³s}ĝЗȫǣɷĤǷuğ¦±¼W¶nÖC ]h_H}÷³˕ƫΫÕµęnÙ~ÇA½pƝÅßãóġ^ǬțǶȥǲȡ\"]],\"encodeOffsets\":[[[-62461,9081]],[[-62280,9358]],[[-65381,11399]],[[-62199,5327]]]},\"properties\":{\"name\":\"Venezuela\",\"childNum\":4}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@Ƽʷ£ļþ\"],\"encodeOffsets\":[[-66320,18222]]},\"properties\":{\"name\":\"U.S. Virgin Is.\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@̥ƙ˼Ǹj\"],[\"@@ĹmŸŊ}ě\"],[\"@@ǗĽÔƨń©\"],[\"@@ҿȉ±ȕǃęЙªÐɟǟǩnœӵϟ̥ࠇɢϵԢұgȑĝx௴ணǒRڔߟМ౫ӝŸ˗j̗ğŶĭėðɉĉrOׅƅŏ«ɋݡσÿƩث˓ɉɚ·ɕȃŖķÏŖi`űʗF˒Ƴǅɍϫ̦άэãſչψˠͿTǓ֗ʭ͕ϵ́łŲÝ²vڮȪ͞ʁǨśȥȮΤļǒƖAǮɨÇúĚ̌ĈŁʼÍEȲʯɎI˺žļͤÑ^ɘʊ~њ˚ƲĨĖ֔Ŋ΂ɯׂǀӠIĨV®iqÄÚÞ¾ÒhÆ°µæĕØķĂ·¸ĩƸpƠê~HüϹʺĲeV©éġƄYƜO²oÞțɜɛǖ˃˔ēȸÏĀ¹Ü˿Ʉwú¶ĶD੉ռHtĄ°ÀWæêfzFǔNʊ×PžŖ¶è\\\\ÊĨĪBÄòűFkh_ÂIĹĕVqbÒ®t¨üȟƤŻþÿϹȽƟêɅ¼ęªȁʼÂĊΒĕ®{ÔcQwõÝCáȔϣЌ¤¼ªƜȮÄіʫ̂˔ƔƳņǌ˒ȭǜɔȔąˆĲƬ˄ΊǬӊΡʰ¢Ōĥɚ¨ȨŉȕɷĨѭʶ¯͊˅΄Ǵū\"]],\"encodeOffsets\":[[[106562,10641]],[[110102,21429]],[[110186,21727]],[[110564,22025]]]},\"properties\":{\"name\":\"Vietnam\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ŧéŉŮ~ŌȴǏ\"],[\"@@̇Ì|ȒņZǆʷ\"],[\"@@ŞŹ»đ̭ôĪƄƢT\"],[\"@@ɟsƖʾš\"],[\"@@̯ĜȠŮŐɉ\"],[\"@@Τ̓͗ėčʹǓØ¢ǐŖÞƯ\"],[\"@@ȥ_ˠƚùŹ\"],[\"@@Ä˥ɠȆŀэęř˯§ŃȎÁٜƬƹ\"],[\"@@ŻgĈĄ²àĳ\"],[\"@@ąĲöâPǓ\"]],\"encodeOffsets\":[[[173560,-20009]],[[173399,-19394]],[[172489,-17963]],[[172490,-17181]],[[172336,-16728]],[[171431,-16482]],[[171942,-15806]],[[170748,-15182]],[[171607,-14603]],[[171509,-14240]]]},\"properties\":{\"name\":\"Vanuatu\",\"childNum\":10}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ϧœŨϊmŲƕ\"],[\"@@ƀȁ¡ĳʻZȱɲϐª\"]],\"encodeOffsets\":[[[-175569,-14383]],[[-176469,-13788]]]},\"properties\":{\"name\":\"Samoa\",\"childNum\":2}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@Τv˘ġ͍ǉ·͹ǶȀƶȔß\"],[\"@@ÇĖþ½\"],[\"@@ÿÌºtą\"],[\"@@ُ̕Ź˱ʧݧίဇӳֳӳ֭Cӧ͗ԳǑोŃԳѭΝBԥǫ̷Řūɋӌ¨ΨǋˌŹެãǎǕČŢĀçˠĺ̈́˸̬ˊv֜ȒƂмǇਚĒ͚Ŀ৊ȼʽƖMʤƒŚ˲ӾתܶΦូΒजጉ\"]],\"encodeOffsets\":[[[55054,12941]],[[43783,14034]],[[43815,14307]],[[54360,17048]]]},\"properties\":{\"name\":\"Yemen\",\"childNum\":4}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@ɡǘÐÊę\"],[\"@@ƾӋÃ౑ӯǶŅóĳřʇεH̹ÜM°ĻŀǓǰŁǐ³ɰ]ǺHYŐlǴxŤ~NôyòLźyΤVĠD̏଍ȽΟߙٍ଩࿋౫ફହݫկȧԻnșʣӑ¾ƩǏșIݭƴίõ׵Òʷ·ϧʭੑùё˓؇ƞĺțŤɡ[áʀɃuȧğƄæІӧݞĪĴƆǜȴīٚܧઢͭ࢔ǭͨʕ͢ʶƒ¶nŌü¶¶ļŎďƞŗöέܨǁ܎«ìÊƚȐƄφļ@Ţ@ᲄϜ̵̦٥ŷ۝ĊęߤP¨ĆȈØä²łǈɈƜÞ¦ɾ֦ɪƚȬEъʹÚsȊMŚğݐ[ʰĀͦޒĶČɠ¶°͒˼ɀ֎ֶήͮΐՊǴĘðÊĮİÆȠhZBʈ Ȭʎěɨɂ̦Uļú³ɐࣣɈ·\",\"@@Ɯ˳͞ˑʮÒĚɜ̈́ɊlϜǨȀŶŒ²ŀĺíȖ֧ђYģkȩïůßĿÿȉÇχӡȥęŘ˅\"]],\"encodeOffsets\":[[[38766,-48070]],[[32563,-24465],[27847,-30659]]]},\"properties\":{\"name\":\"South Africa\",\"childNum\":2}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ĐŽĐđ[ûuëǾǓRį`ĞƋ̳ʣòʱģȷ[Mįàſ©ΟôǏƠҋ̓Oѯʟ̫ńĉƸˏƖÌ®Ó᠁ࠑƐշޅ­ӗʓŷҙ̩۟މࢿȭéϑĦ˳إƪɍȌɥ¨ϩݧƇঽ࡚ǵ֢A౞@˒@˒@ڠȘ@൒@ĶZåǄH²pĜØފcܔͲɑXʋފǤ¼Ή֪ɡڢÙˮ͖Βխ۶ʓŜˋƮõʆϋǀ{̒ŲȄǃjંʋÓmǅΟÎӥҌċȶɘࡢܸǟϢЀτzʦ༔ʖâǇ¾õÜÝĞ»ɰJĊð¹lûİēȶFÝlۂɥƎíÜǷŸf\"],\"encodeOffsets\":[[33944,-9834]]},\"properties\":{\"name\":\"Zambia\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ǵḀ̄TɁ}ɩʍĜȩʇYA¥ßàǍ¾aȄࡗȲ́ЬTҼͯrđ͆ࡓӀȕԌבࠂ`ƨئƩ˴ϒĥȮêފࣀ̪۠ŸҚӘʔކ®̑ڢyעͽࡐʃÑƝĮఏʗӥŴƍÓʇǸԃп֥śЏÜƉࡁࡃšđ\"],\"encodeOffsets\":[[32039,-22939]]},\"properties\":{\"name\":\"Zimbabwe\",\"childNum\":1}},{\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[\"@@ڽը¿ުەߖ٬֖NΦxHޠцǒŴ\\\\ǔéº`Ęfú[ǜ¹~}¢ũYĨĀcĖÌ£¢áfÁnÛ½˩ƄÇÞŻ~eÖBŒvİ¤RXĩÌĄ§a÷Îŕ÷ĸȣ¡ıǽûsmQ}«»ď§řjʅõōDđ³Û«ŷ³அɘŅĭāuƕɳ`«Ī¢§NÙéõʠ{ɩɥƤǵšɇ\"],\"encodeOffsets\":[[75785,34052]]},\"properties\":{\"name\":\"\",\"childNum\":1}},{\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[\"@@͙̄͟ƹիԠύfʛϋӻýģлʫ@˭ƪǕIđmɜ\\\\cȝ`¥CƴˁȖƈʊƣǶɪɦʟ|öÜêO¡¨ĩ_¬ƖɴĂxĮņஆɗŸ´Ü¬Ĕ´ŌCʆöŚiĐ¨®¼P~tnǾü~Ðd¢̀ǊŰÜŀÄĒ¬Ȳ_́êǁƘ˹ҎǹÒĽȱǷ´ǡæͅìíƐĵn­ĵ§rчɃŝƑŢa¸ȵw\"]],\"encodeOffsets\":[[[80376,33312]]]},\"properties\":{\"name\":\"\",\"childNum\":1}}],\"UTF8Encoding\":true});}));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseSVG = _parseSVG.parseSVG;\nvar makeViewBoxTransform = _parseSVG.makeViewBoxTransform;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar createHashMap = _util.createHashMap;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {root, boundingRect}\n   */\n  load: function (mapName, mapRecord) {\n    var originRoot = inner(mapRecord).originRoot;\n\n    if (originRoot) {\n      return {\n        root: originRoot,\n        boundingRect: inner(mapRecord).boundingRect\n      };\n    }\n\n    var graphic = buildGraphic(mapRecord);\n    inner(mapRecord).originRoot = graphic.root;\n    inner(mapRecord).boundingRect = graphic.boundingRect;\n    return graphic;\n  },\n  makeGraphic: function (mapName, mapRecord, hostKey) {\n    // For performance consideration (in large SVG), graphic only maked\n    // when necessary and reuse them according to hostKey.\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap || (field.rootMap = createHashMap());\n    var root = rootMap.get(hostKey);\n\n    if (root) {\n      return root;\n    }\n\n    var originRoot = field.originRoot;\n    var boundingRect = field.boundingRect; // For performance, if originRoot is not used by a view,\n    // assign it to a view, but not reproduce graphic elements.\n\n    if (!field.originRootHostKey) {\n      field.originRootHostKey = hostKey;\n      root = originRoot;\n    } else {\n      root = buildGraphic(mapRecord, boundingRect).root;\n    }\n\n    return rootMap.set(hostKey, root);\n  },\n  removeGraphic: function (mapName, mapRecord, hostKey) {\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap;\n    rootMap && rootMap.removeKey(hostKey);\n\n    if (hostKey === field.originRootHostKey) {\n      field.originRootHostKey = null;\n    }\n  }\n};\n\nfunction buildGraphic(mapRecord, boundingRect) {\n  var svgXML = mapRecord.svgXML;\n  var result;\n  var root;\n\n  try {\n    result = svgXML && parseSVG(svgXML, {\n      ignoreViewBox: true,\n      ignoreRootClip: true\n    }) || {};\n    root = result.root;\n    assert(root != null);\n  } catch (e) {\n    throw new Error('Invalid svg format\\n' + e.message);\n  }\n\n  var svgWidth = result.width;\n  var svgHeight = result.height;\n  var viewBoxRect = result.viewBoxRect;\n\n  if (!boundingRect) {\n    boundingRect = svgWidth == null || svgHeight == null ? // If svg width / height not specified, calculate\n    // bounding rect as the width / height\n    root.getBoundingRect() : new BoundingRect(0, 0, 0, 0);\n\n    if (svgWidth != null) {\n      boundingRect.width = svgWidth;\n    }\n\n    if (svgHeight != null) {\n      boundingRect.height = svgHeight;\n    }\n  }\n\n  if (viewBoxRect) {\n    var viewBoxTransform = makeViewBoxTransform(viewBoxRect, boundingRect.width, boundingRect.height);\n    var elRoot = root;\n    root = new Group();\n    root.add(elRoot);\n    elRoot.scale = viewBoxTransform.scale;\n    elRoot.position = viewBoxTransform.position;\n  }\n\n  root.setClipPath(new Rect({\n    shape: boundingRect.plain()\n  }));\n  return {\n    root: root,\n    boundingRect: boundingRect\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (!dataDims.length) {\n        return;\n      }\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8ClampedArray */\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n\n    if (option.focusNodeAdjacency === true) {\n      option.focusNodeAdjacency = 'allEdges';\n    }\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // The position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // Value can be 'vertical'\n    orient: 'horizontal',\n    // The dx of the node\n    nodeWidth: 20,\n    // The vertical distance between two nodes\n    nodeGap: 8,\n    // Control if the node can move or not\n    draggable: true,\n    // Value can be 'inEdges', 'outEdges', 'allEdges', true (the same as 'allEdges').\n    focusNodeAdjacency: false,\n    // The number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series:unfocusNodeAdjacency'\n}, function () {});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    /* eslint-disable */\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n    /* eslint-enable */\n\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar';\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\nrequire(\"../helper/focusNodeAdjacencyAction\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n\n  /* eslint-disable */\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n\n  /* eslint-enable */\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar SeriesModel = require(\"../model/Series\");\n\nvar ChartView = require(\"../view/Chart\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\nSeriesModel.extend({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    useTransform: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n\n  /**\n   * @override\n   */\n  getDataParams: function (dataIndex, dataType, el) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    el && (params.info = el.info);\n    return params;\n  }\n}); // -----\n// View\n// -----\n\nChartView.extend({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api, payload) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api); // By default, merge mode is applied. In most cases, custom series is\n    // used in the scenario that data amount is not large but graphic elements\n    // is complicated, where merge mode is probably necessary for optimization.\n    // For example, reuse graphic elements and only update the transform when\n    // roam or data zoom according to `actionType`.\n\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api, payload) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx, payload), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop,\n\n  /**\n   * @override\n   */\n  filterForExposedEvent: function (eventType, query, targetEl, packedEvent) {\n    var elementName = query.element;\n\n    if (elementName == null || targetEl.name === elementName) {\n      return true;\n    } // Enable to give a name on a group made by `renderItem`, and listen\n    // events that triggerd by its descendents.\n\n\n    while ((targetEl = targetEl.parent) && targetEl !== this.group) {\n      if (targetEl.name === elementName) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape; // Using pathRect brings convenience to users sacle svg path.\n\n    var pathRect = shape.width != null && shape.height != null ? {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width,\n      height: shape.height\n    } : null;\n    var pathData = getPathData(shape); // Path is also used for icon, so layout 'center' by default.\n\n    el = graphicUtil.makePath(pathData, null, pathRect, shape.layout || 'center');\n    el.__customPathData = pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot) {\n  var transitionProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (transitionProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (transitionProps.position = elOption.position.slice());\n  elOption.scale && (transitionProps.scale = elOption.scale.slice());\n  elOption.origin && (transitionProps.origin = elOption.origin.slice());\n  elOption.rotation && (transitionProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = transitionProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = transitionProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(transitionProps);\n  } else {\n    graphicUtil.updateProps(el, transitionProps, animatableModel, dataIndex);\n  } // Merge by default.\n  // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  elOption.hasOwnProperty('z2') && el.attr('z2', elOption.z2 || 0);\n  elOption.hasOwnProperty('silent') && el.attr('silent', elOption.silent);\n  elOption.hasOwnProperty('invisible') && el.attr('invisible', elOption.invisible);\n  elOption.hasOwnProperty('ignore') && el.attr('ignore', elOption.ignore); // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n  // Update them only when user specified, otherwise, remain.\n\n  elOption.hasOwnProperty('info') && el.attr('info', elOption.info); // If `elOption.styleEmphasis` is `false`, remove hover style. The\n  // logic is ensured by `graphicUtil.setElementHoverStyle`.\n\n  var styleEmphasis = elOption.styleEmphasis;\n  var disableStyleEmphasis = styleEmphasis === false;\n\n  if (!( // Try to escapse setting hover style for performance.\n  el.__cusHasEmphStl && styleEmphasis == null || !el.__cusHasEmphStl && disableStyleEmphasis)) {\n    // Should not use graphicUtil.setHoverStyle, since the styleEmphasis\n    // should not be share by group and its descendants.\n    graphicUtil.setElementHoverStyle(el, styleEmphasis);\n    el.__cusHasEmphStl = !disableStyleEmphasis;\n  }\n\n  isRoot && graphicUtil.setAsHoverStyleTrigger(el, !disableStyleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    // The life cycle of context: current round of rendering.\n    // The global life cycle is probably not necessary, because\n    // user can store global status by themselves.\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside, payload) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside),\n      // Can be used for optimization when zoom or roam.\n      actionType: payload ? payload.type : null\n    }, userParams), userAPI);\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, true);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data, isRoot) {\n  // [Rule]\n  // By default, follow merge mode.\n  //     (It probably brings benifit for performance in some cases of large data, where\n  //     user program can be optimized to that only updated props needed to be re-calculated,\n  //     or according to `actionType` some calculation can be skipped.)\n  // If `renderItem` returns `null`/`undefined`/`false`, remove the previous el if existing.\n  //     (It seems that violate the \"merge\" principle, but most of users probably intuitively\n  //     regard \"return;\" as \"show nothing element whatever\", so make a exception to meet the\n  //     most cases.)\n  var simplyRemove = !elOption; // `null`/`undefined`/`false`\n\n  elOption = elOption || {};\n  var elOptionType = elOption.type;\n  var elOptionShape = elOption.shape;\n  var elOptionStyle = elOption.style;\n\n  if (el && (simplyRemove // || elOption.$merge === false\n  // If `elOptionType` is `null`, follow the merge principle.\n  || elOptionType != null && elOptionType !== el.__customGraphicType || elOptionType === 'path' && hasOwnPathData(elOptionShape) && getPathData(elOptionShape) !== el.__customPathData || elOptionType === 'image' && hasOwn(elOptionStyle, 'image') && elOptionStyle.image !== el.__customImagePath // FIXME test and remove this restriction?\n  || elOptionType === 'text' && hasOwn(elOptionShape, 'text') && elOptionStyle.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (simplyRemove) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit, isRoot);\n\n  if (elOptionType === 'group') {\n    mergeChildren(el, dataIndex, elOption, animatableModel, data);\n  } // Always add whatever already added to ensure sequence.\n\n\n  group.add(el);\n  return el;\n} // Usage:\n// (1) By default, `elOption.$mergeChildren` is `'byIndex'`, which indicates that\n//     the existing children will not be removed, and enables the feature that\n//     update some of the props of some of the children simply by construct\n//     the returned children of `renderItem` like:\n//     `var children = group.children = []; children[3] = {opacity: 0.5};`\n// (2) If `elOption.$mergeChildren` is `'byName'`, add/update/remove children\n//     by child.name. But that might be lower performance.\n// (3) If `elOption.$mergeChildren` is `false`, the existing children will be\n//     replaced totally.\n// (4) If `!elOption.children`, following the \"merge\" principle, nothing will happen.\n//\n// For implementation simpleness, do not provide a direct way to remove sinlge\n// child (otherwise the total indicies of the children array have to be modified).\n// User can remove a single child by set its `ignore` as `true` or replace\n// it by another element, where its `$merge` can be set as `true` if necessary.\n\n\nfunction mergeChildren(el, dataIndex, elOption, animatableModel, data) {\n  var newChildren = elOption.children;\n  var newLen = newChildren ? newChildren.length : 0;\n  var mergeChildren = elOption.$mergeChildren; // `diffChildrenByName` has been deprecated.\n\n  var byName = mergeChildren === 'byName' || elOption.diffChildrenByName;\n  var notMerge = mergeChildren === false; // For better performance on roam update, only enter if necessary.\n\n  if (!newLen && !byName && !notMerge) {\n    return;\n  }\n\n  if (byName) {\n    diffGroupChildren({\n      oldChildren: el.children() || [],\n      newChildren: newChildren || [],\n      dataIndex: dataIndex,\n      animatableModel: animatableModel,\n      group: el,\n      data: data\n    });\n    return;\n  }\n\n  notMerge && el.removeAll(); // Mapping children of a group simply by index, which\n  // might be better performance.\n\n  var index = 0;\n\n  for (; index < newLen; index++) {\n    newChildren[index] && doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n  }\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\nfunction getPathData(shape) {\n  // \"d\" follows the SVG convention.\n  return shape && (shape.pathData || shape.d);\n}\n\nfunction hasOwnPathData(shape) {\n  return shape && (shape.hasOwnProperty('pathData') || shape.hasOwnProperty('d'));\n}\n\nfunction hasOwn(host, prop) {\n  return host && host.hasOwnProperty(prop);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nfunction getTooltipRenderMode(renderModeOption) {\n  if (renderModeOption === 'auto') {\n    // Using html when `document` exists, use richText otherwise\n    return env.domSupported ? 'html' : 'richText';\n  } else {\n    return renderModeOption || 'html';\n  }\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\nexports.getTooltipRenderMode = getTooltipRenderMode;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {Object} params See taskParams in `stream/task.js`\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null,\n\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseXML = _parseSVG.parseXML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function (record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Text from 'zrender/src/graphic/Text';\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n  var renderMode = opt.renderMode || 'html';\n  var markerId = opt.markerId || 'X';\n\n  if (!color) {\n    return '';\n  }\n\n  if (renderMode === 'html') {\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n  } else {\n    // Space for rich element marker\n    return {\n      renderMode: renderMode,\n      content: '{marker' + markerId + '|}  ',\n      style: {\n        color: color\n      }\n    };\n  }\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var aspectScale = geoModel.get('aspectScale');\n      var invertLongitute = true;\n      var mapRecords = mapDataStorage.retrieveMap(name);\n\n      if (mapRecords && mapRecords[0] && mapRecords[0].type === 'svg') {\n        aspectScale == null && (aspectScale = 1);\n        invertLongitute = false;\n      } else {\n        aspectScale == null && (aspectScale = 0.75);\n      }\n\n      var geo = new Geo(name + idx, name, geoModel.get('nameMap'), invertLongitute);\n      geo.aspectScale = aspectScale;\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.aspectScale = mapSeries[0].get('aspectScale');\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    var source = geoSourceManager.load(mapName, nameMap);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      !dataNameMap.get(name) && regionsArr.push({\n        name: name\n      });\n    });\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* The layout implementation references to d3.js. The use of\n* the source code of this file is also subject to the terms\n* and consitions of its license (BSD-3Clause, see\n* <echarts/src/licenses/LICENSE-d3>).\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string|Region} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  },\n  cloneShallow: function (name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    componentIndex: seriesModel.componentIndex,\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    /* eslint-disable */\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n    /* eslint-enable */\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\n/* eslint-disable */\n\nproto.render =\n/* eslint-enable */\nproto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}